{"ast":null,"code":"import ENGLISH from './i18n';\nimport { RRule } from '../rrule';\n// =============================================================================\n// Parser\n// =============================================================================\nvar Parser = /** @class */function () {\n  function Parser(rules) {\n    this.done = true;\n    this.rules = rules;\n  }\n  Parser.prototype.start = function (text) {\n    this.text = text;\n    this.done = false;\n    return this.nextSymbol();\n  };\n  Parser.prototype.isDone = function () {\n    return this.done && this.symbol === null;\n  };\n  Parser.prototype.nextSymbol = function () {\n    var best;\n    var bestSymbol;\n    this.symbol = null;\n    this.value = null;\n    do {\n      if (this.done) return false;\n      var rule = void 0;\n      best = null;\n      for (var name_1 in this.rules) {\n        rule = this.rules[name_1];\n        var match = rule.exec(this.text);\n        if (match) {\n          if (best === null || match[0].length > best[0].length) {\n            best = match;\n            bestSymbol = name_1;\n          }\n        }\n      }\n      if (best != null) {\n        this.text = this.text.substr(best[0].length);\n        if (this.text === '') this.done = true;\n      }\n      if (best == null) {\n        this.done = true;\n        this.symbol = null;\n        this.value = null;\n        return;\n      }\n    } while (bestSymbol === 'SKIP');\n    this.symbol = bestSymbol;\n    this.value = best;\n    return true;\n  };\n  Parser.prototype.accept = function (name) {\n    if (this.symbol === name) {\n      if (this.value) {\n        var v = this.value;\n        this.nextSymbol();\n        return v;\n      }\n      this.nextSymbol();\n      return true;\n    }\n    return false;\n  };\n  Parser.prototype.acceptNumber = function () {\n    return this.accept('number');\n  };\n  Parser.prototype.expect = function (name) {\n    if (this.accept(name)) return true;\n    throw new Error('expected ' + name + ' but found ' + this.symbol);\n  };\n  return Parser;\n}();\nexport default function parseText(text, language) {\n  if (language === void 0) {\n    language = ENGLISH;\n  }\n  var options = {};\n  var ttr = new Parser(language.tokens);\n  if (!ttr.start(text)) return null;\n  S();\n  return options;\n  function S() {\n    // every [n]\n    ttr.expect('every');\n    var n = ttr.acceptNumber();\n    if (n) options.interval = parseInt(n[0], 10);\n    if (ttr.isDone()) throw new Error('Unexpected end');\n    switch (ttr.symbol) {\n      case 'day(s)':\n        options.freq = RRule.DAILY;\n        if (ttr.nextSymbol()) {\n          AT();\n          F();\n        }\n        break;\n      // FIXME Note: every 2 weekdays != every two weeks on weekdays.\n      // DAILY on weekdays is not a valid rule\n      case 'weekday(s)':\n        options.freq = RRule.WEEKLY;\n        options.byweekday = [RRule.MO, RRule.TU, RRule.WE, RRule.TH, RRule.FR];\n        ttr.nextSymbol();\n        F();\n        break;\n      case 'week(s)':\n        options.freq = RRule.WEEKLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'hour(s)':\n        options.freq = RRule.HOURLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'minute(s)':\n        options.freq = RRule.MINUTELY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'month(s)':\n        options.freq = RRule.MONTHLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'year(s)':\n        options.freq = RRule.YEARLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'monday':\n      case 'tuesday':\n      case 'wednesday':\n      case 'thursday':\n      case 'friday':\n      case 'saturday':\n      case 'sunday':\n        options.freq = RRule.WEEKLY;\n        var key = ttr.symbol.substr(0, 2).toUpperCase();\n        options.byweekday = [RRule[key]];\n        if (!ttr.nextSymbol()) return;\n        // TODO check for duplicates\n        while (ttr.accept('comma')) {\n          if (ttr.isDone()) throw new Error('Unexpected end');\n          var wkd = decodeWKD();\n          if (!wkd) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + ', expected weekday');\n          }\n          options.byweekday.push(RRule[wkd]);\n          ttr.nextSymbol();\n        }\n        MDAYs();\n        F();\n        break;\n      case 'january':\n      case 'february':\n      case 'march':\n      case 'april':\n      case 'may':\n      case 'june':\n      case 'july':\n      case 'august':\n      case 'september':\n      case 'october':\n      case 'november':\n      case 'december':\n        options.freq = RRule.YEARLY;\n        options.bymonth = [decodeM()];\n        if (!ttr.nextSymbol()) return;\n        // TODO check for duplicates\n        while (ttr.accept('comma')) {\n          if (ttr.isDone()) throw new Error('Unexpected end');\n          var m = decodeM();\n          if (!m) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + ', expected month');\n          }\n          options.bymonth.push(m);\n          ttr.nextSymbol();\n        }\n        ON();\n        F();\n        break;\n      default:\n        throw new Error('Unknown symbol');\n    }\n  }\n  function ON() {\n    var on = ttr.accept('on');\n    var the = ttr.accept('the');\n    if (!(on || the)) return;\n    do {\n      var nth = decodeNTH();\n      var wkd = decodeWKD();\n      var m = decodeM();\n      // nth <weekday> | <weekday>\n      if (nth) {\n        // ttr.nextSymbol()\n        if (wkd) {\n          ttr.nextSymbol();\n          if (!options.byweekday) options.byweekday = [];\n          options.byweekday.push(RRule[wkd].nth(nth));\n        } else {\n          if (!options.bymonthday) options.bymonthday = [];\n          options.bymonthday.push(nth);\n          ttr.accept('day(s)');\n        }\n        // <weekday>\n      } else if (wkd) {\n        ttr.nextSymbol();\n        if (!options.byweekday) options.byweekday = [];\n        options.byweekday.push(RRule[wkd]);\n      } else if (ttr.symbol === 'weekday(s)') {\n        ttr.nextSymbol();\n        if (!options.byweekday) {\n          options.byweekday = [RRule.MO, RRule.TU, RRule.WE, RRule.TH, RRule.FR];\n        }\n      } else if (ttr.symbol === 'week(s)') {\n        ttr.nextSymbol();\n        var n = ttr.acceptNumber();\n        if (!n) {\n          throw new Error('Unexpected symbol ' + ttr.symbol + ', expected week number');\n        }\n        options.byweekno = [parseInt(n[0], 10)];\n        while (ttr.accept('comma')) {\n          n = ttr.acceptNumber();\n          if (!n) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');\n          }\n          options.byweekno.push(parseInt(n[0], 10));\n        }\n      } else if (m) {\n        ttr.nextSymbol();\n        if (!options.bymonth) options.bymonth = [];\n        options.bymonth.push(m);\n      } else {\n        return;\n      }\n    } while (ttr.accept('comma') || ttr.accept('the') || ttr.accept('on'));\n  }\n  function AT() {\n    var at = ttr.accept('at');\n    if (!at) return;\n    do {\n      var n = ttr.acceptNumber();\n      if (!n) {\n        throw new Error('Unexpected symbol ' + ttr.symbol + ', expected hour');\n      }\n      options.byhour = [parseInt(n[0], 10)];\n      while (ttr.accept('comma')) {\n        n = ttr.acceptNumber();\n        if (!n) {\n          throw new Error('Unexpected symbol ' + ttr.symbol + '; expected hour');\n        }\n        options.byhour.push(parseInt(n[0], 10));\n      }\n    } while (ttr.accept('comma') || ttr.accept('at'));\n  }\n  function decodeM() {\n    switch (ttr.symbol) {\n      case 'january':\n        return 1;\n      case 'february':\n        return 2;\n      case 'march':\n        return 3;\n      case 'april':\n        return 4;\n      case 'may':\n        return 5;\n      case 'june':\n        return 6;\n      case 'july':\n        return 7;\n      case 'august':\n        return 8;\n      case 'september':\n        return 9;\n      case 'october':\n        return 10;\n      case 'november':\n        return 11;\n      case 'december':\n        return 12;\n      default:\n        return false;\n    }\n  }\n  function decodeWKD() {\n    switch (ttr.symbol) {\n      case 'monday':\n      case 'tuesday':\n      case 'wednesday':\n      case 'thursday':\n      case 'friday':\n      case 'saturday':\n      case 'sunday':\n        return ttr.symbol.substr(0, 2).toUpperCase();\n      default:\n        return false;\n    }\n  }\n  function decodeNTH() {\n    switch (ttr.symbol) {\n      case 'last':\n        ttr.nextSymbol();\n        return -1;\n      case 'first':\n        ttr.nextSymbol();\n        return 1;\n      case 'second':\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -2 : 2;\n      case 'third':\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -3 : 3;\n      case 'nth':\n        var v = parseInt(ttr.value[1], 10);\n        if (v < -366 || v > 366) throw new Error('Nth out of range: ' + v);\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -v : v;\n      default:\n        return false;\n    }\n  }\n  function MDAYs() {\n    ttr.accept('on');\n    ttr.accept('the');\n    var nth = decodeNTH();\n    if (!nth) return;\n    options.bymonthday = [nth];\n    ttr.nextSymbol();\n    while (ttr.accept('comma')) {\n      nth = decodeNTH();\n      if (!nth) {\n        throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');\n      }\n      options.bymonthday.push(nth);\n      ttr.nextSymbol();\n    }\n  }\n  function F() {\n    if (ttr.symbol === 'until') {\n      var date = Date.parse(ttr.text);\n      if (!date) throw new Error('Cannot parse until date:' + ttr.text);\n      options.until = new Date(date);\n    } else if (ttr.accept('for')) {\n      options.count = parseInt(ttr.value[0], 10);\n      ttr.expect('number');\n      // ttr.expect('times')\n    }\n  }\n}","map":{"version":3,"mappings":"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","names":["ENGLISH","RRule","rules","Parser","text","done","nextSymbol","symbol","best","bestSymbol","value","rule","name_1","match","exec","length","substr","name","v","accept","Error","parseText","language","options","ttr","tokens","start","S","expect","n","acceptNumber","interval","parseInt","isDone","freq","DAILY","AT","F","WEEKLY","byweekday","MO","TU","WE","TH","FR","ON","HOURLY","MINUTELY","MONTHLY","YEARLY","key","toUpperCase","wkd","decodeWKD","push","MDAYs","bymonth","decodeM","m","on","the","nth","decodeNTH","bymonthday","byweekno","at","byhour","date","Date","parse","until","count"],"sources":["../../../src/nlp/parsetext.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}