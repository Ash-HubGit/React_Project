{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOpenState = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst useOpenState = _ref => {\n  let {\n    open,\n    onOpen,\n    onClose\n  } = _ref;\n  const isControllingOpenProp = React.useRef(typeof open === 'boolean').current;\n  const [openState, setIsOpenState] = React.useState(false); // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (e.g. initially opened)\n\n  React.useEffect(() => {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n      setIsOpenState(open);\n    }\n  }, [isControllingOpenProp, open]);\n  const setIsOpen = React.useCallback(newIsOpen => {\n    if (!isControllingOpenProp) {\n      setIsOpenState(newIsOpen);\n    }\n    if (newIsOpen && onOpen) {\n      onOpen();\n    }\n    if (!newIsOpen && onClose) {\n      onClose();\n    }\n  }, [isControllingOpenProp, onOpen, onClose]);\n  return {\n    isOpen: openState,\n    setIsOpen\n  };\n};\nexports.useOpenState = useOpenState;","map":{"version":3,"names":["Object","defineProperty","exports","value","useOpenState","React","_interopRequireWildcard","require","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","open","onOpen","onClose","isControllingOpenProp","useRef","current","openState","setIsOpenState","useState","useEffect","Error","setIsOpen","useCallback","newIsOpen","isOpen"],"sources":["/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@mui/x-date-pickers/node/internals/hooks/useOpenState.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOpenState = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst useOpenState = ({\n  open,\n  onOpen,\n  onClose\n}) => {\n  const isControllingOpenProp = React.useRef(typeof open === 'boolean').current;\n  const [openState, setIsOpenState] = React.useState(false); // It is required to update inner state in useEffect in order to avoid situation when\n  // Our component is not mounted yet, but `open` state is set to `true` (e.g. initially opened)\n\n  React.useEffect(() => {\n    if (isControllingOpenProp) {\n      if (typeof open !== 'boolean') {\n        throw new Error('You must not mix controlling and uncontrolled mode for `open` prop');\n      }\n\n      setIsOpenState(open);\n    }\n  }, [isControllingOpenProp, open]);\n  const setIsOpen = React.useCallback(newIsOpen => {\n    if (!isControllingOpenProp) {\n      setIsOpenState(newIsOpen);\n    }\n\n    if (newIsOpen && onOpen) {\n      onOpen();\n    }\n\n    if (!newIsOpen && onClose) {\n      onClose();\n    }\n  }, [isControllingOpenProp, onOpen, onClose]);\n  return {\n    isOpen: openState,\n    setIsOpen\n  };\n};\n\nexports.useOpenState = useOpenState;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}