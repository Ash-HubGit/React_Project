{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beBY = void 0;\nvar _getPickersLocalization = require(\"./utils/getPickersLocalization\");\nconst views = {\n  // maps TimeView to its translation\n  hours: 'гадзіны',\n  minutes: 'хвіліны',\n  seconds: 'секунды',\n  // maps PickersToolbar[\"viewType\"] to its translation\n  calendar: 'календара',\n  clock: 'часу'\n};\nconst beBYPickers = {\n  // Calendar navigation\n  previousMonth: 'Папярэдні месяц',\n  nextMonth: 'Наступны месяц',\n  // View navigation\n  openPreviousView: 'адкрыць папярэдні выгляд',\n  openNextView: 'адкрыць наступны выгляд',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'гадавы выгляд адкрыты, перайсці да каляндарнага выгляду' : 'каляндарны выгляд адкрыты, перайсці да гадавога выгляду',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `тэкставае поле адкрыта, перайсці да выгляду ${views[viewType]}` : `Выгляд ${views[viewType]} зараз адкрыты, перайсці да тэкставага поля`,\n  // DateRange placeholders\n  start: 'Пачатак',\n  end: 'Канец',\n  // Action bar\n  cancelButtonLabel: 'Адмена',\n  clearButtonLabel: 'Ачысціць',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Сёння',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Абраць дату',\n  dateTimePickerDefaultToolbarTitle: 'Абраць дату і час',\n  timePickerDefaultToolbarTitle: 'Абраць час',\n  dateRangePickerDefaultToolbarTitle: 'Абраць каляндарны перыяд',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Абярыце ${views[view]}. ${time === null ? 'Час не абраны' : `Абраны час ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} гадзін`,\n  minutesClockNumberText: minutes => `${minutes} хвілін`,\n  secondsClockNumberText: seconds => `${seconds} секунд`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Абраць дату, абрана дата  ${utils.format(value, 'fullDate')}` : 'Абраць дату',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Абраць час, абрыны час  ${utils.format(value, 'fullTime')}` : 'Абраць час',\n  // Table labels\n  timeTableLabel: 'абраць час',\n  dateTableLabel: 'абраць дату'\n};\nconst beBY = (0, _getPickersLocalization.getPickersLocalization)(beBYPickers);\nexports.beBY = beBY;","map":{"version":3,"names":["Object","defineProperty","exports","value","beBY","_getPickersLocalization","require","views","hours","minutes","seconds","calendar","clock","beBYPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","inputModeToggleButtonAriaLabel","isKeyboardInputOpen","viewType","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerDefaultToolbarTitle","dateTimePickerDefaultToolbarTitle","timePickerDefaultToolbarTitle","dateRangePickerDefaultToolbarTitle","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","getPickersLocalization"],"sources":["/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@mui/x-date-pickers/node/locales/beBY.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.beBY = void 0;\n\nvar _getPickersLocalization = require(\"./utils/getPickersLocalization\");\n\nconst views = {\n  // maps TimeView to its translation\n  hours: 'гадзіны',\n  minutes: 'хвіліны',\n  seconds: 'секунды',\n  // maps PickersToolbar[\"viewType\"] to its translation\n  calendar: 'календара',\n  clock: 'часу'\n};\nconst beBYPickers = {\n  // Calendar navigation\n  previousMonth: 'Папярэдні месяц',\n  nextMonth: 'Наступны месяц',\n  // View navigation\n  openPreviousView: 'адкрыць папярэдні выгляд',\n  openNextView: 'адкрыць наступны выгляд',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'гадавы выгляд адкрыты, перайсці да каляндарнага выгляду' : 'каляндарны выгляд адкрыты, перайсці да гадавога выгляду',\n  inputModeToggleButtonAriaLabel: (isKeyboardInputOpen, viewType) => isKeyboardInputOpen ? `тэкставае поле адкрыта, перайсці да выгляду ${views[viewType]}` : `Выгляд ${views[viewType]} зараз адкрыты, перайсці да тэкставага поля`,\n  // DateRange placeholders\n  start: 'Пачатак',\n  end: 'Канец',\n  // Action bar\n  cancelButtonLabel: 'Адмена',\n  clearButtonLabel: 'Ачысціць',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Сёння',\n  // Toolbar titles\n  datePickerDefaultToolbarTitle: 'Абраць дату',\n  dateTimePickerDefaultToolbarTitle: 'Абраць дату і час',\n  timePickerDefaultToolbarTitle: 'Абраць час',\n  dateRangePickerDefaultToolbarTitle: 'Абраць каляндарны перыяд',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Абярыце ${views[view]}. ${time === null ? 'Час не абраны' : `Абраны час ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} гадзін`,\n  minutesClockNumberText: minutes => `${minutes} хвілін`,\n  secondsClockNumberText: seconds => `${seconds} секунд`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Абраць дату, абрана дата  ${utils.format(value, 'fullDate')}` : 'Абраць дату',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Абраць час, абрыны час  ${utils.format(value, 'fullTime')}` : 'Абраць час',\n  // Table labels\n  timeTableLabel: 'абраць час',\n  dateTableLabel: 'абраць дату'\n};\nconst beBY = (0, _getPickersLocalization.getPickersLocalization)(beBYPickers);\nexports.beBY = beBY;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,IAAI,GAAG,KAAK,CAAC;AAErB,IAAIC,uBAAuB,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AAEvE,MAAMC,KAAK,GAAG;EACZ;EACAC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE,SAAS;EAClBC,OAAO,EAAE,SAAS;EAClB;EACAC,QAAQ,EAAE,WAAW;EACrBC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,iBAAiB;EAChCC,SAAS,EAAE,gBAAgB;EAC3B;EACAC,gBAAgB,EAAE,0BAA0B;EAC5CC,YAAY,EAAE,yBAAyB;EACvCC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAM,GAAG,yDAAyD,GAAG,yDAAyD;EACrLC,8BAA8B,EAAE,CAACC,mBAAmB,EAAEC,QAAQ,KAAKD,mBAAmB,GAAI,+CAA8Cd,KAAK,CAACe,QAAQ,CAAE,EAAC,GAAI,UAASf,KAAK,CAACe,QAAQ,CAAE,6CAA4C;EAClO;EACAC,KAAK,EAAE,SAAS;EAChBC,GAAG,EAAE,OAAO;EACZ;EACAC,iBAAiB,EAAE,QAAQ;EAC3BC,gBAAgB,EAAE,UAAU;EAC5BC,aAAa,EAAE,IAAI;EACnBC,gBAAgB,EAAE,OAAO;EACzB;EACAC,6BAA6B,EAAE,aAAa;EAC5CC,iCAAiC,EAAE,mBAAmB;EACtDC,6BAA6B,EAAE,YAAY;EAC3CC,kCAAkC,EAAE,0BAA0B;EAC9D;EACAC,cAAc,EAAE,CAACd,IAAI,EAAEe,IAAI,EAAEC,OAAO,KAAM,WAAU5B,KAAK,CAACY,IAAI,CAAE,KAAIe,IAAI,KAAK,IAAI,GAAG,eAAe,GAAI,cAAaC,OAAO,CAACC,MAAM,CAACF,IAAI,EAAE,UAAU,CAAE,EAAE,EAAC;EACxJG,oBAAoB,EAAE7B,KAAK,IAAK,GAAEA,KAAM,SAAQ;EAChD8B,sBAAsB,EAAE7B,OAAO,IAAK,GAAEA,OAAQ,SAAQ;EACtD8B,sBAAsB,EAAE7B,OAAO,IAAK,GAAEA,OAAQ,SAAQ;EACtD;EACA8B,sBAAsB,EAAE,CAACrC,KAAK,EAAEsC,KAAK,KAAKtC,KAAK,KAAK,IAAI,IAAIsC,KAAK,CAACC,OAAO,CAACvC,KAAK,CAAC,GAAI,6BAA4BsC,KAAK,CAACL,MAAM,CAACjC,KAAK,EAAE,UAAU,CAAE,EAAC,GAAG,aAAa;EACjKwC,sBAAsB,EAAE,CAACxC,KAAK,EAAEsC,KAAK,KAAKtC,KAAK,KAAK,IAAI,IAAIsC,KAAK,CAACC,OAAO,CAACvC,KAAK,CAAC,GAAI,2BAA0BsC,KAAK,CAACL,MAAM,CAACjC,KAAK,EAAE,UAAU,CAAE,EAAC,GAAG,YAAY;EAC9J;EACAyC,cAAc,EAAE,YAAY;EAC5BC,cAAc,EAAE;AAClB,CAAC;AACD,MAAMzC,IAAI,GAAG,CAAC,CAAC,EAAEC,uBAAuB,CAACyC,sBAAsB,EAAEjC,WAAW,CAAC;AAC7EX,OAAO,CAACE,IAAI,GAAGA,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}