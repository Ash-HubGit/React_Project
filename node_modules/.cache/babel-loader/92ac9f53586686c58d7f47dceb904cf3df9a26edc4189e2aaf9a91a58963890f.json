{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSecondsInDay = exports.getMeridiem = exports.createIsAfterIgnoreDatePart = exports.convertValueToMeridiem = exports.convertToMeridiem = void 0;\nconst getMeridiem = (date, utils) => {\n  if (!date) {\n    return null;\n  }\n  return utils.getHours(date) >= 12 ? 'pm' : 'am';\n};\nexports.getMeridiem = getMeridiem;\nconst convertValueToMeridiem = (value, meridiem, ampm) => {\n  if (ampm) {\n    const currentMeridiem = value >= 12 ? 'pm' : 'am';\n    if (currentMeridiem !== meridiem) {\n      return meridiem === 'am' ? value - 12 : value + 12;\n    }\n  }\n  return value;\n};\nexports.convertValueToMeridiem = convertValueToMeridiem;\nconst convertToMeridiem = (time, meridiem, ampm, utils) => {\n  const newHoursAmount = convertValueToMeridiem(utils.getHours(time), meridiem, ampm);\n  return utils.setHours(time, newHoursAmount);\n};\nexports.convertToMeridiem = convertToMeridiem;\nconst getSecondsInDay = (date, utils) => {\n  return utils.getHours(date) * 3600 + utils.getMinutes(date) * 60 + utils.getSeconds(date);\n};\nexports.getSecondsInDay = getSecondsInDay;\nconst createIsAfterIgnoreDatePart = function () {\n  let disableIgnoringDatePartForTimeValidation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let utils = arguments.length > 1 ? arguments[1] : undefined;\n  return (dateLeft, dateRight) => {\n    if (disableIgnoringDatePartForTimeValidation) {\n      return utils.isAfter(dateLeft, dateRight);\n    }\n    return getSecondsInDay(dateLeft, utils) > getSecondsInDay(dateRight, utils);\n  };\n};\nexports.createIsAfterIgnoreDatePart = createIsAfterIgnoreDatePart;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSecondsInDay","getMeridiem","createIsAfterIgnoreDatePart","convertValueToMeridiem","convertToMeridiem","date","utils","getHours","meridiem","ampm","currentMeridiem","time","newHoursAmount","setHours","getMinutes","getSeconds","disableIgnoringDatePartForTimeValidation","dateLeft","dateRight","isAfter"],"sources":["/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@mui/x-date-pickers/node/internals/utils/time-utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSecondsInDay = exports.getMeridiem = exports.createIsAfterIgnoreDatePart = exports.convertValueToMeridiem = exports.convertToMeridiem = void 0;\n\nconst getMeridiem = (date, utils) => {\n  if (!date) {\n    return null;\n  }\n\n  return utils.getHours(date) >= 12 ? 'pm' : 'am';\n};\n\nexports.getMeridiem = getMeridiem;\n\nconst convertValueToMeridiem = (value, meridiem, ampm) => {\n  if (ampm) {\n    const currentMeridiem = value >= 12 ? 'pm' : 'am';\n\n    if (currentMeridiem !== meridiem) {\n      return meridiem === 'am' ? value - 12 : value + 12;\n    }\n  }\n\n  return value;\n};\n\nexports.convertValueToMeridiem = convertValueToMeridiem;\n\nconst convertToMeridiem = (time, meridiem, ampm, utils) => {\n  const newHoursAmount = convertValueToMeridiem(utils.getHours(time), meridiem, ampm);\n  return utils.setHours(time, newHoursAmount);\n};\n\nexports.convertToMeridiem = convertToMeridiem;\n\nconst getSecondsInDay = (date, utils) => {\n  return utils.getHours(date) * 3600 + utils.getMinutes(date) * 60 + utils.getSeconds(date);\n};\n\nexports.getSecondsInDay = getSecondsInDay;\n\nconst createIsAfterIgnoreDatePart = (disableIgnoringDatePartForTimeValidation = false, utils) => (dateLeft, dateRight) => {\n  if (disableIgnoringDatePartForTimeValidation) {\n    return utils.isAfter(dateLeft, dateRight);\n  }\n\n  return getSecondsInDay(dateLeft, utils) > getSecondsInDay(dateRight, utils);\n};\n\nexports.createIsAfterIgnoreDatePart = createIsAfterIgnoreDatePart;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,2BAA2B,GAAGJ,OAAO,CAACK,sBAAsB,GAAGL,OAAO,CAACM,iBAAiB,GAAG,KAAK,CAAC;AAEzJ,MAAMH,WAAW,GAAG,CAACI,IAAI,EAAEC,KAAK,KAAK;EACnC,IAAI,CAACD,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EAEA,OAAOC,KAAK,CAACC,QAAQ,CAACF,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;AACjD,CAAC;AAEDP,OAAO,CAACG,WAAW,GAAGA,WAAW;AAEjC,MAAME,sBAAsB,GAAG,CAACJ,KAAK,EAAES,QAAQ,EAAEC,IAAI,KAAK;EACxD,IAAIA,IAAI,EAAE;IACR,MAAMC,eAAe,GAAGX,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IAEjD,IAAIW,eAAe,KAAKF,QAAQ,EAAE;MAChC,OAAOA,QAAQ,KAAK,IAAI,GAAGT,KAAK,GAAG,EAAE,GAAGA,KAAK,GAAG,EAAE;IACpD;EACF;EAEA,OAAOA,KAAK;AACd,CAAC;AAEDD,OAAO,CAACK,sBAAsB,GAAGA,sBAAsB;AAEvD,MAAMC,iBAAiB,GAAG,CAACO,IAAI,EAAEH,QAAQ,EAAEC,IAAI,EAAEH,KAAK,KAAK;EACzD,MAAMM,cAAc,GAAGT,sBAAsB,CAACG,KAAK,CAACC,QAAQ,CAACI,IAAI,CAAC,EAAEH,QAAQ,EAAEC,IAAI,CAAC;EACnF,OAAOH,KAAK,CAACO,QAAQ,CAACF,IAAI,EAAEC,cAAc,CAAC;AAC7C,CAAC;AAEDd,OAAO,CAACM,iBAAiB,GAAGA,iBAAiB;AAE7C,MAAMJ,eAAe,GAAG,CAACK,IAAI,EAAEC,KAAK,KAAK;EACvC,OAAOA,KAAK,CAACC,QAAQ,CAACF,IAAI,CAAC,GAAG,IAAI,GAAGC,KAAK,CAACQ,UAAU,CAACT,IAAI,CAAC,GAAG,EAAE,GAAGC,KAAK,CAACS,UAAU,CAACV,IAAI,CAAC;AAC3F,CAAC;AAEDP,OAAO,CAACE,eAAe,GAAGA,eAAe;AAEzC,MAAME,2BAA2B,GAAG;EAAA,IAACc,wCAAwC,uEAAG,KAAK;EAAA,IAAEV,KAAK;EAAA,OAAK,CAACW,QAAQ,EAAEC,SAAS,KAAK;IACxH,IAAIF,wCAAwC,EAAE;MAC5C,OAAOV,KAAK,CAACa,OAAO,CAACF,QAAQ,EAAEC,SAAS,CAAC;IAC3C;IAEA,OAAOlB,eAAe,CAACiB,QAAQ,EAAEX,KAAK,CAAC,GAAGN,eAAe,CAACkB,SAAS,EAAEZ,KAAK,CAAC;EAC7E,CAAC;AAAA;AAEDR,OAAO,CAACI,2BAA2B,GAAGA,2BAA2B"},"metadata":{},"sourceType":"script","externalDependencies":[]}