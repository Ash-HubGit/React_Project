{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Frequency } from './types';\nimport { pymod, divmod, empty, includes } from './helpers';\nimport { dateutil } from './dateutil';\nvar Time = /** @class */function () {\n  function Time(hour, minute, second, millisecond) {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond || 0;\n  }\n  Time.prototype.getHours = function () {\n    return this.hour;\n  };\n  Time.prototype.getMinutes = function () {\n    return this.minute;\n  };\n  Time.prototype.getSeconds = function () {\n    return this.second;\n  };\n  Time.prototype.getMilliseconds = function () {\n    return this.millisecond;\n  };\n  Time.prototype.getTime = function () {\n    return (this.hour * 60 * 60 + this.minute * 60 + this.second) * 1000 + this.millisecond;\n  };\n  return Time;\n}();\nexport { Time };\nvar DateTime = /** @class */function (_super) {\n  __extends(DateTime, _super);\n  function DateTime(year, month, day, hour, minute, second, millisecond) {\n    var _this = _super.call(this, hour, minute, second, millisecond) || this;\n    _this.year = year;\n    _this.month = month;\n    _this.day = day;\n    return _this;\n  }\n  DateTime.fromDate = function (date) {\n    return new this(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.valueOf() % 1000);\n  };\n  DateTime.prototype.getWeekday = function () {\n    return dateutil.getWeekday(new Date(this.getTime()));\n  };\n  DateTime.prototype.getTime = function () {\n    return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)).getTime();\n  };\n  DateTime.prototype.getDay = function () {\n    return this.day;\n  };\n  DateTime.prototype.getMonth = function () {\n    return this.month;\n  };\n  DateTime.prototype.getYear = function () {\n    return this.year;\n  };\n  DateTime.prototype.addYears = function (years) {\n    this.year += years;\n  };\n  DateTime.prototype.addMonths = function (months) {\n    this.month += months;\n    if (this.month > 12) {\n      var yearDiv = Math.floor(this.month / 12);\n      var monthMod = pymod(this.month, 12);\n      this.month = monthMod;\n      this.year += yearDiv;\n      if (this.month === 0) {\n        this.month = 12;\n        --this.year;\n      }\n    }\n  };\n  DateTime.prototype.addWeekly = function (days, wkst) {\n    if (wkst > this.getWeekday()) {\n      this.day += -(this.getWeekday() + 1 + (6 - wkst)) + days * 7;\n    } else {\n      this.day += -(this.getWeekday() - wkst) + days * 7;\n    }\n    this.fixDay();\n  };\n  DateTime.prototype.addDaily = function (days) {\n    this.day += days;\n    this.fixDay();\n  };\n  DateTime.prototype.addHours = function (hours, filtered, byhour) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.hour += Math.floor((23 - this.hour) / hours) * hours;\n    }\n    for (;;) {\n      this.hour += hours;\n      var _a = divmod(this.hour, 24),\n        dayDiv = _a.div,\n        hourMod = _a.mod;\n      if (dayDiv) {\n        this.hour = hourMod;\n        this.addDaily(dayDiv);\n      }\n      if (empty(byhour) || includes(byhour, this.hour)) break;\n    }\n  };\n  DateTime.prototype.addMinutes = function (minutes, filtered, byhour, byminute) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.minute += Math.floor((1439 - (this.hour * 60 + this.minute)) / minutes) * minutes;\n    }\n    for (;;) {\n      this.minute += minutes;\n      var _a = divmod(this.minute, 60),\n        hourDiv = _a.div,\n        minuteMod = _a.mod;\n      if (hourDiv) {\n        this.minute = minuteMod;\n        this.addHours(hourDiv, false, byhour);\n      }\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute))) {\n        break;\n      }\n    }\n  };\n  DateTime.prototype.addSeconds = function (seconds, filtered, byhour, byminute, bysecond) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.second += Math.floor((86399 - (this.hour * 3600 + this.minute * 60 + this.second)) / seconds) * seconds;\n    }\n    for (;;) {\n      this.second += seconds;\n      var _a = divmod(this.second, 60),\n        minuteDiv = _a.div,\n        secondMod = _a.mod;\n      if (minuteDiv) {\n        this.second = secondMod;\n        this.addMinutes(minuteDiv, false, byhour, byminute);\n      }\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute)) && (empty(bysecond) || includes(bysecond, this.second))) {\n        break;\n      }\n    }\n  };\n  DateTime.prototype.fixDay = function () {\n    if (this.day <= 28) {\n      return;\n    }\n    var daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n    if (this.day <= daysinmonth) {\n      return;\n    }\n    while (this.day > daysinmonth) {\n      this.day -= daysinmonth;\n      ++this.month;\n      if (this.month === 13) {\n        this.month = 1;\n        ++this.year;\n        if (this.year > dateutil.MAXYEAR) {\n          return;\n        }\n      }\n      daysinmonth = dateutil.monthRange(this.year, this.month - 1)[1];\n    }\n  };\n  DateTime.prototype.add = function (options, filtered) {\n    var freq = options.freq,\n      interval = options.interval,\n      wkst = options.wkst,\n      byhour = options.byhour,\n      byminute = options.byminute,\n      bysecond = options.bysecond;\n    switch (freq) {\n      case Frequency.YEARLY:\n        return this.addYears(interval);\n      case Frequency.MONTHLY:\n        return this.addMonths(interval);\n      case Frequency.WEEKLY:\n        return this.addWeekly(interval, wkst);\n      case Frequency.DAILY:\n        return this.addDaily(interval);\n      case Frequency.HOURLY:\n        return this.addHours(interval, filtered, byhour);\n      case Frequency.MINUTELY:\n        return this.addMinutes(interval, filtered, byhour, byminute);\n      case Frequency.SECONDLY:\n        return this.addSeconds(interval, filtered, byhour, byminute, bysecond);\n    }\n  };\n  return DateTime;\n}(Time);\nexport { DateTime };","map":{"version":3,"mappings":"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","names":["Frequency","pymod","divmod","empty","includes","dateutil","hour","minute","second","millisecond","Time","__extends","year","month","day","_super","_this","DateTime","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","valueOf","getWeekday","Date","getTime","UTC","years","months","yearDiv","Math","floor","monthMod","days","wkst","fixDay","hours","filtered","byhour","dayDiv","hourMod","addDaily","minutes","byminute","hourDiv","minuteMod","addHours","seconds","bysecond","minuteDiv","secondMod","addMinutes","daysinmonth","monthRange","MAXYEAR","options","interval","freq","YEARLY","addYears","MONTHLY","addMonths","WEEKLY","addWeekly","DAILY","HOURLY","MINUTELY","SECONDLY","addSeconds"],"sources":["../../src/datetime.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}