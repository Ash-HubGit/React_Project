{"ast":null,"code":"/**\n * Bundle of @devexpress/dx-react-scheduler\n * Generated: 2023-01-27\n * Version: 4.0.3\n * License: https://js.devexpress.com/Licensing\n */\n\nimport { createElement, PureComponent, Fragment, createRef, memo, useRef, useState, useCallback, useEffect } from 'react';\nimport { Plugin, Getter, Template, TemplatePlaceholder, PluginHost, TemplateConnector, Action, createStateHelper, DragDropProvider as DragDropProvider$1, DropTarget, PlaceholderWithRef, DragSource } from '@devexpress/dx-react-core';\nimport { formatDateTimeGetter, appointments, computed, availableViews, VERTICAL_GROUP_ORIENTATION, HORIZONTAL_GROUP_ORIENTATION, startViewDate, endViewDate, timeCellsData, getTimeTableHeight, calculateWeekDateIntervals, VIEW_TYPES, viewCellsData, monthCellsData, calculateMonthDateIntervals, viewBoundText, POSITION_START, POSITION_END, isTimeTableElementsMetaActual, getGroupsLastRow, calculateRectByDateAndGroupIntervals, getAppointmentStyle, isAllDayElementsMetaActual, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData, VERTICAL_TYPE, getVerticalRectByAppointmentData, allDayCells, calculateAllDayDateIntervals, changeCurrentDate, setCurrentViewName, preCommitChanges, addAppointment, changeAppointment, cancelAddedAppointment, startEditAppointment, stopEditAppointment, cancelChanges, RECURRENCE_EDIT_SCOPE, changedAppointmentById, TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY, getAppointmentResources, OPEN_COMMAND_BUTTON, CLOSE_COMMAND_BUTTON, DELETE_COMMAND_BUTTON, setAppointmentMeta, TOGGLE_APPOINTMENT_FORM_VISIBILITY, callActionIfExists, isAllDayCell, checkMultipleResourceFields, setAppointmentData, autoScroll, cellIndex, cellData, cellType, calculateInsidePart, intervalDuration, calculateAppointmentTimeBoundaries, calculateAppointmentGroups, appointmentDragged, calculateDraftAppointments, RESIZE_TOP, RESIZE_BOTTOM, SCROLL_SPEED_PX, validateResources, addResourcesToAppointments, convertResourcesToPlain, toggleExpandedGroups, HORIZONTAL_VIEW_LEFT_OFFSET, VERTICAL_VIEW_LEFT_OFFSET, isMonthCell, getCurrentTimeIndicatorTop, isCellShaded, isShadedAppointment, expandViewCellsDataWithGroups, getGroupsFromResources, sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource, expandGroups, updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData } from '@devexpress/dx-scheduler-core';\nimport { memoize, createClickHandlers, getMessagesFormatter } from '@devexpress/dx-core';\nimport moment from 'moment';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\nvar SchedulerCoreBase = /*#__PURE__*/function (_super) {\n  __extends(SchedulerCoreBase, _super);\n  function SchedulerCoreBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.formatDateTimeGetter = memoize(function (locale) {\n      return formatDateTimeGetter(locale);\n    });\n    return _this;\n  }\n  SchedulerCoreBase.prototype.render = function () {\n    var _a = this.props,\n      data = _a.data,\n      Root = _a.rootComponent,\n      locale = _a.locale,\n      height = _a.height,\n      firstDayOfWeek = _a.firstDayOfWeek;\n    return createElement(Plugin, {\n      name: \"SchedulerCore\"\n    }, createElement(Getter, {\n      name: \"appointments\",\n      value: appointments(data)\n    }), createElement(Getter, {\n      name: \"formatDate\",\n      value: this.formatDateTimeGetter(locale)\n    }), createElement(Getter, {\n      name: \"firstDayOfWeek\",\n      value: firstDayOfWeek\n    }), createElement(Getter, {\n      name: \"locale\",\n      value: locale\n    }), createElement(Template, {\n      name: \"root\"\n    }, createElement(Root, {\n      height: height\n    }, createElement(TemplatePlaceholder, {\n      name: \"schedulerRoot\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"header\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"body\"\n    }), createElement(TemplatePlaceholder, {\n      name: \"footer\"\n    }))));\n  };\n  return SchedulerCoreBase;\n}(PureComponent);\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Scheduler's functionality\r\n * (data visualization and processing) is implemented in several plugins\r\n * specified as child components.\r\n * */\nvar SchedulerCore = SchedulerCoreBase;\nvar SchedulerBase = function (_a) {\n  var data = _a.data,\n    rootComponent = _a.rootComponent,\n    children = _a.children,\n    locale = _a.locale,\n    height = _a.height,\n    firstDayOfWeek = _a.firstDayOfWeek;\n  return createElement(PluginHost, null, createElement(SchedulerCore, {\n    data: data,\n    rootComponent: rootComponent,\n    locale: locale,\n    height: height,\n    firstDayOfWeek: firstDayOfWeek\n  }), children);\n};\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0\n};\n// tslint:disable: max-line-length\n/***\r\n * The Scheduler is a root container component designed to process\r\n * and display the specified data. The Schedulerâ€™s functionality\r\n * (data visualization and processing) is implemented in several plugins specified as child components.\r\n * */\nvar Scheduler = SchedulerBase;\nvar CellPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"cell\",\n    params: params\n  });\n};\nvar TimeTableAppointmentLayer = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTableAppointmentLayer\"\n  });\n};\nvar startViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return startViewDate(viewCellsData);\n};\nvar endViewDateBaseComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData;\n  return endViewDate(viewCellsData);\n};\nvar TimeTablePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeTable\"\n  });\n};\nvar DayScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScale\"\n  });\n};\nvar DayScaleEmptyCellPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"dayScaleEmptyCell\"\n  });\n};\nvar GroupingPanelPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"groupingPanel\"\n  });\n};\nvar BasicViewBase = /*#__PURE__*/function (_super) {\n  __extends(BasicViewBase, _super);\n  function BasicViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      timeTableElementsMeta: {},\n      scrollingStrategy: {\n        topBoundary: 0,\n        bottomBoundary: 0,\n        leftBoundary: 0,\n        rightBoundary: 0,\n        changeVerticalScroll: function () {\n          return undefined;\n        },\n        changeHorizontalScroll: function () {\n          return undefined;\n        }\n      },\n      previousTimeTableCell: null,\n      // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n      // and, consequently, update timeTableElementsMeta\n      timeTableLayoutKey: 0\n    };\n    _this.scrollingStrategyComputed = memoize(function (viewName, scrollingStrategy) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return scrollingStrategy;\n        }, getters.scrollingStrategy);\n      };\n    });\n    _this.timeTableElementsMetaComputed = memoize(function (viewName, timeTableElementsMeta) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return timeTableElementsMeta;\n        }, getters.timeTableElementsMeta);\n      };\n    });\n    _this.intervalCountComputed = memoize(function (viewName, intervalCount) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return intervalCount;\n        }, getters.intervalCount);\n      };\n    });\n    _this.cellDurationComputed = memoize(function (viewName, cellDuration) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return cellDuration;\n        }, getters.cellDuration);\n      };\n    });\n    _this.excludedDaysComputed = memoize(function (viewName, excludedDays) {\n      return function (getters) {\n        return computed(getters, viewName, function () {\n          return excludedDays;\n        }, getters.excludedDays);\n      };\n    });\n    _this.availableViewsComputed = memoize(function (viewName, viewDisplayName) {\n      return function (_a) {\n        var availableViews$1 = _a.availableViews;\n        return availableViews(availableViews$1, viewName, viewDisplayName);\n      };\n    });\n    _this.currentViewComputed = memoize(function (viewName, viewDisplayName, type) {\n      return function (_a) {\n        var currentView = _a.currentView;\n        return currentView && currentView.name !== viewName ? currentView : {\n          name: viewName,\n          type: type,\n          displayName: viewDisplayName\n        };\n      };\n    });\n    _this.endViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, endViewDateBaseComputed, getters.endViewDate);\n    };\n    _this.startViewDateComputed = function (getters) {\n      var viewName = _this.props.name;\n      return computed(getters, viewName, startViewDateBaseComputed, getters.startViewDate);\n    };\n    _this.viewCellsDataComputed = memoize(function (viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed) {\n      return function (getters) {\n        return computed(getters, viewName, viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour), getters.viewCellsData);\n      };\n    });\n    _this.timeTableAppointmentsComputed = memoize(function (viewName, cellDuration, calculateAppointmentsIntervals) {\n      return function (getters) {\n        return computed(getters, viewName, calculateAppointmentsIntervals(cellDuration), getters.timeTableAppointments);\n      };\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        timeTableElementsMeta: cellElementsMeta\n      });\n    });\n    _this.setScrollingStrategy = function (scrollingStrategy) {\n      _this.setState({\n        scrollingStrategy: scrollingStrategy\n      });\n    };\n    return _this;\n  }\n  BasicViewBase.getDerivedStateFromProps = function (props, state) {\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return __assign(__assign({}, state), {\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random()\n      });\n    }\n    return null;\n  };\n  BasicViewBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      viewName = _a.name,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      type = _a.type,\n      excludedDays = _a.excludedDays,\n      cellDuration = _a.cellDuration,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour,\n      viewCellsDataComputed = _a.viewCellsDataComputed,\n      calculateAppointmentsIntervals = _a.calculateAppointmentsIntervals,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      DayScale = _a.dayScaleLayoutComponent,\n      TimeTableCell = _a.timeTableCellComponent,\n      TimeTableLayout = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      AppointmentLayer = _a.appointmentLayerComponent,\n      DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n      layoutProps = _a.layoutProps,\n      Layout = _a.layoutComponent;\n    var _b = this.state,\n      timeTableElementsMeta = _b.timeTableElementsMeta,\n      scrollingStrategy = _b.scrollingStrategy,\n      timeTableLayoutKey = _b.timeTableLayoutKey;\n    var viewDisplayName = displayName || viewName;\n    return createElement(Plugin, {\n      name: \"basicView\"\n    }, createElement(Getter, {\n      name: \"availableViews\",\n      computed: this.availableViewsComputed(viewName, viewDisplayName)\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.currentViewComputed(viewName, viewDisplayName, type)\n    }), createElement(Getter, {\n      name: \"intervalCount\",\n      computed: this.intervalCountComputed(viewName, intervalCount)\n    }), createElement(Getter, {\n      name: \"excludedDays\",\n      computed: this.excludedDaysComputed(viewName, excludedDays)\n    }), createElement(Getter, {\n      name: \"viewCellsData\",\n      computed: this.viewCellsDataComputed(viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed)\n    }), createElement(Getter, {\n      name: \"startViewDate\",\n      computed: this.startViewDateComputed\n    }), createElement(Getter, {\n      name: \"endViewDate\",\n      computed: this.endViewDateComputed\n    }), createElement(Getter, {\n      name: \"cellDuration\",\n      computed: this.cellDurationComputed(viewName, cellDuration)\n    }), createElement(Getter, {\n      name: \"timeTableElementsMeta\",\n      computed: this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)\n    }), createElement(Getter, {\n      name: \"scrollingStrategy\",\n      computed: this.scrollingStrategyComputed(viewName, scrollingStrategy)\n    }), createElement(Getter, {\n      name: \"timeTableAppointments\",\n      computed: this.timeTableAppointmentsComputed(viewName, cellDuration, calculateAppointmentsIntervals)\n    }), createElement(Template, {\n      name: \"body\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation,\n          groups = _a.groups;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        var isVerticalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === VERTICAL_GROUP_ORIENTATION;\n        return createElement(Layout, __assign({\n          forwardedRef: params === null || params === void 0 ? void 0 : params.forwardedRef,\n          dayScaleComponent: DayScalePlaceholder,\n          timeTableComponent: TimeTablePlaceholder,\n          setScrollingStrategy: _this.setScrollingStrategy,\n          groupingPanelComponent: isVerticalGrouping ? GroupingPanelPlaceholder : undefined,\n          groupingPanelSize: isVerticalGrouping ? groups === null || groups === void 0 ? void 0 : groups.length : 0,\n          dayScaleEmptyCellComponent: DayScaleEmptyCellPlaceholder\n        }, layoutProps));\n      });\n    }), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        viewCellsData = _a.viewCellsData,\n        formatDate = _a.formatDate,\n        groupByDate = _a.groupByDate,\n        groupOrientation = _a.groupOrientation;\n      if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n      var groupByDateEnabled = groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(viewName);\n      var isHorizontalGrouping = (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(viewName)) === HORIZONTAL_GROUP_ORIENTATION;\n      return createElement(DayScale, {\n        cellComponent: dayScaleCellComponent,\n        rowComponent: dayScaleRowComponent,\n        groupingPanelComponent: isHorizontalGrouping ? GroupingPanelPlaceholder : undefined,\n        cellsData: viewCellsData,\n        formatDate: formatDate,\n        groupedByDate: groupByDateEnabled\n      });\n    })), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, {\n          params: params\n        });\n        return createElement(TimeTableCell, __assign({}, params));\n      });\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n          currentView = _a.currentView,\n          viewCellsData = _a.viewCellsData;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        return createElement(Fragment, null, createElement(TimeTableLayout, __assign({\n          cellsData: viewCellsData,\n          rowComponent: timeTableRowComponent,\n          cellComponent: CellPlaceholder,\n          formatDate: formatDate,\n          setCellElementsMeta: _this.updateCellElementsMeta,\n          key: timeTableLayoutKey\n        }, params)), createElement(AppointmentLayer, null, createElement(TimeTableAppointmentLayer, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView;\n      if (currentView.name !== viewName || !DayScaleEmptyCell) {\n        return createElement(TemplatePlaceholder, null);\n      }\n      return createElement(DayScaleEmptyCell, null);\n    })));\n  };\n  return BasicViewBase;\n}(PureComponent);\nvar BasicView = BasicViewBase;\nvar calculateAppointmentsIntervalsBaseComputed = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n      startViewDate = _a.startViewDate,\n      endViewDate = _a.endViewDate,\n      excludedDays = _a.excludedDays;\n    return calculateWeekDateIntervals(appointments, startViewDate, endViewDate, excludedDays, cellDuration);\n  };\n};\nvar timeCellsDataComputed = function (startDayHour, endDayHour) {\n  return function (_a) {\n    var viewCellsData = _a.viewCellsData,\n      cellDuration = _a.cellDuration;\n    return timeCellsData(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\nvar TimeScalePlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"timeScale\"\n  });\n};\nvar VericalViewBase = /*#__PURE__*/function (_super) {\n  __extends(VericalViewBase, _super);\n  function VericalViewBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeCellsDataComputed = memoize(function (viewName, startDayHour, endDayHour) {\n      return function (getters) {\n        return computed(getters, viewName, timeCellsDataComputed(startDayHour, endDayHour), getters.timeCellsData);\n      };\n    });\n    return _this;\n  }\n  VericalViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n      TimeScale = _a.timeScaleLayoutComponent,\n      TimeScaleLabel = _a.timeScaleLabelComponent,\n      timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n      timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      cellDuration = _a.cellDuration,\n      excludedDays = _a.excludedDays,\n      viewName = _a.name,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour,\n      viewCellsDataComputed = _a.viewCellsDataComputed,\n      type = _a.type;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataComputed,\n      type: type,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      layoutProps: {\n        timeScaleComponent: TimeScalePlaceholder\n      }\n    }), createElement(Getter, {\n      name: \"timeCellsData\",\n      computed: this.timeCellsDataComputed(viewName, startDayHour, endDayHour)\n    }), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          timeCellsData = _a.timeCellsData,\n          groups = _a.groups,\n          formatDate = _a.formatDate,\n          getGroupOrientation = _a.groupOrientation,\n          timeTableElementsMeta = _a.timeTableElementsMeta;\n        if (currentView.name !== viewName) return createElement(TemplatePlaceholder, null);\n        var groupOrientation = getGroupOrientation === null || getGroupOrientation === void 0 ? void 0 : getGroupOrientation(viewName);\n        return createElement(TimeScale, __assign({\n          labelComponent: TimeScaleLabel,\n          tickCellComponent: timeScaleTickCellComponent,\n          rowComponent: timeScaleTicksRowComponent,\n          cellsData: timeCellsData,\n          formatDate: formatDate,\n          groups: groups,\n          groupOrientation: groupOrientation,\n          height: getTimeTableHeight(timeTableElementsMeta)\n        }, params));\n      });\n    }));\n  };\n  return VericalViewBase;\n}(PureComponent);\nvar VerticalView = VericalViewBase;\nvar viewCellsDataBaseComputed = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n      intervalCount = _a.intervalCount;\n    return viewCellsData(currentDate, undefined, intervalCount, [], startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\nvar DayViewBase = /*#__PURE__*/function (_super) {\n  __extends(DayViewBase, _super);\n  function DayViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  DayViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      DayScaleEmptyCell = _a.dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n      timeScaleLabelComponent = _a.timeScaleLabelComponent,\n      timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n      timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      cellDuration = _a.cellDuration,\n      viewName = _a.name,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"DayView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed,\n      type: VIEW_TYPES.DAY,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n  DayViewBase.defaultProps = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1\n  };\n  DayViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return DayViewBase;\n}(PureComponent);\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\nvar DayView = DayViewBase;\nvar DAYS_IN_WEEK = 7;\nvar viewCellsDataBaseComputed$1 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var firstDayOfWeek = _a.firstDayOfWeek,\n      intervalCount = _a.intervalCount,\n      excludedDays = _a.excludedDays,\n      currentDate = _a.currentDate;\n    return viewCellsData(currentDate, firstDayOfWeek, intervalCount * DAYS_IN_WEEK, excludedDays, startDayHour, endDayHour, cellDuration, Date.now());\n  };\n};\nvar WeekViewBase = /*#__PURE__*/function (_super) {\n  __extends(WeekViewBase, _super);\n  function WeekViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  WeekViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent = _a.timeScaleLayoutComponent,\n      timeScaleLabelComponent = _a.timeScaleLabelComponent,\n      timeScaleTickCellComponent = _a.timeScaleTickCellComponent,\n      timeScaleTicksRowComponent = _a.timeScaleTicksRowComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      cellDuration = _a.cellDuration,\n      excludedDays = _a.excludedDays,\n      viewName = _a.name,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName,\n      startDayHour = _a.startDayHour,\n      endDayHour = _a.endDayHour;\n    return createElement(Plugin, {\n      name: \"WeekView\"\n    }, createElement(VerticalView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$1,\n      type: VIEW_TYPES.WEEK,\n      cellDuration: cellDuration,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      startDayHour: startDayHour,\n      endDayHour: endDayHour,\n      excludedDays: excludedDays,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent,\n      timeScaleLayoutComponent: timeScaleLayoutComponent,\n      timeScaleLabelComponent: timeScaleLabelComponent,\n      timeScaleTickCellComponent: timeScaleTickCellComponent,\n      timeScaleTicksRowComponent: timeScaleTicksRowComponent\n    }));\n  };\n  WeekViewBase.defaultProps = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week'\n  };\n  WeekViewBase.components = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return WeekViewBase;\n}(PureComponent);\n// tslint:disable: max-line-length\n/***\r\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\r\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\r\n * */\nvar WeekView = WeekViewBase;\nvar viewCellsDataBaseComputed$2 = function (cellDuration, startDayHour, endDayHour) {\n  return function (_a) {\n    var currentDate = _a.currentDate,\n      firstDayOfWeek = _a.firstDayOfWeek,\n      intervalCount = _a.intervalCount;\n    return monthCellsData(currentDate, firstDayOfWeek, intervalCount, Date.now());\n  };\n};\nvar calculateAppointmentsIntervalsBaseComputed$1 = function (cellDuration) {\n  return function (_a) {\n    var appointments = _a.appointments,\n      startViewDate = _a.startViewDate,\n      endViewDate = _a.endViewDate,\n      excludedDays = _a.excludedDays;\n    return calculateMonthDateIntervals(appointments, startViewDate, endViewDate);\n  };\n};\nvar MonthViewBase = /*#__PURE__*/function (_super) {\n  __extends(MonthViewBase, _super);\n  function MonthViewBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  MonthViewBase.prototype.render = function () {\n    var _a = this.props,\n      layoutComponent = _a.layoutComponent,\n      dayScaleEmptyCellComponent = _a.dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent = _a.dayScaleLayoutComponent,\n      dayScaleCellComponent = _a.dayScaleCellComponent,\n      dayScaleRowComponent = _a.dayScaleRowComponent,\n      timeTableLayoutComponent = _a.timeTableLayoutComponent,\n      timeTableRowComponent = _a.timeTableRowComponent,\n      timeTableCellComponent = _a.timeTableCellComponent,\n      appointmentLayerComponent = _a.appointmentLayerComponent,\n      viewName = _a.name,\n      intervalCount = _a.intervalCount,\n      displayName = _a.displayName;\n    return createElement(Plugin, {\n      name: \"MonthView\"\n    }, createElement(BasicView, {\n      viewCellsDataComputed: viewCellsDataBaseComputed$2,\n      type: VIEW_TYPES.MONTH,\n      name: viewName,\n      intervalCount: intervalCount,\n      displayName: displayName,\n      calculateAppointmentsIntervals: calculateAppointmentsIntervalsBaseComputed$1,\n      dayScaleEmptyCellComponent: dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent: dayScaleLayoutComponent,\n      dayScaleCellComponent: dayScaleCellComponent,\n      dayScaleRowComponent: dayScaleRowComponent,\n      timeTableCellComponent: timeTableCellComponent,\n      timeTableLayoutComponent: timeTableLayoutComponent,\n      timeTableRowComponent: timeTableRowComponent,\n      appointmentLayerComponent: appointmentLayerComponent,\n      layoutComponent: layoutComponent\n    }));\n  };\n  MonthViewBase.defaultProps = {\n    intervalCount: 1,\n    name: 'Month'\n  };\n  MonthViewBase.components = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow'\n  };\n  return MonthViewBase;\n}(PureComponent);\n// tslint:disable: max-line-length\n/***\r\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\r\n * An appointment's size depends on its duration in days.\r\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\r\n * The time scale and all-day panel are not available in this view.\r\n * */\nvar MonthView = MonthViewBase;\nvar ToolbarBase = /*#__PURE__*/function (_super) {\n  __extends(ToolbarBase, _super);\n  function ToolbarBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ToolbarBase.prototype.render = function () {\n    var _a = this.props,\n      Root = _a.rootComponent,\n      FlexibleSpaceComponent = _a.flexibleSpaceComponent;\n    return createElement(Plugin, {\n      name: \"Toolbar\"\n    }, createElement(Template, {\n      name: \"header\"\n    }, createElement(Root, null, createElement(TemplatePlaceholder, {\n      name: \"toolbarContent\"\n    })), createElement(TemplatePlaceholder, null)), createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(FlexibleSpaceComponent, null)));\n  };\n  ToolbarBase.components = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace'\n  };\n  return ToolbarBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's toolbar. */\nvar Toolbar = ToolbarBase;\nvar pluginDependencies = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar navigate = function (action, currentView, intervalCount) {\n  return function (direction, nextDate) {\n    return action({\n      direction: direction,\n      nextDate: nextDate,\n      amount: intervalCount,\n      step: currentView.type\n    });\n  };\n};\nvar DateNavigatorBase = /*#__PURE__*/function (_super) {\n  __extends(DateNavigatorBase, _super);\n  function DateNavigatorBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      visible: false\n    };\n    _this.setRootRef = function (target) {\n      _this.target = target;\n    };\n    _this.handleVisibilityToggle = function () {\n      _this.setState(function (prevState) {\n        return {\n          visible: !prevState.visible\n        };\n      });\n    };\n    _this.handleHide = function () {\n      _this.setState({\n        visible: false\n      });\n    };\n    _this.navigateAction = memoize(function (changeCurrentDate, currentView, intervalCount, navigateAction) {\n      return navigateAction(changeCurrentDate, currentView, intervalCount);\n    });\n    return _this;\n  }\n  DateNavigatorBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      Root = _a.rootComponent,\n      Overlay = _a.overlayComponent,\n      OpenButton = _a.openButtonComponent,\n      NavigationButton = _a.navigationButtonComponent,\n      Calendar = _a.calendarComponent,\n      CalendarRow = _a.calendarRowComponent,\n      CalendarCell = _a.calendarCellComponent,\n      CalendarHeaderRow = _a.calendarHeaderRowComponent,\n      CalendarHeaderCell = _a.calendarHeaderCellComponent,\n      CalendarText = _a.calendarTextComponent,\n      CalendarNavigationButton = _a.calendarNavigationButtonComponent,\n      CalendarNavigator = _a.calendarNavigatorComponent;\n    var visible = this.state.visible;\n    return createElement(Plugin, {\n      name: \"DateNavigator\",\n      dependencies: pluginDependencies\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var currentDate = _a.currentDate,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        firstDayOfWeek = _a.firstDayOfWeek,\n        currentView = _a.currentView,\n        intervalCount = _a.intervalCount,\n        formatDate = _a.formatDate;\n      var changeCurrentDate = _b.changeCurrentDate;\n      var navigateAction = _this.navigateAction(changeCurrentDate, currentView, intervalCount, navigate);\n      var calendarDateChanged = function (nextDate) {\n        navigateAction(undefined, nextDate);\n        _this.handleHide();\n      };\n      var navigatorText = viewBoundText(startViewDate, endViewDate, currentView.type, currentDate, intervalCount, formatDate);\n      return createElement(Fragment, null, createElement(Root, {\n        navigationButtonComponent: NavigationButton,\n        openButtonComponent: OpenButton,\n        navigatorText: navigatorText,\n        rootRef: _this.setRootRef,\n        onVisibilityToggle: _this.handleVisibilityToggle,\n        onNavigate: navigateAction\n      }), createElement(Overlay, {\n        visible: visible,\n        target: _this.target,\n        onHide: _this.handleHide\n      }, createElement(Calendar, {\n        selectedDate: currentDate,\n        firstDayOfWeek: firstDayOfWeek,\n        getCells: monthCellsData,\n        textComponent: CalendarText,\n        navigationButtonComponent: CalendarNavigationButton,\n        rowComponent: CalendarRow,\n        cellComponent: CalendarCell,\n        headerRowComponent: CalendarHeaderRow,\n        headerCellComponent: CalendarHeaderCell,\n        navigatorComponent: CalendarNavigator,\n        onSelectedDateChange: calendarDateChanged,\n        formatDate: formatDate\n      })));\n    }), createElement(TemplatePlaceholder, null)));\n  };\n  DateNavigatorBase.components = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton'\n  };\n  return DateNavigatorBase;\n}(PureComponent);\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nvar DateNavigator = DateNavigatorBase;\nvar pluginDependencies$1 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar ViewSwitcherBase = /*#__PURE__*/function (_super) {\n  __extends(ViewSwitcherBase, _super);\n  function ViewSwitcherBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  ViewSwitcherBase.prototype.render = function () {\n    var Switcher = this.props.switcherComponent;\n    return createElement(Plugin, {\n      name: \"ViewSwitcher\",\n      dependencies: pluginDependencies$1\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var currentView = _a.currentView,\n        availableViews = _a.availableViews;\n      var setCurrentViewName = _b.setCurrentViewName;\n      return createElement(Switcher, {\n        currentView: currentView,\n        availableViews: availableViews,\n        onChange: setCurrentViewName\n      });\n    })));\n  };\n  ViewSwitcherBase.components = {\n    switcherComponent: 'Switcher'\n  };\n  return ViewSwitcherBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's view switcher. */\nvar ViewSwitcher = ViewSwitcherBase;\nvar AppointmentPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"appointment\",\n    params: params\n  });\n};\nvar renderAppointments = function (rects) {\n  return rects.map(function (_a) {\n    var dataItem = _a.dataItem,\n      rectType = _a.type,\n      fromPrev = _a.fromPrev,\n      toNext = _a.toNext,\n      durationType = _a.durationType,\n      resources = _a.resources,\n      key = _a.key,\n      geometry = __rest(_a, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\", \"key\"]);\n    return createElement(AppointmentPlaceholder, {\n      key: key,\n      type: rectType,\n      data: dataItem,\n      fromPrev: fromPrev,\n      toNext: toNext,\n      durationType: durationType,\n      resources: resources,\n      style: getAppointmentStyle(geometry)\n    });\n  });\n};\nvar pluginDependencies$2 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}];\nvar AppointmentsBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentsBase, _super);\n  function AppointmentsBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.updateTimeTableAppointments = memoize(function (timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate, placeAppointmentsNextToEachOther) {\n      if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n      var appointmentType = {\n        growDirection: VERTICAL_TYPE,\n        multiline: false\n      };\n      var getRects = getVerticalRectByAppointmentData;\n      if (currentView.type === VIEW_TYPES.MONTH) {\n        appointmentType = {\n          growDirection: HORIZONTAL_TYPE,\n          multiline: true\n        };\n        getRects = getHorizontalRectByAppointmentData;\n      }\n      return renderAppointments(calculateRectByDateAndGroupIntervals(appointmentType, timeTableAppointments, getRects, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        cellDuration: cellDuration,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther: placeAppointmentsNextToEachOther\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    _this.updateAllDayAppointments = memoize(function (allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, getGroupOrientation, groupByDate) {\n      var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n      var groupCount = groups ? getGroupsLastRow(groups).length : 1;\n      if (!isAllDayElementsMetaActual(viewCellsData, allDayElementsMeta, groupOrientation, groupCount)) {\n        return null;\n      }\n      return renderAppointments(calculateRectByDateAndGroupIntervals({\n        growDirection: HORIZONTAL_TYPE,\n        multiline: false\n      }, allDayAppointments, getHorizontalRectByAppointmentData, {\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        viewCellsData: viewCellsData,\n        cellElementsMeta: allDayElementsMeta\n      }, {\n        groupOrientation: groupOrientation,\n        groupedByDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name),\n        groupCount: groupCount\n      }));\n    });\n    return _this;\n  }\n  AppointmentsBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      SplitIndicator = _a.splitIndicatorComponent,\n      Appointment = _a.appointmentComponent,\n      AppointmentContent = _a.appointmentContentComponent,\n      Container = _a.containerComponent,\n      recurringIconComponent = _a.recurringIconComponent,\n      placeAppointmentsNextToEachOther = _a.placeAppointmentsNextToEachOther;\n    return createElement(Plugin, {\n      name: \"Appointments\",\n      dependencies: pluginDependencies$2\n    }, createElement(Template, {\n      name: \"timeTableAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var timeTableAppointments = _a.timeTableAppointments,\n        viewCellsData = _a.viewCellsData,\n        timeTableElementsMeta = _a.timeTableElementsMeta,\n        currentView = _a.currentView,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        cellDuration = _a.cellDuration,\n        groupOrientation = _a.groupOrientation,\n        groups = _a.groups,\n        groupByDate = _a.groupByDate;\n      return _this.updateTimeTableAppointments(timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView, startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate, placeAppointmentsNextToEachOther);\n    })), createElement(Template, {\n      name: \"allDayAppointmentLayer\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var allDayAppointments = _a.allDayAppointments,\n        viewCellsData = _a.viewCellsData,\n        allDayElementsMeta = _a.allDayElementsMeta,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        groupOrientation = _a.groupOrientation,\n        currentView = _a.currentView,\n        groups = _a.groups,\n        groupByDate = _a.groupByDate;\n      return _this.updateAllDayAppointments(allDayAppointments, viewCellsData, allDayElementsMeta, currentView, startViewDate, endViewDate, groups, groupOrientation, groupByDate);\n    })), createElement(Template, {\n      name: \"appointment\"\n    }, function (_a) {\n      var style = _a.style,\n        params = __rest(_a, [\"style\"]);\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate;\n        return createElement(Container, {\n          style: style\n        }, createElement(TemplatePlaceholder, {\n          name: \"appointmentTop\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.fromPrev\n          }\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentContent\",\n          params: __assign(__assign({}, params), {\n            formatDate: formatDate\n          })\n        }), createElement(TemplatePlaceholder, {\n          name: \"appointmentBottom\",\n          params: {\n            data: params.data,\n            type: params.type,\n            slice: params.toNext\n          }\n        }));\n      });\n    }), createElement(Template, {\n      name: \"appointmentContent\"\n    }, function (_a) {\n      var onClick = _a.onClick,\n        onDoubleClick = _a.onDoubleClick,\n        formatDate = _a.formatDate,\n        data = _a.data,\n        type = _a.type,\n        fromPrev = _a.fromPrev,\n        toNext = _a.toNext,\n        durationType = _a.durationType,\n        resources = _a.resources,\n        forwardedRef = _a.forwardedRef,\n        restParams = __rest(_a, [\"onClick\", \"onDoubleClick\", \"formatDate\", \"data\", \"type\", \"fromPrev\", \"toNext\", \"durationType\", \"resources\", \"forwardedRef\"]);\n      return createElement(Appointment, __assign({\n        forwardedRef: forwardedRef,\n        data: data,\n        resources: resources\n      }, createClickHandlers(onClick, onDoubleClick), restParams), fromPrev && createElement(SplitIndicator, {\n        position: POSITION_START,\n        appointmentType: type\n      }), createElement(AppointmentContent, {\n        data: data,\n        type: type,\n        durationType: durationType,\n        recurringIconComponent: recurringIconComponent,\n        formatDate: formatDate,\n        resources: resources\n      }), toNext && createElement(SplitIndicator, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }));\n  };\n  AppointmentsBase.components = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  AppointmentsBase.defaultProps = {\n    placeAppointmentsNextToEachOther: false\n  };\n  return AppointmentsBase;\n}(PureComponent);\n/** A plugin that renders appointments. */\nvar Appointments = AppointmentsBase;\nvar isMonthView = function (currentView) {\n  return currentView.type === VIEW_TYPES.MONTH;\n};\nvar isVerticalGrouping = function (currentView, groupOrientation) {\n  return (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION;\n};\nvar pluginDependencies$3 = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\nvar defaultMessages = {\n  allDay: 'All Day'\n};\nvar AllDayAppointmentLayerPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayAppointmentLayer\"\n  });\n};\nvar AllDayPanelPlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanel\",\n    params: params\n  });\n};\nvar CellPlaceholder$1 = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayPanelCell\",\n    params: params\n  });\n};\nvar AllDayTitlePlaceholder = function (params) {\n  return createElement(TemplatePlaceholder, {\n    name: \"allDayTitle\",\n    params: params\n  });\n};\nvar AllDayPanelBase = /*#__PURE__*/function (_super) {\n  __extends(AllDayPanelBase, _super);\n  function AllDayPanelBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      elementsMeta: {},\n      previousCell: null,\n      // The key has to be generated every time the Cell component is updated to rerender the Layout\n      // and, consequently, update allDayElementsMeta\n      layoutKey: 0\n    };\n    _this.allDayCellsDataComputed = memoize(function (_a) {\n      var viewCellsData = _a.viewCellsData;\n      return allDayCells(viewCellsData);\n    });\n    _this.updateCellElementsMeta = memoize(function (cellElementsMeta) {\n      _this.setState({\n        elementsMeta: cellElementsMeta\n      });\n    });\n    _this.allDayAppointmentsComputed = memoize(function (_a) {\n      var appointments = _a.appointments,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays;\n      var allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n      var allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n      return calculateAllDayDateIntervals(appointments, allDayLeftBound, allDayRightBound, excludedDays);\n    });\n    _this.allDayPanelExistsComputed = memoize(function (_a) {\n      var currentView = _a.currentView;\n      return !isMonthView(currentView);\n    });\n    _this.getMessageFormatter = memoize(function (messages, allDayPanelDefaultMessages) {\n      return getMessagesFormatter(__assign(__assign({}, allDayPanelDefaultMessages), messages));\n    });\n    return _this;\n  }\n  AllDayPanelBase.getDerivedStateFromProps = function (props, state) {\n    if (props.cellComponent !== state.previousCell) {\n      return __assign(__assign({}, state), {\n        previousCell: props.cellComponent,\n        layoutKey: Math.random()\n      });\n    }\n    return null;\n  };\n  AllDayPanelBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      AppointmentLayer = _a.appointmentLayerComponent,\n      Layout = _a.layoutComponent,\n      Cell = _a.cellComponent,\n      rowComponent = _a.rowComponent,\n      TitleCell = _a.titleCellComponent,\n      Container = _a.containerComponent,\n      messages = _a.messages;\n    var _b = this.state,\n      elementsMeta = _b.elementsMeta,\n      layoutKey = _b.layoutKey;\n    var getMessage = this.getMessageFormatter(messages, defaultMessages);\n    return createElement(Plugin, {\n      name: \"AllDayPanel\",\n      dependencies: pluginDependencies$3\n    }, createElement(Getter, {\n      name: \"allDayElementsMeta\",\n      value: elementsMeta\n    }), createElement(Getter, {\n      name: \"allDayCellsData\",\n      computed: this.allDayCellsDataComputed\n    }), createElement(Getter, {\n      name: \"allDayPanelExists\",\n      computed: this.allDayPanelExistsComputed\n    }), createElement(Getter, {\n      name: \"allDayAppointments\",\n      computed: this.allDayAppointmentsComputed\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation,\n          allDayCellsData = _a.allDayCellsData;\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n        return createElement(Fragment, null, createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayCellComponent: CellPlaceholder$1,\n            allDayRowComponent: rowComponent,\n            allDayCellsData: allDayCellsData\n          })\n        }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n      });\n    }), createElement(Template, {\n      name: \"dayScaleEmptyCell\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return createElement(TemplatePlaceholder, null);\n      }\n      return createElement(AllDayTitlePlaceholder, null);\n    })), createElement(Template, {\n      name: \"timeScale\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a) {\n        var currentView = _a.currentView,\n          groupOrientation = _a.groupOrientation;\n        if (isMonthView(currentView) || !isVerticalGrouping(currentView, groupOrientation)) {\n          return createElement(TemplatePlaceholder, {\n            params: params\n          });\n        }\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            allDayTitleComponent: AllDayTitlePlaceholder,\n            showAllDayTitle: true\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"dayScale\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n        return null;\n      }\n      return createElement(Container, null, createElement(AllDayPanelPlaceholder, null));\n    })), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        formatDate = _a.formatDate,\n        allDayCellsData = _a.allDayCellsData;\n      if (currentView.type === VIEW_TYPES.MONTH) return null;\n      return createElement(Fragment, null, createElement(Layout, {\n        cellComponent: CellPlaceholder$1,\n        rowComponent: rowComponent,\n        cellsData: allDayCellsData[0],\n        setCellElementsMeta: _this.updateCellElementsMeta,\n        formatDate: formatDate,\n        key: layoutKey\n      }), createElement(AppointmentLayer, null, createElement(AllDayAppointmentLayerPlaceholder, null)));\n    })), createElement(Template, {\n      name: \"allDayTitle\"\n    }, function (params) {\n      return createElement(TitleCell, __assign({\n        getMessage: getMessage\n      }, params));\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(Cell, __assign({}, params));\n    }));\n  };\n  AllDayPanelBase.defaultProps = {\n    messages: {}\n  };\n  AllDayPanelBase.components = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container'\n  };\n  return AllDayPanelBase;\n}(PureComponent);\n/** A plugin that renders the All Day Panel. */\nvar AllDayPanel = AllDayPanelBase;\nvar ViewStateBase = /*#__PURE__*/function (_super) {\n  __extends(ViewStateBase, _super);\n  function ViewStateBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.getCurrentViewComputed = memoize(function (currentViewName) {\n      return function () {\n        return currentViewName ? {\n          name: currentViewName\n        } : undefined;\n      };\n    });\n    _this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName\n    };\n    var stateHelper = createStateHelper(_this, {\n      currentDate: function () {\n        var onCurrentDateChange = _this.props.onCurrentDateChange;\n        return onCurrentDateChange;\n      },\n      currentViewName: function () {\n        var onCurrentViewNameChange = _this.props.onCurrentViewNameChange;\n        return onCurrentViewNameChange;\n      }\n    });\n    _this.changeCurrentDate = stateHelper.applyFieldReducer.bind(stateHelper, 'currentDate', changeCurrentDate);\n    _this.setCurrentViewName = stateHelper.applyFieldReducer.bind(stateHelper, 'currentViewName', setCurrentViewName);\n    return _this;\n  }\n  ViewStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.currentDate,\n      currentDate = _a === void 0 ? prevState.currentDate : _a,\n      _b = nextProps.currentViewName,\n      currentViewName = _b === void 0 ? prevState.currentViewName : _b;\n    return {\n      currentDate: currentDate,\n      currentViewName: currentViewName\n    };\n  };\n  ViewStateBase.prototype.render = function () {\n    var _a = this.state,\n      currentDate = _a.currentDate,\n      stateCurrentViewName = _a.currentViewName;\n    return createElement(Plugin, {\n      name: \"ViewState\"\n    }, createElement(Getter, {\n      name: \"currentDate\",\n      value: currentDate\n    }), createElement(Getter, {\n      name: \"currentView\",\n      computed: this.getCurrentViewComputed(stateCurrentViewName)\n    }), createElement(Action, {\n      name: \"changeCurrentDate\",\n      action: this.changeCurrentDate\n    }), createElement(Action, {\n      name: \"setCurrentViewName\",\n      action: this.setCurrentViewName\n    }));\n  };\n  ViewStateBase.defaultProps = {\n    defaultCurrentDate: new Date()\n  };\n  return ViewStateBase;\n}(PureComponent);\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nvar ViewState = ViewStateBase;\nvar EditingStateBase = /*#__PURE__*/function (_super) {\n  __extends(EditingStateBase, _super);\n  function EditingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges\n    };\n    var stateHelper = createStateHelper(_this, {\n      editingAppointment: function () {\n        var onEditingAppointmentChange = _this.props.onEditingAppointmentChange;\n        return onEditingAppointmentChange;\n      },\n      addedAppointment: function () {\n        var onAddedAppointmentChange = _this.props.onAddedAppointmentChange;\n        return onAddedAppointmentChange;\n      },\n      appointmentChanges: function () {\n        var onAppointmentChangesChange = _this.props.onAppointmentChangesChange;\n        return onAppointmentChangesChange;\n      }\n    });\n    _this.addAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', addAppointment);\n    _this.changeAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', changeAppointment);\n    _this.cancelAddedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n    _this.startEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', startEditAppointment);\n    _this.stopEditAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'editingAppointment', stopEditAppointment);\n    _this.changeAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', changeAppointment);\n    _this.cancelChangedAppointment = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentChanges', cancelChanges);\n    _this.commitChangedAppointment = function (type) {\n      if (type === void 0) {\n        type = RECURRENCE_EDIT_SCOPE.CURRENT;\n      }\n      var _a = _this.state,\n        appointmentChanges = _a.appointmentChanges,\n        editingAppointment = _a.editingAppointment;\n      var _b = _this.props,\n        onCommitChanges = _b.onCommitChanges,\n        preCommitChanges = _b.preCommitChanges;\n      if (!editingAppointment) {\n        return;\n      }\n      var changes = !editingAppointment.rRule ? {\n        changed: changedAppointmentById(appointmentChanges, editingAppointment.id)\n      } : preCommitChanges(appointmentChanges, editingAppointment, type);\n      onCommitChanges(changes);\n      _this.cancelChangedAppointment();\n      _this.stopEditAppointment();\n    };\n    _this.commitAddedAppointment = function () {\n      var onCommitChanges = _this.props.onCommitChanges;\n      var stateAddedAppointment = _this.state.addedAppointment;\n      onCommitChanges({\n        added: stateAddedAppointment\n      });\n    };\n    _this.commitDeletedAppointment = function (_a) {\n      var deletedAppointmentData = _a.deletedAppointmentData,\n        _b = _a.type,\n        type = _b === void 0 ? 'current' : _b;\n      var _c = _this.props,\n        onCommitChanges = _c.onCommitChanges,\n        preCommitChanges = _c.preCommitChanges;\n      var changes = deletedAppointmentData.rRule ? preCommitChanges(null, deletedAppointmentData, type) : {\n        deleted: deletedAppointmentData.id\n      };\n      onCommitChanges(changes);\n    };\n    return _this;\n  }\n  EditingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.editingAppointment,\n      editingAppointment = _a === void 0 ? prevState.editingAppointment : _a,\n      _b = nextProps.appointmentChanges,\n      appointmentChanges = _b === void 0 ? prevState.appointmentChanges : _b,\n      _c = nextProps.addedAppointment,\n      addedAppointment = _c === void 0 ? prevState.addedAppointment : _c;\n    return {\n      editingAppointment: editingAppointment,\n      appointmentChanges: appointmentChanges,\n      addedAppointment: addedAppointment\n    };\n  };\n  EditingStateBase.prototype.render = function () {\n    var _a = this.state,\n      addedAppointment = _a.addedAppointment,\n      editingAppointment = _a.editingAppointment,\n      appointmentChanges = _a.appointmentChanges;\n    return createElement(Plugin, {\n      name: \"EditingState\"\n    }, createElement(Getter, {\n      name: \"editingAppointment\",\n      value: editingAppointment\n    }), createElement(Action, {\n      name: \"startEditAppointment\",\n      action: this.startEditAppointment\n    }), createElement(Action, {\n      name: \"stopEditAppointment\",\n      action: this.stopEditAppointment\n    }), createElement(Getter, {\n      name: \"appointmentChanges\",\n      value: appointmentChanges\n    }), createElement(Action, {\n      name: \"changeAppointment\",\n      action: this.changeAppointment\n    }), createElement(Action, {\n      name: \"cancelChangedAppointment\",\n      action: this.cancelChangedAppointment\n    }), createElement(Action, {\n      name: \"commitChangedAppointment\",\n      action: this.commitChangedAppointment\n    }), createElement(Getter, {\n      name: \"addedAppointment\",\n      value: addedAppointment\n    }), createElement(Action, {\n      name: \"addAppointment\",\n      action: this.addAppointment\n    }), createElement(Action, {\n      name: \"changeAddedAppointment\",\n      action: this.changeAddedAppointment\n    }), createElement(Action, {\n      name: \"cancelAddedAppointment\",\n      action: this.cancelAddedAppointment\n    }), createElement(Action, {\n      name: \"commitAddedAppointment\",\n      action: this.commitAddedAppointment\n    }), createElement(Action, {\n      name: \"commitDeletedAppointment\",\n      action: this.commitDeletedAppointment\n    }));\n  };\n  EditingStateBase.defaultProps = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChanges\n  };\n  return EditingStateBase;\n}(PureComponent);\n/** A plugin that manages the scheduler appointment editing state. */\nvar EditingState = EditingStateBase;\nvar pluginDependencies$4 = [{\n  name: 'Appointments'\n}, {\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON\n};\nvar AppointmentTooltipBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentTooltipBase, _super);\n  function AppointmentTooltipBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentMeta: function () {\n        var onAppointmentMetaChange = _this.props.onAppointmentMetaChange;\n        return onAppointmentMetaChange;\n      }\n    });\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentMeta = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    _this.onAppointmentClick = function (_a) {\n      var target = _a.target,\n        data = _a.data;\n      _this.setAppointmentMeta({\n        target: target,\n        data: data\n      });\n      _this.toggleVisibility();\n    };\n    return _this;\n  }\n  AppointmentTooltipBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n      visible = _a === void 0 ? prevState.visible : _a,\n      _b = nextProps.appointmentMeta,\n      appointmentMeta = _b === void 0 ? prevState.appointmentMeta : _b;\n    return {\n      appointmentMeta: appointmentMeta,\n      visible: visible\n    };\n  };\n  AppointmentTooltipBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      showOpenButton = _a.showOpenButton,\n      showDeleteButton = _a.showDeleteButton,\n      showCloseButton = _a.showCloseButton,\n      Layout = _a.layoutComponent,\n      headerComponent = _a.headerComponent,\n      contentComponent = _a.contentComponent,\n      commandButtonComponent = _a.commandButtonComponent,\n      recurringIconComponent = _a.recurringIconComponent;\n    var _b = this.state,\n      visible = _b.visible,\n      appointmentMeta = _b.appointmentMeta;\n    return createElement(Plugin, {\n      name: \"AppointmentTooltip\",\n      dependencies: pluginDependencies$4\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplatePlaceholder, null), createElement(TemplateConnector, null, function (_a, _b) {\n      var formatDate = _a.formatDate,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var finishDeleteAppointment = _b.finishDeleteAppointment,\n        openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n      var onDeleteButtonClick = function () {\n        if (!finishDeleteAppointment) {\n          return;\n        }\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n            appointmentData: appointmentMeta.data\n          });\n        } else {\n          _this.toggleVisibility();\n          finishDeleteAppointment(appointmentMeta.data);\n        }\n      };\n      return createElement(TemplatePlaceholder, {\n        name: \"tooltip\",\n        params: {\n          commandButtonComponent: commandButtonComponent,\n          recurringIconComponent: recurringIconComponent,\n          showOpenButton: showOpenButton,\n          showDeleteButton: showDeleteButton,\n          showCloseButton: showCloseButton,\n          headerComponent: headerComponent,\n          contentComponent: contentComponent,\n          appointmentMeta: appointmentMeta,\n          appointmentResources: appointmentMeta ? getAppointmentResources(appointmentMeta.data, resources, plainResources) : [],\n          visible: visible,\n          onHide: _this.toggleVisibility,\n          commandButtonIds: commandButtonIds,\n          onDeleteButtonClick: onDeleteButtonClick,\n          formatDate: formatDate\n        }\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(Layout, __assign({}, params));\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplatePlaceholder, {\n        params: __assign(__assign({}, params), {\n          onClick: function (_a) {\n            var target = _a.target,\n              data = _a.data;\n            return _this.onAppointmentClick({\n              target: target,\n              data: data\n            });\n          }\n        })\n      });\n    }));\n  };\n  AppointmentTooltipBase.defaultProps = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false\n  };\n  AppointmentTooltipBase.components = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon'\n  };\n  return AppointmentTooltipBase;\n}(PureComponent);\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nvar AppointmentTooltip = AppointmentTooltipBase;\nvar addDoubleClickToCell = function (title, startDate, endDate, groupingInfo, resources, allDay, openFormHandler, addAppointment, params) {\n  var resourceFields = !!groupingInfo ? groupingInfo.reduce(function (acc, currentGroup) {\n    var _a;\n    return __assign(__assign({}, acc), (_a = {}, _a[currentGroup.fieldName] = currentGroup.id, _a));\n  }, {}) : {};\n  var validResourceFields = resources ? checkMultipleResourceFields(resourceFields, resources) : resourceFields;\n  var newAppointmentData = __assign({\n    title: title,\n    startDate: startDate,\n    endDate: endDate,\n    allDay: allDay\n  }, validResourceFields);\n  return createElement(TemplatePlaceholder, {\n    params: __assign(__assign({}, params), {\n      onDoubleClick: function () {\n        openFormHandler(newAppointmentData);\n        callActionIfExists(addAppointment, {\n          appointmentData: newAppointmentData\n        });\n      }\n    })\n  });\n};\nvar defaultMessages$1 = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every'\n};\nvar CommandLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"commandLayout\"\n  });\n};\nvar BasicLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"basicLayout\"\n  });\n};\nvar RecurrenceLayoutPlaceholder = function () {\n  return createElement(TemplatePlaceholder, {\n    name: \"recurrenceLayout\"\n  });\n};\nvar pluginDependencies$5 = [{\n  name: 'EditingState',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}, {\n  name: 'AppointmentTooltip',\n  optional: true\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar prepareChanges = function (appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources) {\n  var isNew = !editingAppointment;\n  var changedAppointment = __assign(__assign(__assign({}, appointmentData), appointmentChanges), isNew && addedAppointment);\n  var appointmentResources = getAppointmentResources(changedAppointment, resources, plainResources);\n  var isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return {\n    changedAppointment: changedAppointment,\n    appointmentResources: appointmentResources,\n    isNew: isNew,\n    isFormEdited: isFormEdited\n  };\n};\nvar isFormFullSize = function (isFormVisible, changedAppointmentRRule, previousAppointmentRRule) {\n  return !!changedAppointmentRRule || !isFormVisible && !!previousAppointmentRRule;\n};\nvar AppointmentFormBase = /*#__PURE__*/function (_super) {\n  __extends(AppointmentFormBase, _super);\n  function AppointmentFormBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.container = createRef();\n    _this.commitChanges = memoize(function (finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment) {\n      return function () {\n        _this.toggleVisibility();\n        if (isNew) {\n          callActionIfExists(commitAddedAppointment, changedAppointment);\n        } else if (finishCommitAppointment) {\n          finishCommitAppointment();\n        }\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.cancelChanges = memoize(function (openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges, changedAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n      return function () {\n        if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n          openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n        } else {\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentChanges);\n          } else {\n            callActionIfExists(stopEditAppointment, appointmentChanges);\n            callActionIfExists(cancelChangedAppointment, appointmentChanges);\n          }\n          _this.toggleVisibility();\n        }\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.deleteAppointment = memoize(function (finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew) {\n      return function () {\n        if (openDeleteConfirmationDialog) {\n          openDeleteConfirmationDialog({\n            hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n            appointmentData: changedAppointment\n          });\n        } else {\n          callActionIfExists(finishDeleteAppointment, appointmentData);\n          if (isNew) {\n            callActionIfExists(cancelAddedAppointment, appointmentData);\n          } else {\n            callActionIfExists(cancelChangedAppointment, appointmentData);\n            callActionIfExists(stopEditAppointment, appointmentData);\n          }\n          _this.toggleVisibility();\n        }\n        _this.setState({\n          previousAppointment: changedAppointment\n        });\n      };\n    });\n    _this.changeAppointmentField = memoize(function (isNew, changeAddedAppointment, changeAppointment) {\n      return function (change) {\n        if (change && change.rRule) {\n          _this.setState({\n            previousAppointment: __assign(__assign({}, _this.state.previousAppointment), {\n              rRule: change.rRule\n            })\n          });\n        }\n        if (isNew) {\n          callActionIfExists(changeAddedAppointment, {\n            change: change\n          });\n        } else {\n          callActionIfExists(changeAppointment, {\n            change: change\n          });\n        }\n      };\n    });\n    _this.getMessage = memoize(function (menuMessages, messages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    _this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {}\n    };\n    var stateHelper = createStateHelper(_this, {\n      visible: function () {\n        var onVisibilityChange = _this.props.onVisibilityChange;\n        return onVisibilityChange;\n      },\n      appointmentData: function () {\n        var onAppointmentDataChange = _this.props.onAppointmentDataChange;\n        return onAppointmentDataChange;\n      }\n    });\n    var toggleVisibility = function () {\n      var isOpen = _this.state.visible;\n      return !isOpen;\n    };\n    _this.toggleVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'visible', toggleVisibility);\n    _this.setAppointmentData = stateHelper.applyFieldReducer.bind(stateHelper, 'appointmentData', setAppointmentData);\n    _this.openFormHandler = function (appointmentData) {\n      _this.setAppointmentData({\n        appointmentData: appointmentData\n      });\n      _this.toggleVisibility();\n    };\n    return _this;\n  }\n  AppointmentFormBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.visible,\n      visible = _a === void 0 ? prevState.visible : _a,\n      _b = nextProps.appointmentData,\n      appointmentData = _b === void 0 ? prevState.appointmentData : _b;\n    return {\n      appointmentData: appointmentData,\n      visible: visible\n    };\n  };\n  AppointmentFormBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.props,\n      Container = _a.containerComponent,\n      Overlay = _a.overlayComponent,\n      Layout = _a.layoutComponent,\n      CommandLayout = _a.commandLayoutComponent,\n      BasicLayout = _a.basicLayoutComponent,\n      RecurrenceLayout = _a.recurrenceLayoutComponent,\n      commandButtonComponent = _a.commandButtonComponent,\n      textEditorComponent = _a.textEditorComponent,\n      labelComponent = _a.labelComponent,\n      dateEditorComponent = _a.dateEditorComponent,\n      booleanEditorComponent = _a.booleanEditorComponent,\n      selectComponent = _a.selectComponent,\n      radioGroupComponent = _a.radioGroupComponent,\n      weeklyRecurrenceSelectorComponent = _a.weeklyRecurrenceSelectorComponent,\n      resourceEditorComponent = _a.resourceEditorComponent,\n      readOnly = _a.readOnly,\n      messages = _a.messages;\n    var _b = this.state,\n      visible = _b.visible,\n      appointmentData = _b.appointmentData,\n      previousAppointment = _b.previousAppointment;\n    var getMessage = this.getMessage(defaultMessages$1, messages);\n    return createElement(Plugin, {\n      name: \"AppointmentForm\",\n      dependencies: pluginDependencies$5\n    }, createElement(Action, {\n      name: TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n      action: this.toggleVisibility\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n        stopEditAppointment = _b.stopEditAppointment,\n        cancelAddedAppointment = _b.cancelAddedAppointment,\n        cancelChangedAppointment = _b.cancelChangedAppointment;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n        changedAppointment = _c.changedAppointment,\n        isNew = _c.isNew;\n      var fullSize = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      var onHideAction = function () {\n        return visible && _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment)();\n      };\n      return createElement(Fragment, null, createElement(Container, {\n        ref: _this.container\n      }), createElement(Overlay, {\n        visible: visible,\n        onHide: onHideAction,\n        fullSize: fullSize,\n        target: _this.container\n      }, createElement(Layout, {\n        basicLayoutComponent: BasicLayoutPlaceholder,\n        commandLayoutComponent: CommandLayoutPlaceholder,\n        recurrenceLayoutComponent: RecurrenceLayoutPlaceholder,\n        isRecurrence: fullSize\n      })), createElement(TemplatePlaceholder, null));\n    })), createElement(Template, {\n      name: \"commandLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var commitAddedAppointment = _b.commitAddedAppointment,\n        finishCommitAppointment = _b.finishCommitAppointment,\n        finishDeleteAppointment = _b.finishDeleteAppointment,\n        stopEditAppointment = _b.stopEditAppointment,\n        cancelAddedAppointment = _b.cancelAddedAppointment,\n        cancelChangedAppointment = _b.cancelChangedAppointment,\n        openCancelConfirmationDialog = _b.openCancelConfirmationDialog,\n        openDeleteConfirmationDialog = _b.openDeleteConfirmationDialog;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n        isNew = _c.isNew,\n        changedAppointment = _c.changedAppointment,\n        isFormEdited = _c.isFormEdited;\n      var isRecurrence = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      return createElement(CommandLayout, {\n        commandButtonComponent: commandButtonComponent,\n        onCommitButtonClick: _this.commitChanges(finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment),\n        onCancelButtonClick: _this.cancelChanges(openCancelConfirmationDialog, isNew, stopEditAppointment, __assign(__assign({}, appointmentChanges), addedAppointment), changedAppointment, cancelAddedAppointment, cancelChangedAppointment),\n        onDeleteButtonClick: _this.deleteAppointment(finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog, changedAppointment, cancelAddedAppointment, cancelChangedAppointment, stopEditAppointment, isNew),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        fullSize: isRecurrence,\n        disableSaveButton: !isFormEdited,\n        hideDeleteButton: isNew\n      });\n    })), createElement(Template, {\n      name: \"basicLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        locale = _a.locale,\n        resources = _a.resources,\n        plainResources = _a.plainResources;\n      var changeAppointment = _b.changeAppointment,\n        changeAddedAppointment = _b.changeAddedAppointment;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, resources, plainResources),\n        isNew = _c.isNew,\n        changedAppointment = _c.changedAppointment,\n        appointmentResources = _c.appointmentResources;\n      return createElement(BasicLayout, {\n        locale: locale,\n        appointmentData: visible ? changedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        booleanEditorComponent: booleanEditorComponent,\n        selectComponent: selectComponent,\n        labelComponent: labelComponent,\n        resourceEditorComponent: resourceEditorComponent,\n        fullSize: !changedAppointment.rRule,\n        resources: resources,\n        appointmentResources: appointmentResources\n      });\n    })), createElement(Template, {\n      name: \"recurrenceLayout\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var editingAppointment = _a.editingAppointment,\n        addedAppointment = _a.addedAppointment,\n        appointmentChanges = _a.appointmentChanges,\n        formatDate = _a.formatDate,\n        locale = _a.locale,\n        firstDayOfWeek = _a.firstDayOfWeek;\n      var changeAddedAppointment = _b.changeAddedAppointment,\n        changeAppointment = _b.changeAppointment;\n      var _c = prepareChanges(appointmentData, editingAppointment, addedAppointment, appointmentChanges, undefined, undefined),\n        isNew = _c.isNew,\n        changedAppointment = _c.changedAppointment;\n      var isRecurrenceLayoutVisible = isFormFullSize(visible, changedAppointment.rRule, previousAppointment.rRule);\n      var correctedAppointment = !changedAppointment.rRule ? __assign(__assign({}, changedAppointment), {\n        rRule: previousAppointment.rRule\n      }) : changedAppointment;\n      return createElement(RecurrenceLayout, {\n        locale: locale,\n        appointmentData: visible ? correctedAppointment : previousAppointment,\n        onFieldChange: _this.changeAppointmentField(isNew, changeAddedAppointment, changeAppointment),\n        getMessage: getMessage,\n        readOnly: readOnly,\n        formatDate: formatDate,\n        textEditorComponent: textEditorComponent,\n        dateEditorComponent: dateEditorComponent,\n        radioGroupComponent: radioGroupComponent,\n        weeklyRecurrenceSelectorComponent: weeklyRecurrenceSelectorComponent,\n        labelComponent: labelComponent,\n        selectComponent: selectComponent,\n        visible: isRecurrenceLayoutVisible,\n        firstDayOfWeek: firstDayOfWeek\n      });\n    })), createElement(Template, {\n      name: \"tooltip\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onOpenButtonClick: function () {\n              _this.openFormHandler(params.appointmentMeta.data);\n              callActionIfExists(startEditAppointment, params.appointmentMeta.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"appointment\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (getters, _a) {\n        var startEditAppointment = _a.startEditAppointment;\n        return createElement(TemplatePlaceholder, {\n          params: __assign(__assign({}, params), {\n            onDoubleClick: function () {\n              _this.openFormHandler(params.data);\n              callActionIfExists(startEditAppointment, params.data);\n            }\n          })\n        });\n      });\n    }), createElement(Template, {\n      name: \"cell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, isAllDayCell(params.startDate, params.endDate), _this.openFormHandler, addAppointment, params);\n      });\n    }), createElement(Template, {\n      name: \"allDayPanelCell\"\n    }, function (params) {\n      return createElement(TemplateConnector, null, function (_a, _b) {\n        var resources = _a.resources;\n        var addAppointment = _b.addAppointment;\n        return addDoubleClickToCell(undefined, params.startDate, params.endDate, params.groupingInfo, resources, true, _this.openFormHandler, addAppointment, params);\n      });\n    }));\n  };\n  AppointmentFormBase.defaultProps = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: function () {\n      return undefined;\n    },\n    onAppointmentDataChange: function () {\n      return undefined;\n    }\n  };\n  AppointmentFormBase.components = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container'\n  };\n  return AppointmentFormBase;\n}(PureComponent);\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nvar AppointmentForm = AppointmentFormBase;\nvar renderAppointmentItems = function (items, Wrapper, draftData) {\n  return items.length > 0 ? createElement(Wrapper, null, items.map(function (draftAppointment, index) {\n    return createElement(TemplatePlaceholder, {\n      name: \"draftAppointment\",\n      key: index.toString(),\n      params: {\n        data: draftData,\n        draftAppointment: draftAppointment\n      }\n    });\n  })) : null;\n};\nvar pluginDependencies$6 = [{\n  name: 'EditingState'\n}, {\n  name: 'Appointments'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'AllDayPanel',\n  optional: true\n}];\nvar DragDropProviderBase = /*#__PURE__*/function (_super) {\n  __extends(DragDropProviderBase, _super);\n  function DragDropProviderBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.timeTableDraftAppointments = [];\n    _this.allDayDraftAppointments = [];\n    _this.offsetTimeTop = null;\n    _this.appointmentStartTime = null;\n    _this.appointmentEndTime = null;\n    _this.appointmentGroupingInfo = {};\n    _this.state = {\n      startTime: null,\n      endTime: null,\n      appointmentGroupingInfo: null,\n      payload: null,\n      isOutside: false,\n      allowDrag: function () {\n        return true;\n      },\n      allowResize: function () {\n        return true;\n      },\n      appointmentContentTemplateKey: 0,\n      appointmentTopTemplateKey: 0,\n      appointmentBottomTemplateKey: 0\n    };\n    _this.handleDrop = function (_a) {\n      var finishCommitAppointment = _a.finishCommitAppointment;\n      return function () {\n        finishCommitAppointment();\n        _this.resetCache();\n      };\n    };\n    _this.handleLeave = function () {\n      _this.setState({\n        isOutside: true\n      });\n    };\n    return _this;\n  }\n  DragDropProviderBase.getDerivedStateFromProps = function (props, state) {\n    var isAllowDragSame = props.allowDrag === state.allowDrag;\n    var isAllowResizeSame = props.allowResize === state.allowResize;\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n    return __assign(__assign({}, state), {\n      appointmentContentTemplateKey: isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey: isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey: isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize\n    });\n  };\n  DragDropProviderBase.prototype.onPayloadChange = function (actions) {\n    var _this = this;\n    return function (args) {\n      return _this.handlePayloadChange(args, actions);\n    };\n  };\n  DragDropProviderBase.prototype.calculateNextBoundaries = function (getters, actions, scrollSpeed) {\n    var _this = this;\n    return function (args) {\n      return _this.calculateBoundaries(args, getters, actions, scrollSpeed);\n    };\n  };\n  DragDropProviderBase.prototype.resetCache = function () {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false\n    });\n  };\n  DragDropProviderBase.prototype.applyChanges = function (startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: __assign(__assign({\n        startDate: startTime,\n        endDate: endTime\n      }, payload.allDay && {\n        allDay: undefined\n      }), this.appointmentGroupingInfo)\n    });\n    this.setState({\n      startTime: startTime,\n      endTime: endTime,\n      payload: payload,\n      isOutside: false,\n      appointmentGroupingInfo: appointmentGroupingInfo\n    });\n  };\n  DragDropProviderBase.prototype.handlePayloadChange = function (_a, _b) {\n    var payload = _a.payload;\n    var finishCommitAppointment = _b.finishCommitAppointment;\n    var isOutside = this.state.isOutside;\n    if (payload || !isOutside) return;\n    finishCommitAppointment();\n    this.resetCache();\n  };\n  DragDropProviderBase.prototype.calculateBoundaries = function (_a, _b, _c, scrollSpeed) {\n    var payload = _a.payload,\n      clientOffset = _a.clientOffset;\n    var viewCellsData = _b.viewCellsData,\n      allDayCellsData = _b.allDayCellsData,\n      startViewDate = _b.startViewDate,\n      endViewDate = _b.endViewDate,\n      excludedDays = _b.excludedDays,\n      currentView = _b.currentView,\n      timeTableElementsMeta = _b.timeTableElementsMeta,\n      allDayElementsMeta = _b.allDayElementsMeta,\n      scrollingStrategy = _b.scrollingStrategy,\n      grouping = _b.grouping,\n      resources = _b.resources,\n      groups = _b.groups,\n      getGroupOrientation = _b.groupOrientation,\n      groupByDate = _b.groupByDate;\n    var changeAppointment = _c.changeAppointment,\n      startEditAppointment = _c.startEditAppointment;\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n    var tableCellElementsMeta = timeTableElementsMeta;\n    var groupOrientation = getGroupOrientation ? getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) : HORIZONTAL_GROUP_ORIENTATION;\n    // AllDayPanel doesn't always exist\n    var allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects ? allDayElementsMeta : {\n      getCellRects: []\n    };\n    var timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    var allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n    var targetData = cellData(timeTableIndex, allDayIndex, viewCellsData, allDayCellsData);\n    var targetType = cellType(targetData);\n    var insidePart = calculateInsidePart(clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex);\n    var cellDurationMinutes = intervalDuration(targetData, 'minutes');\n    var _d = calculateAppointmentTimeBoundaries(payload, targetData, targetType, cellDurationMinutes, insidePart, this.offsetTimeTop),\n      appointmentStartTime = _d.appointmentStartTime,\n      appointmentEndTime = _d.appointmentEndTime,\n      offsetTimeTop = _d.offsetTimeTop;\n    var appointmentGroups = calculateAppointmentGroups(targetData.groupingInfo, resources, payload);\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop;\n    var _e = this.state,\n      startTime = _e.startTime,\n      endTime = _e.endTime,\n      appointmentGroupingInfo = _e.appointmentGroupingInfo;\n    if (!appointmentDragged(this.appointmentStartTime, startTime, this.appointmentEndTime, endTime, this.appointmentGroupingInfo, appointmentGroupingInfo)) {\n      return;\n    }\n    var draftAppointments = [{\n      dataItem: __assign(__assign(__assign({}, payload), {\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime\n      }), this.appointmentGroupingInfo),\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime\n    }];\n    var _f = calculateDraftAppointments(allDayIndex, draftAppointments, startViewDate, endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta, targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups, groupOrientation, groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name)),\n      allDayDraftAppointments = _f.allDayDraftAppointments,\n      timeTableDraftAppointments = _f.timeTableDraftAppointments;\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n    this.applyChanges(this.appointmentStartTime, this.appointmentEndTime, payload, startEditAppointment, changeAppointment, this.appointmentGroupingInfo);\n  };\n  DragDropProviderBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.state,\n      payload = _a.payload,\n      appointmentContentTemplateKey = _a.appointmentContentTemplateKey,\n      appointmentBottomTemplateKey = _a.appointmentBottomTemplateKey,\n      appointmentTopTemplateKey = _a.appointmentTopTemplateKey;\n    var _b = this.props,\n      Container = _b.containerComponent,\n      DraftAppointment = _b.draftAppointmentComponent,\n      SourceAppointment = _b.sourceAppointmentComponent,\n      Resize = _b.resizeComponent,\n      allowDrag = _b.allowDrag,\n      allowResize = _b.allowResize,\n      scrollSpeed = _b.scrollSpeed;\n    var draftData = __assign(__assign({}, payload), {\n      startDate: this.appointmentStartTime,\n      endDate: this.appointmentEndTime\n    });\n    return createElement(Plugin, {\n      name: \"DragDropProvider\",\n      dependencies: pluginDependencies$6\n    }, createElement(Template, {\n      name: \"body\"\n    }, createElement(TemplateConnector, null, function (_a, _b) {\n      var viewCellsData = _a.viewCellsData,\n        allDayCellsData = _a.allDayCellsData,\n        startViewDate = _a.startViewDate,\n        endViewDate = _a.endViewDate,\n        excludedDays = _a.excludedDays,\n        timeTableElementsMeta = _a.timeTableElementsMeta,\n        allDayElementsMeta = _a.allDayElementsMeta,\n        scrollingStrategy = _a.scrollingStrategy,\n        grouping = _a.grouping,\n        resources = _a.resources,\n        groups = _a.groups,\n        currentView = _a.currentView,\n        groupByDate = _a.groupByDate,\n        groupOrientation = _a.groupOrientation;\n      var changeAppointment = _b.changeAppointment,\n        startEditAppointment = _b.startEditAppointment,\n        finishCommitAppointment = _b.finishCommitAppointment;\n      var calculateBoundariesByMove = _this.calculateNextBoundaries({\n        viewCellsData: viewCellsData,\n        allDayCellsData: allDayCellsData,\n        currentView: currentView,\n        startViewDate: startViewDate,\n        endViewDate: endViewDate,\n        excludedDays: excludedDays,\n        timeTableElementsMeta: timeTableElementsMeta,\n        allDayElementsMeta: allDayElementsMeta,\n        scrollingStrategy: scrollingStrategy,\n        resources: resources,\n        grouping: grouping,\n        groups: groups,\n        groupByDate: groupByDate,\n        groupOrientation: groupOrientation\n      }, {\n        changeAppointment: changeAppointment,\n        startEditAppointment: startEditAppointment\n      }, scrollSpeed);\n      return createElement(DragDropProvider$1, {\n        onChange: _this.onPayloadChange({\n          finishCommitAppointment: finishCommitAppointment\n        })\n      }, createElement(DropTarget, {\n        onOver: calculateBoundariesByMove,\n        onEnter: calculateBoundariesByMove,\n        onDrop: _this.handleDrop({\n          finishCommitAppointment: finishCommitAppointment\n        }),\n        onLeave: _this.handleLeave\n      }, createElement(PlaceholderWithRef, null)));\n    })), createElement(Template, {\n      name: \"appointmentContent\",\n      predicate: function (_a) {\n        var data = _a.data;\n        return allowDrag(data);\n      },\n      key: appointmentContentTemplateKey\n    }, function (_a) {\n      var styles = _a.styles,\n        params = __rest(_a, [\"styles\"]);\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, params.data), {\n          type: params.type\n        })\n      }, payload && params.data.id === payload.id ? createElement(SourceAppointment, __assign({}, params)) : createElement(PlaceholderWithRef, {\n        params: __assign(__assign({}, params), {\n          draggable: true\n        })\n      }));\n    }), createElement(Template, {\n      name: \"appointmentTop\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentTopTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n        type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_TOP,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_START,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"appointmentBottom\",\n      predicate: function (params) {\n        return !params.slice && allowResize(params.data);\n      },\n      key: appointmentBottomTemplateKey\n    }, function (_a) {\n      var data = _a.data,\n        type = _a.type;\n      return createElement(DragSource, {\n        payload: __assign(__assign({}, data), {\n          type: RESIZE_BOTTOM,\n          appointmentType: type\n        })\n      }, createElement(Resize, {\n        position: POSITION_END,\n        appointmentType: type\n      }));\n    }), createElement(Template, {\n      name: \"allDayPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) !== VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"timeTable\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var currentView = _a.currentView,\n        groupOrientation = _a.groupOrientation;\n      return createElement(Fragment, null, createElement(TemplatePlaceholder, null), renderAppointmentItems(_this.timeTableDraftAppointments, Container, draftData), (groupOrientation === null || groupOrientation === void 0 ? void 0 : groupOrientation(currentView.name)) === VERTICAL_GROUP_ORIENTATION ? renderAppointmentItems(_this.allDayDraftAppointments, Container, draftData) : null);\n    })), createElement(Template, {\n      name: \"draftAppointment\"\n    }, function (_a) {\n      var data = _a.data,\n        draftAppointment = _a.draftAppointment,\n        restParams = __rest(_a, [\"data\", \"draftAppointment\"]);\n      return createElement(TemplateConnector, null, function (_a) {\n        var formatDate = _a.formatDate,\n          resources = _a.resources,\n          plainResources = _a.plainResources;\n        var dataItem = draftAppointment.dataItem,\n          type = draftAppointment.type,\n          fromPrev = draftAppointment.fromPrev,\n          toNext = draftAppointment.toNext,\n          durationType = draftAppointment.durationType,\n          geometry = __rest(draftAppointment, [\"dataItem\", \"type\", \"fromPrev\", \"toNext\", \"durationType\"]);\n        return createElement(DraftAppointment, __assign({\n          data: data,\n          resources: getAppointmentResources(dataItem, resources, plainResources),\n          durationType: durationType,\n          style: getAppointmentStyle(geometry),\n          type: type,\n          fromPrev: fromPrev,\n          toNext: toNext,\n          formatDate: formatDate\n        }, restParams));\n      });\n    }));\n  };\n  DragDropProviderBase.components = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize'\n  };\n  DragDropProviderBase.defaultProps = {\n    allowDrag: function () {\n      return true;\n    },\n    allowResize: function () {\n      return true;\n    },\n    scrollSpeed: SCROLL_SPEED_PX\n  };\n  return DragDropProviderBase;\n}(PureComponent);\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nvar DragDropProvider = DragDropProviderBase;\nvar pluginDependencies$7 = [{\n  name: 'Toolbar'\n}, {\n  name: 'ViewState'\n}];\nvar defaultMessages$2 = {\n  today: 'Today'\n};\nvar TodayButtonBase = /*#__PURE__*/function (_super) {\n  __extends(TodayButtonBase, _super);\n  function TodayButtonBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  TodayButtonBase.prototype.render = function () {\n    var _a = this.props,\n      Button = _a.buttonComponent,\n      messages = _a.messages;\n    var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$2), messages));\n    return createElement(Plugin, {\n      name: \"TodayButton\",\n      dependencies: pluginDependencies$7\n    }, createElement(Template, {\n      name: \"toolbarContent\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var changeCurrentDate = _a.changeCurrentDate;\n      var setCurrentDate = function (nextDate) {\n        return changeCurrentDate({\n          nextDate: nextDate\n        });\n      };\n      return createElement(Button, {\n        getMessage: getMessage,\n        setCurrentDate: setCurrentDate\n      });\n    }), createElement(TemplatePlaceholder, null)));\n  };\n  TodayButtonBase.components = {\n    buttonComponent: 'Button'\n  };\n  return TodayButtonBase;\n}(PureComponent);\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nvar TodayButton = TodayButtonBase;\nvar _a;\nvar pluginDependencies$8 = [{\n  name: 'EditingState'\n}];\nvar defaultAvailableOperations = [{\n  value: RECURRENCE_EDIT_SCOPE.CURRENT\n}, {\n  value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING\n}, {\n  value: RECURRENCE_EDIT_SCOPE.ALL\n}];\nvar defaultMessages$3 = (_a = {}, _a[RECURRENCE_EDIT_SCOPE.CURRENT] = 'This appointment', _a[RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING] = 'This and following appointments', _a[RECURRENCE_EDIT_SCOPE.ALL] = 'All appointments', _a.menuEditingTitle = 'Edit recurring appointment', _a.menuDeletingTitle = 'Delete recurring appointment', _a.cancelButton = 'Cancel', _a.commitButton = 'OK', _a);\nvar EditRecurrenceMenuBase = /*#__PURE__*/function (_super) {\n  __extends(EditRecurrenceMenuBase, _super);\n  function EditRecurrenceMenuBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.modalContainer = createRef();\n    _this.state = {\n      isOpen: false,\n      deletedAppointmentData: null\n    };\n    _this.finishCommitAppointment = function (payload, _a, _b) {\n      var editingAppointment = _a.editingAppointment;\n      var commitChangedAppointment = _b.commitChangedAppointment;\n      if (editingAppointment && !editingAppointment.rRule) {\n        commitChangedAppointment();\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: null\n        });\n      }\n    };\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n      if (payload && !payload.rRule) {\n        commitDeletedAppointment({\n          deletedAppointmentData: payload\n        });\n      } else {\n        _this.setState({\n          isOpen: true,\n          deletedAppointmentData: payload\n        });\n      }\n    };\n    _this.commit = memoize(function (editAction, deleteAction, payload) {\n      return function (type) {\n        if (payload) {\n          deleteAction({\n            deletedAppointmentData: payload,\n            type: type\n          });\n        } else {\n          editAction(type);\n        }\n        _this.closeMenu();\n      };\n    });\n    _this.closeMenu = function () {\n      _this.setState({\n        isOpen: false,\n        deletedAppointmentData: null\n      });\n    };\n    _this.cancelEditing = memoize(function (cancelAction, stopEditAction) {\n      return function () {\n        stopEditAction();\n        cancelAction();\n        _this.closeMenu();\n      };\n    });\n    _this.availableOperations = memoize(function (getMessage, menuAvailableOperations) {\n      return menuAvailableOperations.map(function (_a) {\n        var value = _a.value;\n        return {\n          value: value,\n          title: getMessage([value])\n        };\n      });\n    });\n    _this.getMessage = memoize(function (messages, menuMessages) {\n      return getMessagesFormatter(__assign(__assign({}, menuMessages), messages));\n    });\n    return _this;\n  }\n  EditRecurrenceMenuBase.prototype.render = function () {\n    var _this = this;\n    var _a = this.state,\n      isOpen = _a.isOpen,\n      deletedAppointmentData = _a.deletedAppointmentData;\n    var _b = this.props,\n      Layout = _b.layoutComponent,\n      Overlay = _b.overlayComponent,\n      Container = _b.containerComponent,\n      buttonComponent = _b.buttonComponent,\n      messages = _b.messages;\n    var getMessage = this.getMessage(messages, defaultMessages$3);\n    var availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n    return createElement(Plugin, {\n      name: \"EditRecurrenceMenu\",\n      dependencies: pluginDependencies$8\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }), createElement(Template, {\n      name: \"schedulerRoot\"\n    }, createElement(TemplatePlaceholder, null), createElement(Container, {\n      ref: this.modalContainer\n    }), createElement(TemplatePlaceholder, {\n      name: \"overlay\"\n    })), createElement(Template, {\n      name: \"overlay\"\n    }, createElement(TemplateConnector, null, function (getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment,\n        commitDeletedAppointment = _a.commitDeletedAppointment,\n        cancelChangedAppointment = _a.cancelChangedAppointment,\n        stopEditAppointment = _a.stopEditAppointment;\n      var commit = _this.commit(commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData);\n      var cancelEditing = _this.cancelEditing(cancelChangedAppointment, stopEditAppointment);\n      return createElement(Overlay, {\n        target: _this.modalContainer,\n        visible: isOpen,\n        onHide: _this.closeMenu\n      }, createElement(Layout, {\n        isDeleting: !!deletedAppointmentData,\n        buttonComponent: buttonComponent,\n        handleClose: cancelEditing,\n        commit: commit,\n        availableOperations: availableOperations,\n        getMessage: getMessage\n      }));\n    })));\n  };\n  EditRecurrenceMenuBase.components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container'\n  };\n  return EditRecurrenceMenuBase;\n}(PureComponent);\n/**\r\n * A plugin that renders the Scheduler's edit menu.\r\n * Should not be used with the `IntegratedEditing` plugin.\r\n */\nvar EditRecurrenceMenu = EditRecurrenceMenuBase;\nvar pluginDependencies$9 = [{\n  name: 'EditingState'\n}];\nvar IntegratedEditingBase = /*#__PURE__*/function (_super) {\n  __extends(IntegratedEditingBase, _super);\n  function IntegratedEditingBase() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.finishCommitAppointment = function (payload, getters, _a) {\n      var commitChangedAppointment = _a.commitChangedAppointment;\n      commitChangedAppointment();\n    };\n    _this.finishDeleteAppointment = function (payload, getters, _a) {\n      var commitDeletedAppointment = _a.commitDeletedAppointment;\n      commitDeletedAppointment({\n        deletedAppointmentData: payload\n      });\n    };\n    return _this;\n  }\n  IntegratedEditingBase.prototype.render = function () {\n    return createElement(Plugin, {\n      name: \"IntegratedEditing\",\n      dependencies: pluginDependencies$9\n    }, createElement(Action, {\n      name: \"finishCommitAppointment\",\n      action: this.finishCommitAppointment\n    }), createElement(Action, {\n      name: \"finishDeleteAppointment\",\n      action: this.finishDeleteAppointment\n    }));\n  };\n  IntegratedEditingBase.defaultProps = {\n    totalCount: 0\n  };\n  return IntegratedEditingBase;\n}(PureComponent);\n/** A plugin that allows implementing a editing calculation logic. */\nvar IntegratedEditing = IntegratedEditingBase;\nvar pluginDependencies$a = [{\n  name: 'Appointments'\n}];\nvar addResourcesToTimeTableAppointments = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n    resources = _a.resources,\n    plainResources = _a.plainResources;\n  return timeTableAppointments && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\n};\nvar addResourcesToAllDayAppointments = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n    resources = _a.resources,\n    plainResources = _a.plainResources;\n  return allDayAppointments && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n};\nvar ResourcesBase = memo(function (_a) {\n  var data = _a.data,\n    mainResourceName = _a.mainResourceName,\n    palette = _a.palette;\n  var convertResources = function (_a) {\n    var resources = _a.resources;\n    return convertResourcesToPlain(resources);\n  };\n  return createElement(Plugin, {\n    name: \"Resources\",\n    dependencies: pluginDependencies$a\n  }, createElement(Getter, {\n    name: \"resources\",\n    value: validateResources(data, mainResourceName, palette)\n  }), createElement(Getter, {\n    name: \"plainResources\",\n    computed: convertResources\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: addResourcesToTimeTableAppointments\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: addResourcesToAllDayAppointments\n  }));\n});\n/** A plugin that manages schedule's resources. */\nvar Resources = ResourcesBase;\nvar defaultMessages$4 = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?'\n};\nvar pluginDependencies$b = [{\n  name: 'EditingState'\n}, {\n  name: 'EditRecurrenceMenu',\n  optional: true\n}, {\n  name: 'IntegratedEditing',\n  optional: true\n}];\nvar ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete'\n};\nvar ConfirmationDialogBase = function (_a) {\n  var messages = _a.messages,\n    Overlay = _a.overlayComponent,\n    Layout = _a.layoutComponent,\n    Container = _a.containerComponent,\n    buttonComponent = _a.buttonComponent,\n    ignoreDelete = _a.ignoreDelete,\n    ignoreCancel = _a.ignoreCancel;\n  var getMessage = getMessagesFormatter(__assign(__assign({}, defaultMessages$4), messages));\n  var modalContainer = useRef();\n  var _b = __read(useState(false), 2),\n    visible = _b[0],\n    setVisible = _b[1];\n  var _c = __read(useState(''), 2),\n    actionType = _c[0],\n    setActionType = _c[1];\n  var _d = __read(useState(''), 2),\n    hideActionName = _d[0],\n    setHideActionName = _d[1];\n  var _e = __read(useState({}), 2),\n    appointmentData = _e[0],\n    setAppointmentData = _e[1];\n  var toggleVisibility = useCallback(function () {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n  var confirmCancelChanges = useCallback(function (hideAction) {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n  var confirmDelete = useCallback(function (_a) {\n    var hideAction = _a.hideActionName,\n      changedAppointment = _a.appointmentData;\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n  var confirmAction = useCallback(function (isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment, cancelAddedAppointment, cancelChangedAppointment) {\n    return function () {\n      hideEditor();\n      toggleVisibility();\n      if (isNewAppointment) {\n        cancelAddedAppointment();\n      } else {\n        stopEditAppointment();\n        cancelChangedAppointment();\n      }\n      if (actionType === ACTION_TYPES.DELETE) {\n        finishDeleteAppointment(appointmentData);\n      }\n    };\n  }, [toggleVisibility, actionType, appointmentData]);\n  return createElement(Plugin, {\n    name: \"ConfirmationDialog\",\n    dependencies: pluginDependencies$b\n  }, !ignoreCancel && createElement(Action, {\n    name: \"openCancelConfirmationDialog\",\n    action: confirmCancelChanges\n  }), !ignoreDelete && createElement(Action, {\n    name: \"openDeleteConfirmationDialog\",\n    action: confirmDelete\n  }), createElement(Template, {\n    name: \"schedulerRoot\"\n  }, createElement(TemplatePlaceholder, null), createElement(Container, {\n    ref: modalContainer\n  }), createElement(TemplatePlaceholder, {\n    name: \"confirmationDialogOverlay\"\n  })), createElement(Template, {\n    name: \"confirmationDialogOverlay\"\n  }, createElement(TemplateConnector, null, function (_a, actions) {\n    var editingAppointment = _a.editingAppointment;\n    var handleConfirm = confirmAction(!editingAppointment, actions[hideActionName], actions.stopEditAppointment, actions.finishDeleteAppointment, actions.cancelAddedAppointment, actions.cancelChangedAppointment);\n    return createElement(Overlay, {\n      target: modalContainer,\n      visible: visible,\n      onHide: toggleVisibility\n    }, createElement(Layout, {\n      buttonComponent: buttonComponent,\n      handleCancel: toggleVisibility,\n      handleConfirm: handleConfirm,\n      getMessage: getMessage,\n      isDeleting: actionType === ACTION_TYPES.DELETE,\n      appointmentData: appointmentData\n    }));\n  })));\n};\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button'\n};\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false\n};\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\nvar ConfirmationDialog = ConfirmationDialogBase;\nvar GroupingStateBase = /*#__PURE__*/function (_super) {\n  __extends(GroupingStateBase, _super);\n  function GroupingStateBase(props) {\n    var _this = _super.call(this, props) || this;\n    _this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups\n    };\n    _this.stateHelper = createStateHelper(_this, {\n      expandedGroups: function () {\n        var onExpandedGroupsChange = _this.props.onExpandedGroupsChange;\n        return onExpandedGroupsChange;\n      }\n    });\n    _this.toggleGroupExpanded = _this.stateHelper.applyReducer.bind(_this.stateHelper, toggleExpandedGroups);\n    return _this;\n  }\n  GroupingStateBase.getDerivedStateFromProps = function (nextProps, prevState) {\n    var _a = nextProps.grouping,\n      grouping = _a === void 0 ? prevState.grouping : _a,\n      _b = nextProps.expandedGroups,\n      expandedGroups = _b === void 0 ? prevState.expandedGroups : _b;\n    return {\n      grouping: grouping,\n      expandedGroups: expandedGroups\n    };\n  };\n  GroupingStateBase.prototype.render = function () {\n    var _a = this.state,\n      grouping = _a.grouping,\n      expandedGroups = _a.expandedGroups;\n    var _b = this.props,\n      groupByDate = _b.groupByDate,\n      groupOrientation = _b.groupOrientation;\n    return createElement(Plugin, {\n      name: \"GroupingState\"\n    }, createElement(Getter, {\n      name: \"grouping\",\n      value: grouping\n    }), createElement(Getter, {\n      name: \"groupByDate\",\n      value: groupByDate\n    }), createElement(Getter, {\n      name: \"groupOrientation\",\n      value: groupOrientation\n    }), createElement(Getter, {\n      name: \"expandedGroups\",\n      value: expandedGroups\n    }), createElement(Action, {\n      name: \"toggleGroupExpanded\",\n      action: this.toggleGroupExpanded\n    }));\n  };\n  GroupingStateBase.defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: function () {\n      return false;\n    },\n    groupOrientation: function () {\n      return HORIZONTAL_GROUP_ORIENTATION;\n    }\n  };\n  return GroupingStateBase;\n}(PureComponent);\n/** A plugin that manages the grouping state. */\nvar GroupingState = GroupingStateBase;\nvar pluginDependencies$c = [{\n  name: 'GroupingState'\n}, {\n  name: 'IntegratedGrouping'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'ViewState',\n  optional: true\n}];\nvar GroupingPanelBase = /*#__PURE__*/function (_super) {\n  __extends(GroupingPanelBase, _super);\n  function GroupingPanelBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  GroupingPanelBase.prototype.render = function () {\n    var _a = this.props,\n      HorizontalLayout = _a.horizontalLayoutComponent,\n      VerticalLayout = _a.verticalLayoutComponent,\n      rowComponent = _a.rowComponent,\n      cellComponent = _a.cellComponent;\n    return createElement(Plugin, {\n      name: \"GroupingPanel\",\n      dependencies: pluginDependencies$c\n    }, createElement(Template, {\n      name: \"groupingPanel\"\n    }, createElement(TemplateConnector, null, function (_a) {\n      var viewCellsData = _a.viewCellsData,\n        currentView = _a.currentView,\n        scrollingStrategy = _a.scrollingStrategy,\n        allDayPanelExists = _a.allDayPanelExists,\n        groupByDate = _a.groupByDate,\n        getGroupOrientation = _a.groupOrientation,\n        groups = _a.groups;\n      var groupOrientation = getGroupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name);\n      return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? createElement(HorizontalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        colSpan: viewCellsData[0].length,\n        cellStyle: {\n          left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth : (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH ? HORIZONTAL_VIEW_LEFT_OFFSET : VERTICAL_VIEW_LEFT_OFFSET\n        },\n        showHeaderForEveryDate: groupByDate === null || groupByDate === void 0 ? void 0 : groupByDate(currentView && currentView.name)\n      }) : createElement(VerticalLayout, {\n        rowComponent: rowComponent,\n        cellComponent: cellComponent,\n        groups: groups,\n        rowSpan: viewCellsData.length,\n        viewType: currentView === null || currentView === void 0 ? void 0 : currentView.type,\n        cellTextTopOffset: scrollingStrategy === null || scrollingStrategy === void 0 ? void 0 : scrollingStrategy.fixedTopHeight,\n        alignWithAllDayRow: allDayPanelExists\n      });\n    })));\n  };\n  GroupingPanelBase.components = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell'\n  };\n  return GroupingPanelBase;\n}(PureComponent);\n/** A plugin that renders the grouping panel used to display group names. */\nvar GroupingPanel = GroupingPanelBase;\nvar pluginDependencies$d = [{\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'DragDropProvider',\n  optional: true\n}, {\n  name: 'Appointments',\n  optional: true\n}];\nvar CurrentTimeIndicatorBase = function (_a) {\n  var indicatorComponent = _a.indicatorComponent,\n    shadePreviousAppointments = _a.shadePreviousAppointments,\n    shadePreviousCells = _a.shadePreviousCells,\n    updateInterval = _a.updateInterval;\n  var _b = __read(useState(Date.now), 2),\n    currentTime = _b[0],\n    setCurrentTime = _b[1];\n  useEffect(function () {\n    var tick = function () {\n      return setCurrentTime(Date.now());\n    };\n    var intervalId = updateInterval ? window.setInterval(tick, updateInterval) : undefined;\n    return function () {\n      return window.clearInterval(intervalId);\n    };\n  }, [updateInterval]);\n  return createElement(Plugin, {\n    name: \"CurrentTimeIndicator\",\n    dependencies: pluginDependencies$d\n  }, createElement(Template, {\n    name: \"cell\",\n    predicate: function (_a) {\n      var otherMonth = _a.otherMonth;\n      return !isMonthCell(otherMonth);\n    }\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n        currentTimeIndicatorComponent: indicatorComponent\n      })\n    });\n  }), createElement(Template, {\n    name: \"cell\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isCellShaded(params, currentTime, shadePreviousCells)\n      })\n    });\n  }), createElement(Template, {\n    name: \"appointmentContent\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }), createElement(Template, {\n    name: \"draftAppointment\"\n  }, function (params) {\n    return createElement(TemplatePlaceholder, {\n      params: __assign(__assign({}, params), {\n        isShaded: isShadedAppointment(params, currentTime, shadePreviousAppointments)\n      })\n    });\n  }));\n};\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false\n};\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator'\n};\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\nvar CurrentTimeIndicator = CurrentTimeIndicatorBase;\nvar pluginDependencies$e = [{\n  name: 'Resources'\n}, {\n  name: 'GroupingState'\n}, {\n  name: 'DayView',\n  optional: true\n}, {\n  name: 'MonthView',\n  optional: true\n}, {\n  name: 'WeekView',\n  optional: true\n}];\nvar getViewCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n    groups = _a.groups,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    groupOrientation = _a.groupOrientation;\n  return expandViewCellsDataWithGroups(viewCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\nvar getAllDayCellsDataComputed = function (_a) {\n  var allDayCellsData = _a.allDayCellsData,\n    groups = _a.groups,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    groupOrientation = _a.groupOrientation;\n  return allDayCellsData && expandViewCellsDataWithGroups(allDayCellsData, groups, resourcesToGroupBy, groupByDate(currentView.name), groupOrientation(currentView.name));\n};\nvar getGroupsComputed = function (_a) {\n  var resourcesToGroupBy = _a.resourcesToGroupBy;\n  return getGroupsFromResources(resourcesToGroupBy);\n};\nvar getResourcesToGroupByComputed = function (_a) {\n  var resources = _a.resources,\n    grouping = _a.grouping;\n  return sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n};\nvar getGroupingComputed = function (_a) {\n  var grouping = _a.grouping,\n    resources = _a.resources;\n  return updateGroupingWithMainResource(grouping, resources);\n};\nvar getTimeTableAppointmentsComputed = function (_a) {\n  var timeTableAppointments = _a.timeTableAppointments,\n    grouping = _a.grouping,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groups = _a.groups,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    excludedDays = _a.excludedDays;\n  return timeTableAppointments && expandGroups(timeTableAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name) && (currentView === null || currentView === void 0 ? void 0 : currentView.type) === VIEW_TYPES.MONTH);\n};\nvar getAllDayAppointmentsComputed = function (_a) {\n  var allDayAppointments = _a.allDayAppointments,\n    grouping = _a.grouping,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groups = _a.groups,\n    groupByDate = _a.groupByDate,\n    currentView = _a.currentView,\n    excludedDays = _a.excludedDays;\n  return allDayAppointments && expandGroups(allDayAppointments, grouping, resourcesToGroupBy, groups, excludedDays, groupByDate(currentView === null || currentView === void 0 ? void 0 : currentView.name));\n};\nvar getGroupByDateComputed = function (_a) {\n  var currentView = _a.currentView,\n    groupByDate = _a.groupByDate,\n    groupOrientation = _a.groupOrientation;\n  return groupOrientation(currentView === null || currentView === void 0 ? void 0 : currentView.name) === VERTICAL_GROUP_ORIENTATION ? function () {\n    return false;\n  } : groupByDate;\n};\nvar getTimeTableElementsMetaComputed = function (_a) {\n  var timeTableElementsMeta = _a.timeTableElementsMeta,\n    groupOrientation = _a.groupOrientation,\n    groups = _a.groups,\n    allDayPanelExists = _a.allDayPanelExists,\n    viewCellsData = _a.viewCellsData,\n    currentView = _a.currentView;\n  return updateTimeTableCellElementsMeta(timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\nvar getAllDayElementsMetaComputed = function (_a) {\n  var allDayElementsMeta = _a.allDayElementsMeta,\n    timeTableElementsMeta = _a.timeTableElementsMeta,\n    groupOrientation = _a.groupOrientation,\n    groups = _a.groups,\n    allDayPanelExists = _a.allDayPanelExists,\n    viewCellsData = _a.viewCellsData,\n    currentView = _a.currentView;\n  return updateAllDayCellElementsMeta(allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView);\n};\nvar getTimeCellsDataComputed = function (_a) {\n  var viewCellsData = _a.viewCellsData,\n    timeCellsData = _a.timeCellsData,\n    currentView = _a.currentView,\n    groups = _a.groups,\n    resourcesToGroupBy = _a.resourcesToGroupBy,\n    groupOrientation = _a.groupOrientation;\n  return timeCellsData && updateTimeCellsData(viewCellsData, timeCellsData, groups, resourcesToGroupBy, groupOrientation(currentView.name));\n};\nvar IntegratedGroupingBase = memo(function () {\n  return createElement(Plugin, {\n    name: \"IntegratedGrouping\",\n    dependencies: pluginDependencies$e\n  }, createElement(Getter, {\n    name: \"groupByDate\",\n    computed: getGroupByDateComputed\n  }), createElement(Getter, {\n    name: \"grouping\",\n    computed: getGroupingComputed\n  }), createElement(Getter, {\n    name: \"resourcesToGroupBy\",\n    computed: getResourcesToGroupByComputed\n  }), createElement(Getter, {\n    name: \"groups\",\n    computed: getGroupsComputed\n  }), createElement(Getter, {\n    name: \"viewCellsData\",\n    computed: getViewCellsDataComputed\n  }), createElement(Getter, {\n    name: \"allDayCellsData\",\n    computed: getAllDayCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeCellsData\",\n    computed: getTimeCellsDataComputed\n  }), createElement(Getter, {\n    name: \"timeTableAppointments\",\n    computed: getTimeTableAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayAppointments\",\n    computed: getAllDayAppointmentsComputed\n  }), createElement(Getter, {\n    name: \"allDayElementsMeta\",\n    computed: getAllDayElementsMetaComputed\n  }), createElement(Getter, {\n    name: \"timeTableElementsMeta\",\n    computed: getTimeTableElementsMetaComputed\n  }));\n});\n/** A plugin that implements grouping. */\nvar IntegratedGrouping = IntegratedGroupingBase;\nexport { AllDayPanel, AppointmentForm, AppointmentTooltip, Appointments, ConfirmationDialog, CurrentTimeIndicator, DateNavigator, DayView, DragDropProvider, EditRecurrenceMenu, EditingState, GroupingPanel, GroupingState, IntegratedEditing, IntegratedGrouping, MonthView, Resources, Scheduler, TodayButton, Toolbar, ViewState, ViewSwitcher, WeekView };","map":{"version":3,"mappings":"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","names":["__extends","_this","memoize","locale","SchedulerCoreBase","props","data","Root","height","firstDayOfWeek","React.createElement","Plugin","name","Getter","value","appointments","formatDateTimeGetter","Template","TemplatePlaceholder","React.PureComponent","SchedulerCore","SchedulerBase","_a","rootComponent","children","PluginHost","defaultProps","Scheduler","CellPlaceholder","params","TimeTableAppointmentLayer","startViewDateBaseComputed","viewCellsData","endViewDateBaseComputed","TimeTablePlaceholder","DayScalePlaceholder","DayScaleEmptyCellPlaceholder","GroupingPanelPlaceholder","timeTableElementsMeta","scrollingStrategy","topBoundary","bottomBoundary","leftBoundary","rightBoundary","changeVerticalScroll","changeHorizontalScroll","previousTimeTableCell","timeTableLayoutKey","viewName","getters","intervalCount","cellDuration","excludedDays","viewDisplayName","availableViews","type","currentView","displayName","computed","endViewDate","startViewDate","startDayHour","endDayHour","viewCellsDataBaseComputed","calculateAppointmentsIntervals","timeTableAppointments","cellElementsMeta","setState","BasicViewBase","state","timeTableCellComponent","Math","random","viewCellsDataComputed","dayScaleCellComponent","dayScaleRowComponent","DayScale","TimeTableCell","TimeTableLayout","timeTableRowComponent","AppointmentLayer","DayScaleEmptyCell","layoutProps","Layout","availableViewsComputed","currentViewComputed","intervalCountComputed","excludedDaysComputed","startViewDateComputed","endViewDateComputed","cellDurationComputed","timeTableElementsMetaComputed","scrollingStrategyComputed","timeTableAppointmentsComputed","TemplateConnector","groupOrientation","groups","isVerticalGrouping","VERTICAL_GROUP_ORIENTATION","forwardedRef","dayScaleComponent","timeTableComponent","setScrollingStrategy","groupingPanelComponent","undefined","groupingPanelSize","length","dayScaleEmptyCellComponent","formatDate","groupByDate","groupByDateEnabled","isHorizontalGrouping","HORIZONTAL_GROUP_ORIENTATION","cellComponent","rowComponent","cellsData","groupedByDate","setCellElementsMeta","updateCellElementsMeta","key","BasicView","calculateAppointmentsIntervalsBaseComputed","timeCellsDataComputed","Date","now","TimeScalePlaceholder","timeCellsData","VericalViewBase","layoutComponent","TimeScale","TimeScaleLabel","timeScaleTickCellComponent","timeScaleTicksRowComponent","dayScaleLayoutComponent","timeTableLayoutComponent","appointmentLayerComponent","timeScaleComponent","getGroupOrientation","labelComponent","tickCellComponent","getTimeTableHeight","VerticalView","currentDate","viewCellsDataCore","DayViewBase","timeScaleLayoutComponent","timeScaleLabelComponent","VIEW_TYPES","DAY","layoutContainer","timeTableContainerComponent","DayView","DAYS_IN_WEEK","WeekViewBase","WEEK","layoutContainerComponent","WeekView","MonthViewBase","MONTH","MonthView","ToolbarBase","FlexibleSpaceComponent","flexibleSpaceComponent","Toolbar","pluginDependencies","navigate","action","direction","nextDate","amount","step","visible","target","prevState","changeCurrentDate","navigateAction","DateNavigatorBase","Overlay","OpenButton","NavigationButton","Calendar","CalendarRow","CalendarCell","CalendarHeaderRow","CalendarHeaderCell","CalendarText","CalendarNavigationButton","CalendarNavigator","dependencies","_b","calendarDateChanged","handleHide","navigatorText","viewBoundText","React.Fragment","navigationButtonComponent","openButtonComponent","rootRef","setRootRef","onVisibilityToggle","handleVisibilityToggle","onNavigate","onHide","selectedDate","getCells","monthCellsData","textComponent","headerRowComponent","headerCellComponent","navigatorComponent","onSelectedDateChange","overlayComponent","calendarComponent","calendarRowComponent","calendarCellComponent","calendarHeaderRowComponent","calendarHeaderCellComponent","calendarTextComponent","calendarNavigatorComponent","calendarNavigationButtonComponent","DateNavigator","ViewSwitcherBase","Switcher","setCurrentViewName","onChange","switcherComponent","ViewSwitcher","AppointmentPlaceholder","renderAppointments","map","rectType","fromPrev","toNext","durationType","resources","geometry","dataItem","style","getAppointmentStyle","optional","placeAppointmentsNextToEachOther","isTimeTableElementsMetaActual","groupCount","getGroupsLastRow","appointmentType","growDirection","VERTICAL_TYPE","multiline","getRects","getVerticalRectByAppointmentData","HORIZONTAL_TYPE","getHorizontalRectByAppointmentData","calculateRectByDateAndGroupIntervals","allDayAppointments","allDayElementsMeta","isAllDayElementsMetaActual","AppointmentsBase","SplitIndicator","Appointment","AppointmentContent","Container","recurringIconComponent","updateTimeTableAppointments","updateAllDayAppointments","slice","onDoubleClick","restParams","createClickHandlers","onClick","position","POSITION_START","POSITION_END","splitIndicatorComponent","containerComponent","appointmentComponent","appointmentContentComponent","Appointments","isMonthView","defaultMessages","allDay","AllDayAppointmentLayerPlaceholder","AllDayPanelPlaceholder","AllDayTitlePlaceholder","elementsMeta","previousCell","layoutKey","allDayLeftBound","moment","hours","minutes","toDate","allDayRightBound","calculateAllDayDateIntervals","messages","allDayPanelDefaultMessages","AllDayPanelBase","Cell","TitleCell","getMessage","getMessageFormatter","allDayCellsDataComputed","allDayPanelExistsComputed","allDayAppointmentsComputed","allDayCellsData","allDayCellComponent","allDayRowComponent","allDayTitleComponent","showAllDayTitle","titleCellComponent","AllDayPanel","_super","currentViewName","defaultCurrentDate","defaultCurrentViewName","stateHelper","createStateHelper","onCurrentDateChange","onCurrentViewNameChange","applyFieldReducer","bind","ViewStateBase","nextProps","stateCurrentViewName","getCurrentViewComputed","Action","ViewState","editingAppointment","defaultEditingAppointment","addedAppointment","defaultAddedAppointment","appointmentChanges","defaultAppointmentChanges","onEditingAppointmentChange","onAddedAppointmentChange","onAppointmentChangesChange","addAppointment","changeAddedAppointment","changeAppointment","cancelAddedAppointment","startEditAppointment","stopEditAppointment","cancelChangedAppointment","cancelChanges","commitChangedAppointment","RECURRENCE_EDIT_SCOPE","CURRENT","onCommitChanges","preCommitChanges","changes","rRule","changed","changedAppointmentById","id","commitAddedAppointment","stateAddedAppointment","added","commitDeletedAppointment","deletedAppointmentData","deleted","EditingStateBase","_c","preCommitChangesBase","EditingState","commandButtonIds","open","OPEN_COMMAND_BUTTON","close","CLOSE_COMMAND_BUTTON","delete","DELETE_COMMAND_BUTTON","appointmentMeta","onVisibilityChange","onAppointmentMetaChange","toggleVisibility","isOpen","setAppointmentMeta","onAppointmentClick","AppointmentTooltipBase","showOpenButton","showDeleteButton","showCloseButton","headerComponent","contentComponent","commandButtonComponent","TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY","plainResources","finishDeleteAppointment","openDeleteConfirmationDialog","onDeleteButtonClick","hideActionName","appointmentData","appointmentResources","getAppointmentResources","AppointmentTooltip","addDoubleClickToCell","title","startDate","endDate","groupingInfo","openFormHandler","resourceFields","reduce","acc","currentGroup","fieldName","validResourceFields","checkMultipleResourceFields","newAppointmentData","callActionIfExists","allDayLabel","titleLabel","commitCommand","detailsLabel","moreInformationLabel","repeatLabel","notesLabel","never","daily","weekly","monthly","yearly","repeatEveryLabel","daysLabel","endRepeatLabel","onLabel","afterLabel","occurrencesLabel","weeksOnLabel","monthsLabel","ofEveryMonthLabel","theLabel","firstLabel","secondLabel","thirdLabel","fourthLabel","lastLabel","yearsLabel","ofLabel","everyLabel","CommandLayoutPlaceholder","BasicLayoutPlaceholder","RecurrenceLayoutPlaceholder","prepareChanges","isNew","changedAppointment","isFormEdited","Object","getOwnPropertyNames","isFormFullSize","isFormVisible","changedAppointmentRRule","previousAppointmentRRule","React.createRef","finishCommitAppointment","previousAppointment","openCancelConfirmationDialog","keys","TOGGLE_APPOINTMENT_FORM_VISIBILITY","change","menuMessages","onAppointmentDataChange","setAppointmentData","AppointmentFormBase","CommandLayout","BasicLayout","RecurrenceLayout","textEditorComponent","dateEditorComponent","booleanEditorComponent","selectComponent","radioGroupComponent","weeklyRecurrenceSelectorComponent","resourceEditorComponent","readOnly","fullSize","onHideAction","ref","container","basicLayoutComponent","commandLayoutComponent","recurrenceLayoutComponent","isRecurrence","onCommitButtonClick","commitChanges","onCancelButtonClick","deleteAppointment","disableSaveButton","hideDeleteButton","onFieldChange","changeAppointmentField","isRecurrenceLayoutVisible","correctedAppointment","onOpenButtonClick","isAllDayCell","AppointmentForm","renderAppointmentItems","items","Wrapper","draftData","draftAppointment","index","toString","startTime","endTime","appointmentGroupingInfo","payload","isOutside","allowDrag","allowResize","appointmentContentTemplateKey","appointmentTopTemplateKey","appointmentBottomTemplateKey","resetCache","DragDropProviderBase","isAllowDragSame","isAllowResizeSame","actions","handlePayloadChange","args","scrollSpeed","calculateBoundaries","timeTableDraftAppointments","allDayDraftAppointments","offsetTimeTop","appointmentStartTime","appointmentEndTime","clientOffset","grouping","autoScroll","tableCellElementsMeta","allDayCellsElementsMeta","getCellRects","timeTableIndex","cellIndex","allDayIndex","targetData","cellData","targetType","cellType","insidePart","calculateInsidePart","y","cellDurationMinutes","intervalDuration","calculateAppointmentTimeBoundaries","appointmentGroups","calculateAppointmentGroups","appointmentDragged","draftAppointments","start","end","calculateDraftAppointments","applyChanges","DraftAppointment","SourceAppointment","Resize","calculateBoundariesByMove","calculateNextBoundaries","DragDropProviderCore","onPayloadChange","DropTarget","onOver","onEnter","onDrop","handleDrop","onLeave","handleLeave","PlaceholderWithRef","predicate","DragSource","draggable","RESIZE_TOP","RESIZE_BOTTOM","draftAppointmentComponent","sourceAppointmentComponent","resizeComponent","SCROLL_SPEED_PX","DragDropProvider","today","TodayButtonBase","Button","getMessagesFormatter","setCurrentDate","buttonComponent","TodayButton","defaultAvailableOperations","CURRENT_AND_FOLLOWING","ALL","editAction","deleteAction","closeMenu","cancelAction","stopEditAction","menuAvailableOperations","EditRecurrenceMenuBase","availableOperations","modalContainer","commit","cancelEditing","isDeleting","handleClose","EditRecurrenceMenu","IntegratedEditingBase","totalCount","IntegratedEditing","addResourcesToTimeTableAppointments","addResourcesToAppointments","addResourcesToAllDayAppointments","ResourcesBase","React.memo","mainResourceName","palette","convertResources","validateResources","Resources","discardButton","deleteButton","cancelButton","confirmDeleteMessage","confirmCancelMessage","ACTION_TYPES","CANCEL","DELETE","ConfirmationDialogBase","ignoreDelete","ignoreCancel","React.useRef","React.useState","setVisible","actionType","setActionType","setHideActionName","React.useCallback","confirmCancelChanges","hideAction","confirmDelete","confirmAction","isNewAppointment","hideEditor","handleConfirm","handleCancel","components","ConfirmationDialog","expandedGroups","defaultExpandedGroups","onExpandedGroupsChange","toggleGroupExpanded","applyReducer","toggleExpandedGroups","GroupingStateBase","GroupingState","GroupingPanelBase","HorizontalLayout","VerticalLayout","allDayPanelExists","colSpan","cellStyle","left","fixedLeftWidth","HORIZONTAL_VIEW_LEFT_OFFSET","VERTICAL_VIEW_LEFT_OFFSET","showHeaderForEveryDate","rowSpan","viewType","cellTextTopOffset","fixedTopHeight","alignWithAllDayRow","horizontalLayoutComponent","verticalLayoutComponent","GroupingPanel","CurrentTimeIndicatorBase","indicatorComponent","shadePreviousAppointments","shadePreviousCells","updateInterval","currentTime","setCurrentTime","React.useEffect","tick","intervalId","window","setInterval","clearInterval","otherMonth","isMonthCell","currentTimeIndicatorPosition","getCurrentTimeIndicatorTop","currentTimeIndicatorComponent","isShaded","isCellShaded","isShadedAppointment","CurrentTimeIndicator","getViewCellsDataComputed","resourcesToGroupBy","getAllDayCellsDataComputed","expandViewCellsDataWithGroups","getGroupsComputed","getResourcesToGroupByComputed","filterResourcesByGrouping","getGroupingComputed","getTimeTableAppointmentsComputed","expandGroups","getAllDayAppointmentsComputed","getGroupByDateComputed","getTimeTableElementsMetaComputed","getAllDayElementsMetaComputed","getTimeCellsDataComputed","updateTimeCellsData","IntegratedGroupingBase","IntegratedGrouping"],"sources":["/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/scheduler-core.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/scheduler.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/basic-view.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/vertical-view.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/day-view.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/week-view.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/month-view.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/toolbar.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/date-navigator.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/view-switcher.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointments.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/all-day-panel.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/view-state.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/editing-state.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointment-tooltip.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/appointment-form.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/drag-drop-provider.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/today-button.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/edit-recurrence-menu.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/integrated-editing.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/resources.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/confirmation-dialog.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/grouping-state.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/grouping-panel.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/current-time-indicator.tsx","/Users/ashyr/Desktop/Devs/React/reilly-course/projec-goal-app/node_modules/@devexpress/dx-react-scheduler/src/plugins/integrated-grouping.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Plugin, Getter, Template, TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { appointments, formatDateTimeGetter } from '@devexpress/dx-scheduler-core';\nimport { SchedulerProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass SchedulerCoreBase extends React.PureComponent<SchedulerProps> {\n  formatDateTimeGetter = memoize(locale => formatDateTimeGetter(locale));\n\n  render() {\n    const {\n      data,\n      rootComponent: Root,\n      locale,\n      height,\n      firstDayOfWeek,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"SchedulerCore\"\n      >\n        <Getter name=\"appointments\" value={appointments(data)} />\n        <Getter name=\"formatDate\" value={this.formatDateTimeGetter(locale)} />\n        <Getter name=\"firstDayOfWeek\" value={firstDayOfWeek} />\n        <Getter name=\"locale\" value={locale} />\n        <Template name=\"root\">\n          <Root height={height}>\n            <TemplatePlaceholder name=\"schedulerRoot\" />\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Scheduler's functionality\n * (data visualization and processing) is implemented in several plugins\n * specified as child components.\n * */\nexport const SchedulerCore: React.ComponentType<SchedulerProps> = SchedulerCoreBase;\n","import * as React from 'react';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { SchedulerCore } from './plugins/scheduler-core';\nimport { SchedulerProps } from './types';\n\nconst SchedulerBase: React.FunctionComponent<SchedulerProps> = ({\n  data,\n  rootComponent,\n  children,\n  locale,\n  height,\n  firstDayOfWeek,\n}) => (\n  <PluginHost>\n    <SchedulerCore\n      data={data}\n      rootComponent={rootComponent}\n      locale={locale}\n      height={height}\n      firstDayOfWeek={firstDayOfWeek}\n    />\n    {children}\n  </PluginHost>\n);\n\nSchedulerBase.defaultProps = {\n  data: [],\n  locale: 'en-US',\n  height: 'auto',\n  firstDayOfWeek: 0,\n};\n\n// tslint:disable: max-line-length\n/***\n * The Scheduler is a root container component designed to process\n * and display the specified data. The Schedulerâ€™s functionality\n * (data visualization and processing) is implemented in several plugins specified as child components.\n * */\nexport const Scheduler: React.ComponentType<SchedulerProps> = SchedulerBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  Getter,\n  TemplateConnector,\n  TemplatePlaceholder,\n  ComputedFn,\n} from '@devexpress/dx-react-core';\nimport {\n  computed,\n  startViewDate as startViewDateCore,\n  endViewDate as endViewDateCore,\n  availableViews as availableViewsCore,\n  HORIZONTAL_GROUP_ORIENTATION,\n  VERTICAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\nimport { BasicViewProps, BasicViewState, ScrollingStrategy } from '../types';\n\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"cell\" params={params} />;\nconst TimeTableAppointmentLayer = () => <TemplatePlaceholder name=\"timeTableAppointmentLayer\" />;\n\nconst startViewDateBaseComputed = ({ viewCellsData }) => startViewDateCore(viewCellsData);\nconst endViewDateBaseComputed = ({ viewCellsData }) => endViewDateCore(viewCellsData);\n\nconst TimeTablePlaceholder = () => <TemplatePlaceholder name=\"timeTable\" />;\nconst DayScalePlaceholder = () => <TemplatePlaceholder name=\"dayScale\" />;\nconst DayScaleEmptyCellPlaceholder = () => <TemplatePlaceholder name=\"dayScaleEmptyCell\" />;\n\nconst GroupingPanelPlaceholder = () => <TemplatePlaceholder name=\"groupingPanel\" />;\n\nclass BasicViewBase extends React.PureComponent<BasicViewProps, BasicViewState> {\n  state = {\n    timeTableElementsMeta: {},\n    scrollingStrategy: {\n      topBoundary: 0,\n      bottomBoundary: 0,\n      leftBoundary: 0,\n      rightBoundary: 0,\n      changeVerticalScroll: () => undefined,\n      changeHorizontalScroll: () => undefined,\n    },\n    previousTimeTableCell: null,\n    // The key has to be generated every time the TimeTableCell is updated to rerender TimeTable\n    // and, consequently, update timeTableElementsMeta\n    timeTableLayoutKey: 0,\n  };\n\n  static getDerivedStateFromProps(\n    props: BasicViewProps, state: BasicViewState,\n  ): BasicViewState | null {\n\n    if (props.timeTableCellComponent !== state.previousTimeTableCell) {\n      return {\n        ...state,\n        previousTimeTableCell: props.timeTableCellComponent,\n        timeTableLayoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  scrollingStrategyComputed = memoize((viewName, scrollingStrategy) => getters =>\n    computed(getters, viewName!, () => scrollingStrategy, getters.scrollingStrategy));\n\n  timeTableElementsMetaComputed = memoize((viewName, timeTableElementsMeta) => getters =>\n    computed(getters, viewName!, () => timeTableElementsMeta, getters.timeTableElementsMeta));\n\n  intervalCountComputed = memoize((viewName, intervalCount) => getters =>\n    computed(getters, viewName!, () => intervalCount, getters.intervalCount));\n\n  cellDurationComputed = memoize((viewName, cellDuration) => getters =>\n    computed(getters, viewName, () => cellDuration, getters.cellDuration));\n\n  excludedDaysComputed = memoize((viewName, excludedDays) => getters => computed(\n    getters, viewName!, () => excludedDays, getters.excludedDays,\n  ));\n\n  availableViewsComputed = memoize((viewName, viewDisplayName) => ({ availableViews }) =>\n    availableViewsCore(availableViews, viewName!, viewDisplayName));\n\n  currentViewComputed = memoize((viewName, viewDisplayName, type) => ({ currentView }) => (\n    currentView && currentView.name !== viewName\n      ? currentView\n      : { name: viewName, type, displayName: viewDisplayName }\n  ));\n\n  endViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, endViewDateBaseComputed, getters.endViewDate,\n    );\n  }\n\n  startViewDateComputed: ComputedFn = (getters) => {\n    const { name: viewName } = this.props;\n    return computed(\n      getters, viewName!, startViewDateBaseComputed, getters.startViewDate,\n    );\n  }\n\n  viewCellsDataComputed = memoize((\n    viewName, cellDuration, startDayHour, endDayHour, viewCellsDataBaseComputed,\n  ) => getters => computed(\n    getters,\n    viewName,\n    viewCellsDataBaseComputed(cellDuration, startDayHour, endDayHour),\n    getters.viewCellsData,\n  ));\n\n  timeTableAppointmentsComputed = memoize((\n    viewName, cellDuration, calculateAppointmentsIntervals,\n  ) => getters => computed(\n      getters,\n      viewName,\n      calculateAppointmentsIntervals(cellDuration),\n      getters.timeTableAppointments,\n    ));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ timeTableElementsMeta: cellElementsMeta });\n  });\n\n  setScrollingStrategy = (scrollingStrategy: ScrollingStrategy) => {\n    this.setState({ scrollingStrategy });\n  }\n\n  render() {\n    const {\n      name: viewName,\n      intervalCount,\n      displayName,\n      type,\n      excludedDays,\n      cellDuration,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      calculateAppointmentsIntervals,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      dayScaleLayoutComponent: DayScale,\n      timeTableCellComponent: TimeTableCell,\n      timeTableLayoutComponent: TimeTableLayout,\n      timeTableRowComponent,\n      appointmentLayerComponent: AppointmentLayer,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      layoutProps,\n      layoutComponent: Layout,\n    } = this.props;\n    const { timeTableElementsMeta, scrollingStrategy, timeTableLayoutKey } = this.state;\n    const viewDisplayName = displayName || viewName;\n\n    return (\n      <Plugin name=\"basicView\">\n        <Getter\n          name=\"availableViews\"\n          computed={this.availableViewsComputed(viewName, viewDisplayName)}\n        />\n        <Getter\n          name=\"currentView\"\n          computed={this.currentViewComputed(viewName, viewDisplayName, type)}\n        />\n        <Getter\n          name=\"intervalCount\"\n          computed={this.intervalCountComputed(viewName, intervalCount)}\n        />\n        <Getter name=\"excludedDays\" computed={this.excludedDaysComputed(viewName, excludedDays)} />\n        <Getter\n          name=\"viewCellsData\"\n          computed={this.viewCellsDataComputed(\n            viewName, cellDuration, startDayHour, endDayHour, viewCellsDataComputed,\n          )}\n        />\n        <Getter name=\"startViewDate\" computed={this.startViewDateComputed} />\n        <Getter name=\"endViewDate\" computed={this.endViewDateComputed} />\n        <Getter\n          name=\"cellDuration\"\n          computed={this.cellDurationComputed(viewName, cellDuration)}\n        />\n\n        <Getter\n          name=\"timeTableElementsMeta\"\n          computed={this.timeTableElementsMetaComputed(viewName, timeTableElementsMeta)}\n        />\n        <Getter\n          name=\"scrollingStrategy\"\n          computed={this.scrollingStrategyComputed(viewName, scrollingStrategy)}\n        />\n\n        <Getter\n          name=\"timeTableAppointments\"\n          computed={this.timeTableAppointmentsComputed(\n            viewName, cellDuration, calculateAppointmentsIntervals,\n          )}\n        />\n\n        <Template name=\"body\">\n          { (params: any) =>\n            <TemplateConnector>\n              {({ currentView, groupOrientation, groups }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                const isVerticalGrouping = groupOrientation?.(viewName)\n                  === VERTICAL_GROUP_ORIENTATION;\n                return (\n                  <Layout\n                    forwardedRef={params?.forwardedRef}\n                    dayScaleComponent={DayScalePlaceholder}\n                    timeTableComponent={TimeTablePlaceholder}\n                    setScrollingStrategy={this.setScrollingStrategy}\n                    groupingPanelComponent={\n                      isVerticalGrouping ? GroupingPanelPlaceholder : undefined\n                    }\n                    groupingPanelSize={isVerticalGrouping ? groups?.length : 0}\n                    dayScaleEmptyCellComponent={DayScaleEmptyCellPlaceholder}\n                    {...layoutProps}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          }\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplateConnector>\n            {({ currentView, viewCellsData, formatDate, groupByDate, groupOrientation }) => {\n              if (currentView.name !== viewName) return <TemplatePlaceholder />;\n              const groupByDateEnabled = groupByDate?.(viewName);\n              const isHorizontalGrouping = groupOrientation?.(viewName)\n                === HORIZONTAL_GROUP_ORIENTATION;\n              return (\n                <DayScale\n                  cellComponent={dayScaleCellComponent}\n                  rowComponent={dayScaleRowComponent}\n                  groupingPanelComponent={\n                    isHorizontalGrouping ? GroupingPanelPlaceholder : undefined\n                  }\n                  cellsData={viewCellsData}\n                  formatDate={formatDate}\n                  groupedByDate={groupByDateEnabled}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"cell\">\n          {params => (\n            <TemplateConnector>\n              {({ currentView }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder params={params} />;\n                return (\n                  <TimeTableCell {...params} />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ formatDate, currentView, viewCellsData }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                return (\n                  <>\n                    <TimeTableLayout\n                      cellsData={viewCellsData}\n                      rowComponent={timeTableRowComponent}\n                      cellComponent={CellPlaceholder}\n                      formatDate={formatDate}\n                      setCellElementsMeta={this.updateCellElementsMeta}\n                      key={timeTableLayoutKey}\n                      {...params}\n                    />\n                    <AppointmentLayer>\n                      <TimeTableAppointmentLayer />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n          </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView }) => {\n              if (currentView.name !== viewName || !DayScaleEmptyCell) {\n                return <TemplatePlaceholder />;\n              }\n              return (\n                <DayScaleEmptyCell />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\nexport const BasicView: React.ComponentType<BasicViewProps> = BasicViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplateConnector,\n  TemplatePlaceholder,\n  Getter,\n} from '@devexpress/dx-react-core';\nimport {\n  calculateWeekDateIntervals,\n  getTimeTableHeight,\n  timeCellsData as timeCellsDataCore,\n  computed,\n} from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { CommonVerticalViewProps } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateWeekDateIntervals(\n  appointments, startViewDate, endViewDate, excludedDays, cellDuration,\n);\nconst timeCellsDataComputed = (startDayHour, endDayHour) => ({\n  viewCellsData, cellDuration,\n}) => timeCellsDataCore(viewCellsData, startDayHour, endDayHour, cellDuration, Date.now());\n\nconst TimeScalePlaceholder = () => <TemplatePlaceholder name=\"timeScale\" />;\n\nclass VericalViewBase extends React.PureComponent<CommonVerticalViewProps> {\n  timeCellsDataComputed = memoize((viewName, startDayHour, endDayHour) => getters => computed(\n    getters,\n    viewName,\n    timeCellsDataComputed(startDayHour, endDayHour),\n    getters.timeCellsData,\n  ));\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent: TimeScale,\n      timeScaleLabelComponent: TimeScaleLabel,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n      viewCellsDataComputed,\n      type,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataComputed}\n          type={type}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          layoutProps={{\n            timeScaleComponent: TimeScalePlaceholder,\n          }}\n        />\n\n        <Getter\n          name=\"timeCellsData\"\n          computed={this.timeCellsDataComputed(viewName, startDayHour, endDayHour)}\n        />\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({\n                currentView, timeCellsData, groups, formatDate,\n                groupOrientation: getGroupOrientation,\n                timeTableElementsMeta,\n              }) => {\n                if (currentView.name !== viewName) return <TemplatePlaceholder />;\n                const groupOrientation = getGroupOrientation?.(viewName);\n\n                return (\n                  <TimeScale\n                    labelComponent={TimeScaleLabel}\n                    tickCellComponent={timeScaleTickCellComponent}\n                    rowComponent={timeScaleTicksRowComponent}\n                    cellsData={timeCellsData}\n                    formatDate={formatDate}\n                    groups={groups}\n                    groupOrientation={groupOrientation}\n                    height={getTimeTableHeight(timeTableElementsMeta)}\n                    {...params}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\nexport const VerticalView: React.ComponentType<CommonVerticalViewProps> = VericalViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { VerticalViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, intervalCount }) => {\n  return viewCellsDataCore(\n    currentDate, undefined,\n    intervalCount, [],\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass DayViewBase extends React.PureComponent<VerticalViewProps> {\n  static defaultProps: Partial<VerticalViewProps> = {\n    name: 'Day',\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainer: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent: DayScaleEmptyCell,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      cellDuration,\n      name: viewName,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"DayView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.DAY}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          dayScaleEmptyCellComponent={DayScaleEmptyCell}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/*** A plugin that renders Scheduler data for a day. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const DayView: React.ComponentType<VerticalViewProps> = DayViewBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  viewCellsData as viewCellsDataCore,\n  VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport { WeekViewProps } from '../types';\nimport { VerticalView } from './vertical-view';\n\nconst DAYS_IN_WEEK = 7;\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ firstDayOfWeek, intervalCount, excludedDays, currentDate }) => {\n  return viewCellsDataCore(\n    currentDate, firstDayOfWeek,\n    intervalCount! * DAYS_IN_WEEK, excludedDays!,\n    startDayHour!, endDayHour!, cellDuration!,\n    Date.now(),\n  );\n};\n\nclass WeekViewBase extends React.PureComponent<WeekViewProps> {\n  static defaultProps: Partial<WeekViewProps> = {\n    startDayHour: 0,\n    endDayHour: 24,\n    cellDuration: 30,\n    intervalCount: 1,\n    excludedDays: [],\n    name: 'Week',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    timeScaleLayoutComponent: 'TimeScaleLayout',\n    timeScaleLabelComponent: 'TimeScaleLabel',\n    timeScaleTickCellComponent: 'TimeScaleTickCell',\n    timeScaleTicksRowComponent: 'TimeScaleTicksRow',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      timeScaleLayoutComponent,\n      timeScaleLabelComponent,\n      timeScaleTickCellComponent,\n      timeScaleTicksRowComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      cellDuration,\n      excludedDays,\n      name: viewName,\n      appointmentLayerComponent,\n      intervalCount,\n      displayName,\n      startDayHour,\n      endDayHour,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"WeekView\"\n      >\n        <VerticalView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.WEEK}\n          cellDuration={cellDuration}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          startDayHour={startDayHour}\n          endDayHour={endDayHour}\n          excludedDays={excludedDays}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n          timeScaleLayoutComponent={timeScaleLayoutComponent}\n          timeScaleLabelComponent={timeScaleLabelComponent}\n          timeScaleTickCellComponent={timeScaleTickCellComponent}\n          timeScaleTicksRowComponent={timeScaleTicksRowComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders the Scheduler's week view. This plugin arranges appointments from top to bottom.\n * If their time intervals overlap, their width is decreased and they are placed next to each other.\n * */\nexport const WeekView: React.ComponentType<WeekViewProps> = WeekViewBase;\n","import * as React from 'react';\nimport { Plugin, PluginComponents } from '@devexpress/dx-react-core';\nimport { monthCellsData, calculateMonthDateIntervals, VIEW_TYPES } from '@devexpress/dx-scheduler-core';\nimport { BasicView } from './basic-view';\nimport { MonthViewProps } from '../types';\n\nconst viewCellsDataBaseComputed = (\n  cellDuration, startDayHour, endDayHour,\n) => ({ currentDate, firstDayOfWeek, intervalCount }) => monthCellsData(\n  currentDate, firstDayOfWeek, intervalCount!, Date.now(),\n);\nconst calculateAppointmentsIntervalsBaseComputed = cellDuration => ({\n  appointments, startViewDate, endViewDate, excludedDays,\n}) => calculateMonthDateIntervals(\n  appointments, startViewDate, endViewDate,\n);\n\nclass MonthViewBase extends React.PureComponent<MonthViewProps> {\n  static defaultProps: Partial<MonthViewProps> = {\n    intervalCount: 1,\n    name: 'Month',\n  };\n\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    appointmentLayerComponent: 'AppointmentLayer',\n    dayScaleEmptyCellComponent: 'DayScaleEmptyCell',\n    dayScaleLayoutComponent: 'DayScaleLayout',\n    dayScaleCellComponent: 'DayScaleCell',\n    dayScaleRowComponent: 'DayScaleRow',\n    timeTableContainerComponent: 'TimeTableContainer',\n    timeTableLayoutComponent: 'TimeTableLayout',\n    timeTableCellComponent: 'TimeTableCell',\n    timeTableRowComponent: 'TimeTableRow',\n  };\n\n  render() {\n    const {\n      layoutComponent,\n      dayScaleEmptyCellComponent,\n      dayScaleLayoutComponent,\n      dayScaleCellComponent,\n      dayScaleRowComponent,\n      timeTableLayoutComponent,\n      timeTableRowComponent,\n      timeTableCellComponent,\n      appointmentLayerComponent,\n      name: viewName,\n      intervalCount,\n      displayName,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"MonthView\"\n      >\n        <BasicView\n          viewCellsDataComputed={viewCellsDataBaseComputed}\n          type={VIEW_TYPES.MONTH}\n          name={viewName}\n          intervalCount={intervalCount}\n          displayName={displayName}\n          calculateAppointmentsIntervals={calculateAppointmentsIntervalsBaseComputed}\n          dayScaleEmptyCellComponent={dayScaleEmptyCellComponent}\n          dayScaleLayoutComponent={dayScaleLayoutComponent}\n          dayScaleCellComponent={dayScaleCellComponent}\n          dayScaleRowComponent={dayScaleRowComponent}\n          timeTableCellComponent={timeTableCellComponent}\n          timeTableLayoutComponent={timeTableLayoutComponent}\n          timeTableRowComponent={timeTableRowComponent}\n          appointmentLayerComponent={appointmentLayerComponent}\n          layoutComponent={layoutComponent}\n        />\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/***\n * A plugin that renders Scheduler data for a month. This plugin arranges appointments from left to right.\n * An appointment's size depends on its duration in days.\n * However, it occupies the entire day cell if an appointment lasts only for several hours or minutes.\n * The time scale and all-day panel are not available in this view.\n * */\nexport const MonthView: React.ComponentType<MonthViewProps> = MonthViewBase;\n","import * as React from 'react';\nimport {\n  Template,\n  Plugin,\n  TemplatePlaceholder,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ToolbarProps } from '../types';\n\nclass ToolbarBase extends React.PureComponent<ToolbarProps> {\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    flexibleSpaceComponent: 'FlexibleSpace',\n  };\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <Plugin\n        name=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's toolbar. */\nexport const Toolbar: React.ComponentType<ToolbarProps> = ToolbarBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  monthCellsData,\n  viewBoundText,\n} from '@devexpress/dx-scheduler-core';\nimport { memoize } from '@devexpress/dx-core';\n\nimport { DateNavigatorProps, DateNavigatorState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst navigate = (action, currentView, intervalCount) => (direction, nextDate) => action({\n  direction,\n  nextDate,\n  amount: intervalCount,\n  step: currentView.type,\n});\n\nclass DateNavigatorBase extends React.PureComponent<DateNavigatorProps, DateNavigatorState> {\n  target!: React.ReactInstance;\n\n  state = {\n    visible: false,\n  };\n  static components: PluginComponents = {\n    rootComponent: 'Root',\n    overlayComponent: 'Overlay',\n    openButtonComponent: 'OpenButton',\n    navigationButtonComponent: 'NavigationButton',\n    calendarComponent: 'Calendar',\n    calendarRowComponent: 'CalendarRow',\n    calendarCellComponent: 'CalendarCell',\n    calendarHeaderRowComponent: 'CalendarHeaderRow',\n    calendarHeaderCellComponent: 'CalendarHeaderCell',\n    calendarTextComponent: 'CalendarText',\n    calendarNavigatorComponent: 'CalendarNavigator',\n    calendarNavigationButtonComponent: 'CalendarNavigationButton',\n  };\n\n  setRootRef = (target: React.ReactInstance) => {\n    this.target = target;\n  }\n\n  handleVisibilityToggle = () => {\n    this.setState(prevState => ({ visible: !prevState.visible }));\n  }\n\n  handleHide = () => {\n    this.setState({ visible: false });\n  }\n\n  navigateAction = memoize((changeCurrentDate, currentView, intervalCount, navigateAction) =>\n    navigateAction(changeCurrentDate, currentView, intervalCount));\n\n  render() {\n    const {\n      rootComponent: Root,\n      overlayComponent: Overlay,\n      openButtonComponent: OpenButton,\n      navigationButtonComponent: NavigationButton,\n      calendarComponent: Calendar,\n      calendarRowComponent: CalendarRow,\n      calendarCellComponent: CalendarCell,\n      calendarHeaderRowComponent: CalendarHeaderRow,\n      calendarHeaderCellComponent: CalendarHeaderCell,\n      calendarTextComponent: CalendarText,\n      calendarNavigationButtonComponent: CalendarNavigationButton,\n      calendarNavigatorComponent: CalendarNavigator,\n    } = this.props;\n\n    const { visible } = this.state;\n    return (\n      <Plugin\n        name=\"DateNavigator\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              currentDate,\n              startViewDate,\n              endViewDate,\n              firstDayOfWeek,\n              currentView,\n              intervalCount,\n              formatDate,\n            }, {\n              changeCurrentDate,\n            }) => {\n              const navigateAction = this.navigateAction(\n                changeCurrentDate, currentView, intervalCount, navigate,\n              );\n              const calendarDateChanged = (nextDate) => {\n                navigateAction(undefined, nextDate);\n                this.handleHide();\n              };\n              const navigatorText = viewBoundText(\n                startViewDate,\n                endViewDate,\n                currentView.type,\n                currentDate,\n                intervalCount,\n                formatDate,\n              );\n              return (\n                <React.Fragment>\n                  <Root\n                    navigationButtonComponent={NavigationButton}\n                    openButtonComponent={OpenButton}\n                    navigatorText={navigatorText}\n                    rootRef={this.setRootRef}\n                    onVisibilityToggle={this.handleVisibilityToggle}\n                    onNavigate={navigateAction}\n                  />\n                  <Overlay\n                    visible={visible}\n                    target={this.target}\n                    onHide={this.handleHide}\n                  >\n                    <Calendar\n                      selectedDate={currentDate}\n                      firstDayOfWeek={firstDayOfWeek}\n                      getCells={monthCellsData}\n                      textComponent={CalendarText}\n                      navigationButtonComponent={CalendarNavigationButton}\n                      rowComponent={CalendarRow}\n                      cellComponent={CalendarCell}\n                      headerRowComponent={CalendarHeaderRow}\n                      headerCellComponent={CalendarHeaderCell}\n                      navigatorComponent={CalendarNavigator}\n                      onSelectedDateChange={calendarDateChanged}\n                      formatDate={formatDate}\n                    />\n                  </Overlay>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Schedulerâ€™s date navigator. */\nexport const DateNavigator: React.ComponentType<DateNavigatorProps> = DateNavigatorBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { ViewSwitcherProps } from '../types/view-switcher';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nclass ViewSwitcherBase extends React.PureComponent<ViewSwitcherProps> {\n  static components: PluginComponents = {\n    switcherComponent: 'Switcher',\n  };\n\n  render() {\n    const { switcherComponent: Switcher } = this.props;\n\n    return (\n      <Plugin\n        name=\"ViewSwitcher\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView,\n              availableViews,\n            }, {\n              setCurrentViewName,\n            }) => (\n              <Switcher\n                currentView={currentView}\n                availableViews={availableViews}\n                onChange={setCurrentViewName}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's view switcher. */\nexport const ViewSwitcher: React.ComponentType<ViewSwitcherProps> = ViewSwitcherBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { createClickHandlers, memoize } from '@devexpress/dx-core';\nimport {\n  POSITION_START, POSITION_END, VERTICAL_TYPE,\n  getVerticalRectByAppointmentData, calculateRectByDateAndGroupIntervals,\n  getAppointmentStyle, HORIZONTAL_TYPE, getHorizontalRectByAppointmentData,\n  isAllDayElementsMetaActual, isTimeTableElementsMetaActual,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES, getGroupsLastRow, Rect,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentsProps } from '../types';\n\nconst AppointmentPlaceholder = params => <TemplatePlaceholder name=\"appointment\" params={params} />;\n\nconst renderAppointments = rects => rects.map(({\n  dataItem, type: rectType, fromPrev, toNext,\n  durationType, resources, key, ...geometry\n}) => (\n  <AppointmentPlaceholder\n    key={key}\n    type={rectType}\n    data={dataItem}\n    fromPrev={fromPrev}\n    toNext={toNext}\n    durationType={durationType}\n    resources={resources}\n    style={getAppointmentStyle(geometry as Rect)}\n  />\n));\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n];\n\nclass AppointmentsBase extends React.PureComponent<AppointmentsProps> {\n  static components: PluginComponents = {\n    splitIndicatorComponent: 'SplitIndicator',\n    containerComponent: 'Container',\n    appointmentComponent: 'Appointment',\n    appointmentContentComponent: 'AppointmentContent',\n    recurringIconComponent: 'RecurringIcon',\n  };\n  static defaultProps: Partial<AppointmentsProps> = {\n    placeAppointmentsNextToEachOther: false,\n  };\n\n  updateTimeTableAppointments = memoize((\n    timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n    startViewDate, endViewDate, cellDuration, groups, getGroupOrientation, groupByDate,\n    placeAppointmentsNextToEachOther,\n  ) => {\n    if (!isTimeTableElementsMetaActual(viewCellsData, timeTableElementsMeta)) return null;\n\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    let appointmentType = { growDirection: VERTICAL_TYPE, multiline: false };\n    let getRects = getVerticalRectByAppointmentData as any;\n    if (currentView.type === VIEW_TYPES.MONTH) {\n      appointmentType = { growDirection: HORIZONTAL_TYPE, multiline: true };\n      getRects = getHorizontalRectByAppointmentData;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      appointmentType, timeTableAppointments, getRects,\n      {\n        startViewDate, endViewDate, cellDuration,\n        viewCellsData, cellElementsMeta: timeTableElementsMeta,\n        placeAppointmentsNextToEachOther,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  updateAllDayAppointments = memoize((\n    allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n    startViewDate, endViewDate, groups, getGroupOrientation, groupByDate,\n  ) => {\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n    const groupCount = groups ? getGroupsLastRow(groups).length : 1;\n\n    if (!isAllDayElementsMetaActual(\n      viewCellsData, allDayElementsMeta, groupOrientation, groupCount,\n    )) {\n      return null;\n    }\n\n    return renderAppointments(calculateRectByDateAndGroupIntervals(\n      { growDirection: HORIZONTAL_TYPE,  multiline: false },\n      allDayAppointments,\n      getHorizontalRectByAppointmentData,\n      {\n        startViewDate, endViewDate,\n        viewCellsData, cellElementsMeta: allDayElementsMeta,\n      },\n      {\n        groupOrientation,\n        groupedByDate: groupByDate?.(currentView?.name),\n        groupCount,\n      },\n    ));\n  });\n\n  render() {\n    const {\n      splitIndicatorComponent: SplitIndicator,\n      appointmentComponent: Appointment,\n      appointmentContentComponent: AppointmentContent,\n      containerComponent: Container,\n      recurringIconComponent,\n      placeAppointmentsNextToEachOther,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"Appointments\"\n        dependencies={pluginDependencies}\n      >\n        <Template\n          name=\"timeTableAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groupOrientation,  groups, groupByDate,\n            }) => this.updateTimeTableAppointments(\n              timeTableAppointments, viewCellsData, timeTableElementsMeta, currentView,\n              startViewDate, endViewDate, cellDuration, groups, groupOrientation, groupByDate,\n              placeAppointmentsNextToEachOther,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"allDayAppointmentLayer\"\n        >\n          <TemplateConnector>\n            {({\n              allDayAppointments, viewCellsData, allDayElementsMeta,\n              startViewDate, endViewDate, groupOrientation, currentView, groups, groupByDate,\n            }) => this.updateAllDayAppointments(\n              allDayAppointments, viewCellsData, allDayElementsMeta, currentView,\n              startViewDate, endViewDate, groups, groupOrientation, groupByDate,\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template\n          name=\"appointment\"\n        >\n          {({ style, ...params }: any) => (\n            <TemplateConnector>\n              {({ formatDate }) => (\n                <Container style={style}>\n                  <TemplatePlaceholder\n                    name=\"appointmentTop\"\n                    params={{ data: params.data, type: params.type, slice: params.fromPrev }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentContent\"\n                    params={{ ...params, formatDate }}\n                  />\n                  <TemplatePlaceholder\n                    name=\"appointmentBottom\"\n                    params={{ data: params.data, type: params.type, slice: params.toNext }}\n                  />\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointmentContent\">\n          {({\n            onClick, onDoubleClick, formatDate,\n            data, type, fromPrev, toNext,\n            durationType, resources, forwardedRef,\n            ...restParams\n          }: any) => (\n            <Appointment\n              forwardedRef={forwardedRef}\n              data={data}\n              resources={resources}\n              {...createClickHandlers(onClick, onDoubleClick)}\n              {...restParams}\n            >\n              {fromPrev && <SplitIndicator position={POSITION_START} appointmentType={type} />}\n              <AppointmentContent\n                data={data}\n                type={type}\n                durationType={durationType}\n                recurringIconComponent={recurringIconComponent}\n                formatDate={formatDate}\n                resources={resources}\n              />\n              {toNext && <SplitIndicator position={POSITION_END} appointmentType={type} />}\n            </Appointment>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders appointments. */\nexport const Appointments: React.ComponentType<AppointmentsProps> = AppointmentsBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Getter,\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport {\n  allDayCells, calculateAllDayDateIntervals,\n  VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\nimport moment from 'moment';\n\nimport { AllDayPanelProps, AllDayPanelState } from '../types';\n\nconst isMonthView = currentView => currentView.type === VIEW_TYPES.MONTH;\nconst isVerticalGrouping = (\n  currentView, groupOrientation,\n) => groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION;\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n];\nconst defaultMessages = {\n  allDay: 'All Day',\n};\nconst AllDayAppointmentLayerPlaceholder = () =>\n  <TemplatePlaceholder name=\"allDayAppointmentLayer\" />;\nconst AllDayPanelPlaceholder = params => <TemplatePlaceholder name=\"allDayPanel\" params={params} />;\nconst CellPlaceholder = params => <TemplatePlaceholder name=\"allDayPanelCell\" params={params} />;\nconst AllDayTitlePlaceholder = params => <TemplatePlaceholder name=\"allDayTitle\" params={params} />;\n\nclass AllDayPanelBase extends React.PureComponent<AllDayPanelProps, AllDayPanelState> {\n  state: AllDayPanelState = {\n    elementsMeta: {},\n    previousCell: null,\n    // The key has to be generated every time the Cell component is updated to rerender the Layout\n    // and, consequently, update allDayElementsMeta\n    layoutKey: 0,\n  };\n  static defaultProps: Partial<AllDayPanelProps> = {\n    messages: {},\n  };\n  static components: PluginComponents = {\n    appointmentLayerComponent: 'AppointmentLayer',\n    layoutComponent: 'Layout',\n    layoutContainerComponent: 'LayoutContainer',\n    cellComponent: 'Cell',\n    rowComponent: 'Row',\n    titleCellComponent: 'TitleCell',\n    containerComponent: 'Container',\n  };\n\n  static getDerivedStateFromProps(\n    props: AllDayPanelProps, state: AllDayPanelState,\n  ): AllDayPanelState | null {\n    if (props.cellComponent !== state.previousCell) {\n      return {\n        ...state,\n        previousCell: props.cellComponent,\n        layoutKey: Math.random(),\n      };\n    }\n    return null;\n  }\n\n  allDayCellsDataComputed = memoize(({ viewCellsData }) => allDayCells(viewCellsData));\n\n  updateCellElementsMeta = memoize((cellElementsMeta) => {\n    this.setState({ elementsMeta: cellElementsMeta });\n  });\n\n  allDayAppointmentsComputed = memoize(({\n    appointments, startViewDate, endViewDate, excludedDays,\n  }) => {\n    const allDayLeftBound = moment(startViewDate).hours(0).minutes(0).toDate();\n    const allDayRightBound = moment(endViewDate).hours(23).minutes(59).toDate();\n    return calculateAllDayDateIntervals(\n      appointments, allDayLeftBound, allDayRightBound, excludedDays,\n    );\n  });\n\n  allDayPanelExistsComputed = memoize(({\n    currentView,\n  }) => !isMonthView(currentView));\n\n  getMessageFormatter = memoize((messages, allDayPanelDefaultMessages) =>\n    getMessagesFormatter({ ...allDayPanelDefaultMessages, ...messages }));\n\n  render() {\n    const {\n      appointmentLayerComponent: AppointmentLayer,\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent,\n      titleCellComponent: TitleCell,\n      containerComponent: Container,\n      messages,\n    } = this.props;\n    const { elementsMeta, layoutKey } = this.state;\n    const getMessage = this.getMessageFormatter(messages, defaultMessages);\n\n    return (\n      <Plugin\n        name=\"AllDayPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"allDayElementsMeta\" value={elementsMeta} />\n        <Getter name=\"allDayCellsData\" computed={this.allDayCellsDataComputed} />\n        <Getter name=\"allDayPanelExists\" computed={this.allDayPanelExistsComputed} />\n        <Getter\n          name=\"allDayAppointments\"\n          computed={this.allDayAppointmentsComputed}\n        />\n\n        <Template name=\"timeTable\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation, allDayCellsData }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n                return (\n                  <>\n                    <TemplatePlaceholder\n                      params={{\n                        ...params,\n                        allDayCellComponent: CellPlaceholder,\n                        allDayRowComponent: rowComponent,\n                        allDayCellsData,\n                      }}\n                    />\n                    <AppointmentLayer>\n                      <AllDayAppointmentLayerPlaceholder />\n                    </AppointmentLayer>\n                  </>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScaleEmptyCell\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return <TemplatePlaceholder />;\n              }\n\n              return (\n                <AllDayTitlePlaceholder />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeScale\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ currentView, groupOrientation }) => {\n                if (isMonthView(currentView)\n                  || !isVerticalGrouping(currentView, groupOrientation)) {\n                  return <TemplatePlaceholder params={...params} />;\n                }\n\n                return (\n                  <TemplatePlaceholder\n                    params={{\n                      ...params,\n                      allDayTitleComponent: AllDayTitlePlaceholder,\n                      showAllDayTitle: true,\n                    }}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"dayScale\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => {\n              if (isMonthView(currentView) || isVerticalGrouping(currentView, groupOrientation)) {\n                return null;\n              }\n\n              return (\n                <Container>\n                  <AllDayPanelPlaceholder />\n                </Container>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              currentView, formatDate, allDayCellsData,\n            }) => {\n              if (currentView.type === VIEW_TYPES.MONTH) return null;\n\n              return (\n                <React.Fragment>\n                  <Layout\n                    cellComponent={CellPlaceholder}\n                    rowComponent={rowComponent}\n                    cellsData={allDayCellsData[0]}\n                    setCellElementsMeta={this.updateCellElementsMeta}\n                    formatDate={formatDate}\n                    key={layoutKey}\n                  />\n                  <AppointmentLayer>\n                    <AllDayAppointmentLayerPlaceholder />\n                  </AppointmentLayer>\n                </React.Fragment>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"allDayTitle\">\n          {(params: any) => <TitleCell getMessage={getMessage} {...params}/>}\n        </Template>\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => <Cell {...params} />}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the All Day Panel. */\nexport const AllDayPanel: React.ComponentType<AllDayPanelProps> = AllDayPanelBase;\n","import * as React from 'react';\nimport {\n  Getter,\n  Action,\n  Plugin,\n  createStateHelper,\n  StateHelper,\n  ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  changeCurrentDate,\n  setCurrentViewName,\n  ChangeCurrentDatePayload,\n} from '@devexpress/dx-scheduler-core';\nimport { ViewStateProps, ViewStateState } from '../types';\nimport { memoize } from '@devexpress/dx-core';\n\nclass ViewStateBase extends React.PureComponent<ViewStateProps, ViewStateState> {\n  changeCurrentDate: ActionFn<ChangeCurrentDatePayload>;\n  setCurrentViewName: ActionFn<string>;\n\n  static defaultProps: Partial<ViewStateProps> = {\n    defaultCurrentDate: new Date(),\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentDate: props.currentDate || props.defaultCurrentDate,\n      currentViewName: props.currentViewName || props.defaultCurrentViewName,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        currentDate: () => {\n          const { onCurrentDateChange } = this.props;\n          return onCurrentDateChange;\n        },\n        currentViewName: () => {\n          const { onCurrentViewNameChange } = this.props;\n          return onCurrentViewNameChange;\n        },\n      },\n    );\n\n    this.changeCurrentDate = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentDate', changeCurrentDate);\n    this.setCurrentViewName = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentViewName', setCurrentViewName);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      currentDate = prevState.currentDate,\n      currentViewName = prevState.currentViewName,\n    } = nextProps;\n\n    return {\n      currentDate,\n      currentViewName,\n    };\n  }\n\n  getCurrentViewComputed =  memoize(currentViewName => () => (\n    currentViewName\n    ? { name: currentViewName }\n    : undefined\n  ));\n\n  render() {\n    const { currentDate, currentViewName: stateCurrentViewName } = this.state;\n    return (\n      <Plugin\n        name=\"ViewState\"\n      >\n        <Getter name=\"currentDate\" value={currentDate} />\n        <Getter name=\"currentView\" computed={this.getCurrentViewComputed(stateCurrentViewName)} />\n        <Action name=\"changeCurrentDate\" action={this.changeCurrentDate} />\n        <Action name=\"setCurrentViewName\" action={this.setCurrentViewName} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the view state. It specifies the current date and the displayed view. */\nexport const ViewState: React.ComponentType<ViewStateProps> = ViewStateBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, createStateHelper, StateHelper, ComputedFn, ActionFn,\n} from '@devexpress/dx-react-core';\nimport {\n  addAppointment,\n  cancelAddedAppointment,\n  startEditAppointment,\n  stopEditAppointment,\n  changeAppointment,\n  cancelChanges,\n  changedAppointmentById,\n  RECURRENCE_EDIT_SCOPE,\n  preCommitChanges as preCommitChangesBase,\n} from '@devexpress/dx-scheduler-core';\nimport { EditingStateProps, EditingStateState } from '../types';\n\nclass EditingStateBase extends React.PureComponent<EditingStateProps, EditingStateState> {\n  startEditAppointment: ComputedFn;\n  stopEditAppointment: (payload?: any) => void;\n  changeAppointment: ComputedFn;\n  cancelChangedAppointment: (payload?: any) => void;\n  commitChangedAppointment: ActionFn<any>;\n  addAppointment: ComputedFn;\n  changeAddedAppointment: ComputedFn;\n  cancelAddedAppointment: (payload?: any) => void;\n  commitAddedAppointment: ComputedFn;\n  commitDeletedAppointment: ActionFn<any>;\n\n  static defaultProps: Partial<EditingStateProps> = {\n    defaultEditingAppointment: undefined,\n    defaultAppointmentChanges: {},\n    defaultAddedAppointment: {},\n    preCommitChanges: preCommitChangesBase,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingAppointment: props.editingAppointment || props.defaultEditingAppointment,\n      addedAppointment: props.addedAppointment || props.defaultAddedAppointment,\n      appointmentChanges: props.appointmentChanges || props.defaultAppointmentChanges,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        editingAppointment: () => {\n          const { onEditingAppointmentChange } = this.props;\n          return onEditingAppointmentChange;\n        },\n        addedAppointment: () => {\n          const { onAddedAppointmentChange } = this.props;\n          return onAddedAppointmentChange;\n        },\n        appointmentChanges: () => {\n          const { onAppointmentChangesChange } = this.props;\n          return onAppointmentChangesChange;\n        },\n      },\n    );\n\n    this.addAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', addAppointment);\n    this.changeAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', changeAppointment);\n    this.cancelAddedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedAppointment', cancelAddedAppointment);\n\n    this.startEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', startEditAppointment);\n    this.stopEditAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingAppointment', stopEditAppointment);\n\n    this.changeAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', changeAppointment);\n    this.cancelChangedAppointment = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentChanges', cancelChanges);\n\n    this.commitChangedAppointment = (type = RECURRENCE_EDIT_SCOPE.CURRENT) => {\n      const { appointmentChanges, editingAppointment } = this.state;\n      const { onCommitChanges, preCommitChanges } = this.props;\n      if (!editingAppointment) {\n        return;\n      }\n      const changes = !editingAppointment.rRule\n        ? { changed: changedAppointmentById(appointmentChanges, editingAppointment.id!) }\n        : preCommitChanges!(appointmentChanges, editingAppointment, type);\n\n      onCommitChanges(changes);\n      this.cancelChangedAppointment();\n      this.stopEditAppointment();\n    };\n\n    this.commitAddedAppointment = () => {\n      const { onCommitChanges } = this.props;\n      const { addedAppointment: stateAddedAppointment } = this.state;\n      onCommitChanges({\n        added: stateAddedAppointment,\n      });\n    };\n\n    this.commitDeletedAppointment = ({ deletedAppointmentData, type = 'current' }) => {\n      const { onCommitChanges, preCommitChanges } = this.props;\n\n      const changes = deletedAppointmentData.rRule\n        ? preCommitChanges!(null, deletedAppointmentData, type)\n        : { deleted: deletedAppointmentData.id };\n      onCommitChanges(changes);\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      editingAppointment = prevState.editingAppointment,\n      appointmentChanges = prevState.appointmentChanges,\n      addedAppointment = prevState.addedAppointment,\n    } = nextProps;\n\n    return {\n      editingAppointment,\n      appointmentChanges,\n      addedAppointment,\n    };\n  }\n\n  render() {\n    const { addedAppointment, editingAppointment, appointmentChanges } = this.state;\n\n    return (\n      <Plugin\n        name=\"EditingState\"\n      >\n        <Getter name=\"editingAppointment\" value={editingAppointment} />\n        <Action name=\"startEditAppointment\" action={this.startEditAppointment} />\n        <Action name=\"stopEditAppointment\" action={this.stopEditAppointment} />\n\n        <Getter name=\"appointmentChanges\" value={appointmentChanges} />\n        <Action name=\"changeAppointment\" action={this.changeAppointment} />\n        <Action name=\"cancelChangedAppointment\" action={this.cancelChangedAppointment} />\n        <Action name=\"commitChangedAppointment\" action={this.commitChangedAppointment} />\n\n        <Getter name=\"addedAppointment\" value={addedAppointment} />\n        <Action name=\"addAppointment\" action={this.addAppointment} />\n        <Action name=\"changeAddedAppointment\" action={this.changeAddedAppointment} />\n        <Action name=\"cancelAddedAppointment\" action={this.cancelAddedAppointment} />\n        <Action name=\"commitAddedAppointment\" action={this.commitAddedAppointment} />\n\n        <Action name=\"commitDeletedAppointment\" action={this.commitDeletedAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the scheduler appointment editing state. */\nexport const EditingState: React.ComponentType<EditingStateProps> = EditingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  createStateHelper,\n  StateHelper,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  OPEN_COMMAND_BUTTON,\n  CLOSE_COMMAND_BUTTON,\n  DELETE_COMMAND_BUTTON,\n  setAppointmentMeta,\n  AppointmentMeta,\n  TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n  getAppointmentResources,\n} from '@devexpress/dx-scheduler-core';\n\nimport { AppointmentTooltipProps, AppointmentTooltipState, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n  { name: 'EditingState', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst commandButtonIds = {\n  open: OPEN_COMMAND_BUTTON,\n  close: CLOSE_COMMAND_BUTTON,\n  delete: DELETE_COMMAND_BUTTON,\n};\n\nclass AppointmentTooltipBase extends React.PureComponent<\n  AppointmentTooltipProps, AppointmentTooltipState\n> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentMeta: (appointmentMeta: AppointmentMeta) => void;\n  onAppointmentClick: (appointmentMeta: AppointmentMeta) => void;\n\n  static defaultProps: Partial<AppointmentTooltipProps> = {\n    showOpenButton: false,\n    showDeleteButton: false,\n    showCloseButton: false,\n  };\n  static components: PluginComponents = {\n    layoutComponent: 'Layout',\n    headerComponent: 'Header',\n    contentComponent: 'Content',\n    commandButtonComponent: 'CommandButton',\n    recurringIconComponent: 'RecurringIcon',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentMeta: props.appointmentMeta,\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentMeta: () => {\n          const { onAppointmentMetaChange } = this.props;\n          return onAppointmentMetaChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentMeta = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentMeta', setAppointmentMeta);\n    this.onAppointmentClick = ({ target, data }) => {\n      this.setAppointmentMeta({ target, data });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentMeta = prevState.appointmentMeta,\n    } = nextProps;\n    return {\n      appointmentMeta,\n      visible,\n    };\n  }\n\n  render() {\n    const {\n      showOpenButton,\n      showDeleteButton,\n      showCloseButton,\n      layoutComponent: Layout,\n      headerComponent,\n      contentComponent,\n      commandButtonComponent,\n      recurringIconComponent,\n    } = this.props;\n    const { visible, appointmentMeta } = this.state;\n\n    return (\n      <Plugin\n        name=\"AppointmentTooltip\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"timeTable\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({\n              formatDate, resources, plainResources,\n            }, {\n              finishDeleteAppointment, openDeleteConfirmationDialog,\n            }) => {\n              const onDeleteButtonClick = () => {\n                if (!finishDeleteAppointment) {\n                  return;\n                }\n                if (openDeleteConfirmationDialog) {\n                  openDeleteConfirmationDialog({\n                    hideActionName: TOGGLE_APPOINTMENT_TOOLTIP_VISIBILITY,\n                    appointmentData: appointmentMeta.data,\n                  });\n                } else {\n                  this.toggleVisibility();\n                  finishDeleteAppointment(appointmentMeta.data);\n                }\n              };\n              return (\n                <TemplatePlaceholder\n                  name=\"tooltip\"\n                  params={{\n                    commandButtonComponent,\n                    recurringIconComponent,\n                    showOpenButton,\n                    showDeleteButton,\n                    showCloseButton,\n                    headerComponent,\n                    contentComponent,\n                    appointmentMeta,\n                    appointmentResources: appointmentMeta ? getAppointmentResources(\n                      appointmentMeta.data as any, resources, plainResources,\n                    ) : [],\n                    visible,\n                    onHide: this.toggleVisibility,\n                    commandButtonIds,\n                    onDeleteButtonClick,\n                    formatDate,\n                  }}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: any) => <Layout {...params} />}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplatePlaceholder\n              params={{\n                ...params,\n                onClick: ({ target, data }) =>\n                 this.onAppointmentClick({ target, data }),\n              }}\n            />\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n// tslint:disable: max-line-length\n/** The AppointmentTooltip plugin allows you to display information about an appointment in a tooltip. */\nexport const AppointmentTooltip: React.ComponentType<AppointmentTooltipProps> = AppointmentTooltipBase;\n","import * as React from 'react';\nimport { getMessagesFormatter, memoize } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  createStateHelper,\n  StateHelper,\n  TemplateConnector,\n  TemplatePlaceholder,\n  PluginComponents,\n  Action,\n} from '@devexpress/dx-react-core';\nimport {\n  setAppointmentData,\n  isAllDayCell,\n  callActionIfExists,\n  AppointmentModel,\n  TOGGLE_APPOINTMENT_FORM_VISIBILITY,\n  getAppointmentResources,\n  ValidResourceInstance,\n  checkMultipleResourceFields,\n} from '@devexpress/dx-scheduler-core';\n\nimport {\n  AppointmentFormProps, AppointmentFormState, AppointmentTooltip, Appointments,\n} from '../types';\n\nconst addDoubleClickToCell = (\n  title, startDate, endDate, groupingInfo, resources,\n  allDay, openFormHandler, addAppointment, params,\n) => {\n  const resourceFields = !!groupingInfo\n    ? groupingInfo.reduce((acc, currentGroup) => (\n      { ...acc, [currentGroup.fieldName]: currentGroup.id }\n    ), {}) : {};\n  const validResourceFields = resources\n    ? checkMultipleResourceFields(resourceFields, resources)\n    : resourceFields;\n\n  const newAppointmentData = {\n    title,\n    startDate,\n    endDate,\n    allDay,\n    ...validResourceFields,\n  };\n\n  return (\n    <TemplatePlaceholder\n      params={{\n        ...params,\n        onDoubleClick: () => {\n          openFormHandler(newAppointmentData);\n          callActionIfExists(addAppointment,\n            { appointmentData: newAppointmentData });\n        },\n      }}\n    />\n  );\n};\n\nconst defaultMessages = {\n  allDayLabel: 'All Day',\n  titleLabel: 'Title',\n  commitCommand: 'Save',\n  detailsLabel: 'Details',\n  moreInformationLabel: 'More Information',\n  repeatLabel: 'Repeat',\n  notesLabel: 'Notes',\n  never: 'Never',\n  daily: 'Daily',\n  weekly: 'Weekly',\n  monthly: 'Monthly',\n  yearly: 'Yearly',\n  repeatEveryLabel: 'Repeat every',\n  daysLabel: 'day(s)',\n  endRepeatLabel: 'End repeat',\n  onLabel: 'On',\n  afterLabel: 'After',\n  occurrencesLabel: 'occurrence(s)',\n  weeksOnLabel: 'week(s) on:',\n  monthsLabel: 'month(s)',\n  ofEveryMonthLabel: 'of every month',\n  theLabel: 'The',\n  firstLabel: 'First',\n  secondLabel: 'Second',\n  thirdLabel: 'Third',\n  fourthLabel: 'Fourth',\n  lastLabel: 'Last',\n  yearsLabel: 'year(s)',\n  ofLabel: 'of ',\n  everyLabel: 'Every',\n};\n\nconst CommandLayoutPlaceholder = () => <TemplatePlaceholder name=\"commandLayout\" />;\nconst BasicLayoutPlaceholder = () => <TemplatePlaceholder name=\"basicLayout\" />;\nconst RecurrenceLayoutPlaceholder = () => <TemplatePlaceholder name=\"recurrenceLayout\" />;\n\nconst pluginDependencies = [\n  { name: 'EditingState', optional: true },\n  { name: 'Appointments', optional: true },\n  { name: 'AppointmentTooltip', optional: true },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst prepareChanges = (\n  appointmentData, editingAppointment,\n  addedAppointment, appointmentChanges,\n  resources, plainResources,\n) => {\n  const isNew = !editingAppointment;\n  const changedAppointment = {\n    ...appointmentData,\n    ...appointmentChanges,\n    ...isNew && addedAppointment,\n  };\n  const appointmentResources = getAppointmentResources(\n    changedAppointment, resources, plainResources,\n  );\n  const isFormEdited = isNew || Object.getOwnPropertyNames(appointmentChanges).length !== 0;\n  return { changedAppointment, appointmentResources, isNew, isFormEdited };\n};\n\nconst isFormFullSize = (\n  isFormVisible, changedAppointmentRRule, previousAppointmentRRule,\n) => !!changedAppointmentRRule || (!isFormVisible && !!previousAppointmentRRule);\n\nclass AppointmentFormBase extends React.PureComponent<AppointmentFormProps, AppointmentFormState> {\n  toggleVisibility: (payload?: any) => void;\n  setAppointmentData: (payload: any) => void;\n  openFormHandler: (payload: AppointmentModel) => void;\n  container = React.createRef();\n\n  static defaultProps: Partial<AppointmentFormProps> = {\n    messages: {},\n    readOnly: false,\n    onVisibilityChange: () => undefined,\n    onAppointmentDataChange: () => undefined,\n  };\n  static components: PluginComponents = {\n    overlayComponent: 'Overlay',\n    layoutComponent: 'Layout',\n    commandLayoutComponent: 'CommandLayout',\n    commandButtonComponent: 'CommandButton',\n    basicLayoutComponent: 'BasicLayout',\n    textEditorComponent: 'TextEditor',\n    labelComponent: 'Label',\n    dateEditorComponent: 'DateEditor',\n    booleanEditorComponent: 'BooleanEditor',\n    selectComponent: 'Select',\n    recurrenceLayoutComponent: 'RecurrenceLayout',\n    radioGroupComponent: 'RadioGroup',\n    weeklyRecurrenceSelectorComponent: 'WeeklyRecurrenceSelector',\n    resourceEditorComponent: 'ResourceEditor',\n    containerComponent: 'Container',\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: props.visible,\n      appointmentData: props.appointmentData || {},\n      previousAppointment: props.appointmentData || {},\n    };\n\n    const stateHelper: StateHelper = createStateHelper(\n      this,\n      {\n        visible: () => {\n          const { onVisibilityChange } = this.props;\n          return onVisibilityChange;\n        },\n        appointmentData: () => {\n          const { onAppointmentDataChange } = this.props;\n          return onAppointmentDataChange;\n        },\n      },\n    );\n\n    const toggleVisibility = () => {\n      const { visible: isOpen } = this.state;\n      return !isOpen;\n    };\n    this.toggleVisibility = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'visible', toggleVisibility);\n    this.setAppointmentData = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'appointmentData', setAppointmentData);\n\n    this.openFormHandler = (appointmentData) => {\n      this.setAppointmentData({ appointmentData });\n      this.toggleVisibility();\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      visible = prevState.visible,\n      appointmentData = prevState.appointmentData,\n    } = nextProps;\n    return {\n      appointmentData,\n      visible,\n    };\n  }\n\n  commitChanges = memoize((\n    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n  ) => () =>  {\n    this.toggleVisibility();\n    if (isNew) {\n      callActionIfExists(commitAddedAppointment, changedAppointment);\n    } else if (finishCommitAppointment) {\n      finishCommitAppointment();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  cancelChanges = memoize((\n    openCancelConfirmationDialog, isNew, stopEditAppointment, appointmentChanges,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    if (openCancelConfirmationDialog && Object.keys(appointmentChanges).length !== 0) {\n      openCancelConfirmationDialog(TOGGLE_APPOINTMENT_FORM_VISIBILITY);\n    } else {\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentChanges);\n      } else {\n        callActionIfExists(stopEditAppointment, appointmentChanges);\n        callActionIfExists(cancelChangedAppointment, appointmentChanges);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  deleteAppointment = memoize((\n    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n    stopEditAppointment, isNew,\n  ) => () => {\n    if (openDeleteConfirmationDialog) {\n      openDeleteConfirmationDialog({\n        hideActionName: TOGGLE_APPOINTMENT_FORM_VISIBILITY, appointmentData: changedAppointment,\n      });\n    } else {\n      callActionIfExists(finishDeleteAppointment, appointmentData);\n      if (isNew) {\n        callActionIfExists(cancelAddedAppointment, appointmentData);\n      } else {\n        callActionIfExists(cancelChangedAppointment, appointmentData);\n        callActionIfExists(stopEditAppointment, appointmentData);\n      }\n      this.toggleVisibility();\n    }\n    this.setState({ previousAppointment: changedAppointment });\n  });\n\n  changeAppointmentField = memoize((isNew, changeAddedAppointment, changeAppointment) =>\n    (change) => {\n      if (change && change.rRule) {\n        this.setState({ previousAppointment: {\n          ...this.state.previousAppointment, rRule: change.rRule,\n        }});\n      }\n      if (isNew) {\n        callActionIfExists(changeAddedAppointment, { change });\n      } else {\n        callActionIfExists(changeAppointment, { change });\n      }\n    },\n  );\n\n  getMessage = memoize((menuMessages, messages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const {\n      containerComponent: Container,\n      overlayComponent: Overlay,\n      layoutComponent: Layout,\n      commandLayoutComponent: CommandLayout,\n      basicLayoutComponent: BasicLayout,\n      recurrenceLayoutComponent: RecurrenceLayout,\n      commandButtonComponent,\n      textEditorComponent,\n      labelComponent,\n      dateEditorComponent,\n      booleanEditorComponent,\n      selectComponent,\n      radioGroupComponent,\n      weeklyRecurrenceSelectorComponent,\n      resourceEditorComponent,\n      readOnly,\n      messages,\n    } = this.props;\n    const { visible, appointmentData, previousAppointment } = this.state;\n    const getMessage = this.getMessage(defaultMessages, messages);\n    return (\n      <Plugin\n        name=\"AppointmentForm\"\n        dependencies={pluginDependencies}\n      >\n        <Action name={TOGGLE_APPOINTMENT_FORM_VISIBILITY} action={this.toggleVisibility} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              openCancelConfirmationDialog,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n            }) => {\n              const { changedAppointment, isNew } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const fullSize = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const onHideAction = () => visible && this.cancelChanges(\n                openCancelConfirmationDialog, isNew, stopEditAppointment,\n                { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                cancelAddedAppointment, cancelChangedAppointment,\n              )();\n\n              return (\n                <React.Fragment>\n                  <Container ref={this.container} />\n                  <Overlay\n                    visible={visible}\n                    onHide={onHideAction}\n                    fullSize={fullSize}\n                    target={this.container}\n                  >\n                    <Layout\n                      basicLayoutComponent={BasicLayoutPlaceholder}\n                      commandLayoutComponent={CommandLayoutPlaceholder}\n                      recurrenceLayoutComponent={RecurrenceLayoutPlaceholder}\n                      isRecurrence={fullSize}\n                    />\n                  </Overlay>\n                  <TemplatePlaceholder />\n                </React.Fragment>);\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"commandLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n\n              resources,\n              plainResources,\n            }, {\n              commitAddedAppointment,\n              finishCommitAppointment,\n              finishDeleteAppointment,\n\n              stopEditAppointment,\n              cancelAddedAppointment,\n              cancelChangedAppointment,\n\n              openCancelConfirmationDialog,\n              openDeleteConfirmationDialog,\n            }) => {\n              const { isNew, changedAppointment, isFormEdited } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              const isRecurrence = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              return (\n                <CommandLayout\n                  commandButtonComponent={commandButtonComponent}\n                  onCommitButtonClick={this.commitChanges(\n                    finishCommitAppointment, commitAddedAppointment, isNew, changedAppointment,\n                  )}\n                  onCancelButtonClick={this.cancelChanges(\n                    openCancelConfirmationDialog, isNew, stopEditAppointment,\n                    { ...appointmentChanges, ...addedAppointment }, changedAppointment,\n                    cancelAddedAppointment, cancelChangedAppointment,\n                  )}\n                  onDeleteButtonClick={this.deleteAppointment(\n                    finishDeleteAppointment, appointmentData, openDeleteConfirmationDialog,\n                    changedAppointment, cancelAddedAppointment, cancelChangedAppointment,\n                    stopEditAppointment, isNew,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  fullSize={isRecurrence}\n                  disableSaveButton={!isFormEdited}\n                  hideDeleteButton={isNew}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"basicLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              locale,\n\n              resources,\n              plainResources,\n            }, {\n              changeAppointment,\n              changeAddedAppointment,\n            }) => {\n              const { isNew, changedAppointment, appointmentResources } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                resources, plainResources,\n              );\n              return (\n                <BasicLayout\n                  locale={locale}\n                  appointmentData={visible ? changedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  booleanEditorComponent={booleanEditorComponent}\n                  selectComponent={selectComponent}\n                  labelComponent={labelComponent}\n                  resourceEditorComponent={resourceEditorComponent}\n                  fullSize={!changedAppointment.rRule}\n                  resources={resources}\n                  appointmentResources={appointmentResources as Array<ValidResourceInstance>}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"recurrenceLayout\">\n          <TemplateConnector>\n            {({\n              editingAppointment,\n              addedAppointment,\n              appointmentChanges,\n              formatDate,\n              locale,\n              firstDayOfWeek,\n            }, {\n              changeAddedAppointment,\n              changeAppointment,\n            }) => {\n              const { isNew, changedAppointment } = prepareChanges(\n                appointmentData, editingAppointment,\n                addedAppointment, appointmentChanges,\n                undefined, undefined,\n              );\n              const isRecurrenceLayoutVisible = isFormFullSize(\n                visible, changedAppointment.rRule, previousAppointment.rRule,\n              );\n              const correctedAppointment = !changedAppointment.rRule\n                ? { ...changedAppointment, rRule: previousAppointment.rRule } : changedAppointment;\n\n              return (\n                <RecurrenceLayout\n                  locale={locale}\n                  appointmentData={visible ? correctedAppointment : previousAppointment}\n                  onFieldChange={this.changeAppointmentField(\n                    isNew, changeAddedAppointment, changeAppointment,\n                  )}\n                  getMessage={getMessage}\n                  readOnly={readOnly}\n                  formatDate={formatDate}\n                  textEditorComponent={textEditorComponent}\n                  dateEditorComponent={dateEditorComponent}\n                  radioGroupComponent={radioGroupComponent}\n                  weeklyRecurrenceSelectorComponent={weeklyRecurrenceSelectorComponent}\n                  labelComponent={labelComponent}\n                  selectComponent={selectComponent}\n                  visible={isRecurrenceLayoutVisible}\n                  firstDayOfWeek={firstDayOfWeek}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"tooltip\">\n          {(params: AppointmentTooltip.LayoutProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onOpenButtonClick: () => {\n                      this.openFormHandler(params.appointmentMeta!.data);\n                      callActionIfExists(startEditAppointment, params.appointmentMeta!.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"appointment\">\n          {(params: Appointments.AppointmentProps) => (\n            <TemplateConnector>\n              {(getters, { startEditAppointment }) => (\n                <TemplatePlaceholder\n                  params={{\n                    ...params,\n                    onDoubleClick: () => {\n                      this.openFormHandler(params.data);\n                      callActionIfExists(startEditAppointment, params.data);\n                    },\n                  }}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"cell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                isAllDayCell(params.startDate, params.endDate),\n                this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanelCell\">\n          {(params: any) => (\n            <TemplateConnector>\n              {({ resources }, { addAppointment }) => addDoubleClickToCell(\n                undefined, params.startDate, params.endDate, params.groupingInfo, resources,\n                true, this.openFormHandler, addAppointment, params,\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin >\n    );\n  }\n}\n\n// tslint:disable-next-line: max-line-length\n/** The AppointmentForm plugin renders a form that visualizes appointmentâ€™s data and allows a user to modify this data. */\nexport const AppointmentForm: React.ComponentType<AppointmentFormProps> = AppointmentFormBase;\n","import * as React from 'react';\nimport {\n  Plugin, Template, TemplatePlaceholder,\n  TemplateConnector, DropTarget, DragSource,\n  DragDropProvider as DragDropProviderCore,\n  PluginComponents, PlaceholderWithRef,\n} from '@devexpress/dx-react-core';\nimport {\n  cellIndex, cellData, cellType, getAppointmentStyle, intervalDuration, autoScroll,\n  calculateAppointmentTimeBoundaries, calculateInsidePart, RESIZE_TOP, RESIZE_BOTTOM,\n  POSITION_START, POSITION_END, getAppointmentResources, calculateAppointmentGroups,\n  appointmentDragged, calculateDraftAppointments,\n  HORIZONTAL_GROUP_ORIENTATION, VERTICAL_GROUP_ORIENTATION, SCROLL_SPEED_PX,\n} from '@devexpress/dx-scheduler-core';\nimport { DragDropProviderProps, DragDropProviderState } from '../types';\n\nconst renderAppointmentItems = (items, Wrapper, draftData) => (\n  items.length > 0 ? (\n    <Wrapper>\n      {items.map((draftAppointment, index) => (\n        <TemplatePlaceholder\n          name=\"draftAppointment\"\n          key={index.toString()}\n          params={{ data: draftData, draftAppointment }}\n        />\n      ))}\n    </Wrapper>\n  ) : (\n    null\n  )\n);\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'Appointments' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'AllDayPanel', optional: true },\n];\n\nclass DragDropProviderBase extends React.PureComponent<\n  DragDropProviderProps, DragDropProviderState\n> {\n  timeTableDraftAppointments: any = [];\n  allDayDraftAppointments: any = [];\n  offsetTimeTop: number | null = null;\n  appointmentStartTime: any = null;\n  appointmentEndTime: any = null;\n  appointmentGroupingInfo: any = {};\n\n  state: DragDropProviderState = {\n    startTime: null,\n    endTime: null,\n    appointmentGroupingInfo: null,\n    payload: null,\n    isOutside: false,\n    allowDrag: () => true,\n    allowResize: () => true,\n    appointmentContentTemplateKey: 0,\n    appointmentTopTemplateKey: 0,\n    appointmentBottomTemplateKey: 0,\n  };\n  static components: PluginComponents = {\n    containerComponent: 'Container',\n    draftAppointmentComponent: 'DraftAppointment',\n    sourceAppointmentComponent: 'SourceAppointment',\n    resizeComponent: 'Resize',\n  };\n  static defaultProps: Partial<DragDropProviderProps> = {\n    allowDrag: () => true,\n    allowResize: () => true,\n    scrollSpeed: SCROLL_SPEED_PX,\n  };\n  static getDerivedStateFromProps(\n    props: DragDropProviderProps, state: DragDropProviderState,\n  ): DragDropProviderState | null {\n    const isAllowDragSame = props.allowDrag === state.allowDrag;\n    const isAllowResizeSame = props.allowResize === state.allowResize;\n\n    if (isAllowDragSame && isAllowResizeSame) {\n      return null;\n    }\n\n    return {\n      ...state,\n      appointmentContentTemplateKey:\n        isAllowDragSame ? state.appointmentContentTemplateKey : Math.random(),\n      appointmentTopTemplateKey:\n        isAllowResizeSame ? state.appointmentTopTemplateKey : Math.random(),\n      appointmentBottomTemplateKey:\n        isAllowResizeSame ? state.appointmentBottomTemplateKey : Math.random(),\n      allowDrag: props.allowDrag,\n      allowResize: props.allowResize,\n    };\n\n  }\n\n  onPayloadChange(actions) {\n    return args => this.handlePayloadChange(args, actions);\n  }\n\n  calculateNextBoundaries(getters, actions, scrollSpeed) {\n    return args => this.calculateBoundaries(args, getters, actions, scrollSpeed);\n  }\n\n  resetCache() {\n    this.timeTableDraftAppointments = [];\n    this.allDayDraftAppointments = [];\n    this.offsetTimeTop = null;\n    this.appointmentStartTime = null;\n    this.appointmentEndTime = null;\n    this.appointmentGroupingInfo = {};\n\n    this.setState({\n      payload: null,\n      startTime: null,\n      endTime: null,\n      isOutside: false,\n    });\n  }\n\n  applyChanges(\n    startTime, endTime, payload, startEditAppointment, changeAppointment, appointmentGroupingInfo,\n  ) {\n    startEditAppointment(payload);\n    changeAppointment({\n      change: {\n        startDate: startTime,\n        endDate: endTime,\n        ...payload.allDay && { allDay: undefined },\n        ...this.appointmentGroupingInfo,\n      },\n    });\n    this.setState({ startTime, endTime, payload, isOutside: false, appointmentGroupingInfo });\n  }\n\n  handlePayloadChange({ payload }, { finishCommitAppointment }) {\n    const { isOutside } = this.state;\n    if (payload || !isOutside) return;\n\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  calculateBoundaries(\n    { payload, clientOffset },\n    {\n      viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays, currentView,\n      timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n      grouping, resources, groups, groupOrientation: getGroupOrientation, groupByDate,\n    },\n    { changeAppointment, startEditAppointment },\n    scrollSpeed,\n  ) {\n    if (clientOffset) {\n      autoScroll(clientOffset, scrollingStrategy, scrollSpeed);\n    }\n\n    const tableCellElementsMeta = timeTableElementsMeta;\n    const groupOrientation = getGroupOrientation\n      ? getGroupOrientation(currentView?.name)\n      : HORIZONTAL_GROUP_ORIENTATION;\n\n    // AllDayPanel doesn't always exist\n    const allDayCellsElementsMeta = allDayElementsMeta && allDayElementsMeta.getCellRects\n      ? allDayElementsMeta\n      : { getCellRects: [] };\n    const timeTableIndex = cellIndex(tableCellElementsMeta.getCellRects, clientOffset);\n    const allDayIndex = cellIndex(allDayCellsElementsMeta.getCellRects, clientOffset);\n\n    if (allDayIndex === -1 && timeTableIndex === -1) return;\n\n    const targetData = cellData(\n      timeTableIndex, allDayIndex, viewCellsData, allDayCellsData,\n    );\n    const targetType = cellType(targetData);\n    const insidePart = calculateInsidePart(\n      clientOffset.y, tableCellElementsMeta.getCellRects, timeTableIndex,\n    );\n    const cellDurationMinutes = intervalDuration(targetData, 'minutes');\n\n    const {\n      appointmentStartTime, appointmentEndTime, offsetTimeTop,\n    } = calculateAppointmentTimeBoundaries(\n      payload, targetData, targetType, cellDurationMinutes,\n      insidePart, this.offsetTimeTop!,\n    );\n\n    const appointmentGroups = calculateAppointmentGroups(\n      targetData.groupingInfo, resources, payload,\n    );\n\n    this.appointmentStartTime = appointmentStartTime || this.appointmentStartTime;\n    this.appointmentEndTime = appointmentEndTime || this.appointmentEndTime;\n    this.appointmentGroupingInfo = appointmentGroups || this.appointmentGroupingInfo;\n    this.offsetTimeTop = offsetTimeTop!;\n\n    const { startTime, endTime, appointmentGroupingInfo } = this.state;\n    if (!appointmentDragged(\n      this.appointmentStartTime, startTime!,\n      this.appointmentEndTime, endTime!,\n      this.appointmentGroupingInfo, appointmentGroupingInfo,\n    )) {\n      return;\n    }\n\n    const draftAppointments = [{\n      dataItem: {\n        ...payload,\n        startDate: this.appointmentStartTime,\n        endDate: this.appointmentEndTime,\n        ...this.appointmentGroupingInfo,\n      },\n      start: this.appointmentStartTime,\n      end: this.appointmentEndTime,\n    }];\n\n    const {\n      allDayDraftAppointments,\n      timeTableDraftAppointments,\n    } = calculateDraftAppointments(\n      allDayIndex, draftAppointments, startViewDate,\n      endViewDate, excludedDays, viewCellsData, allDayCellsElementsMeta,\n      targetType, cellDurationMinutes, tableCellElementsMeta, grouping, resources, groups,\n      groupOrientation, groupByDate?.(currentView?.name),\n    );\n\n    this.allDayDraftAppointments = allDayDraftAppointments;\n    this.timeTableDraftAppointments = timeTableDraftAppointments;\n\n    this.applyChanges(\n      this.appointmentStartTime, this.appointmentEndTime,\n      payload, startEditAppointment, changeAppointment,\n      this.appointmentGroupingInfo,\n    );\n  }\n\n  handleDrop = ({ finishCommitAppointment }) => () => {\n    finishCommitAppointment();\n    this.resetCache();\n  }\n\n  handleLeave = () => {\n    this.setState({ isOutside: true });\n  }\n\n  render() {\n    const {\n      payload, appointmentContentTemplateKey,\n      appointmentBottomTemplateKey, appointmentTopTemplateKey,\n    } = this.state;\n    const {\n      containerComponent: Container,\n      draftAppointmentComponent: DraftAppointment,\n      sourceAppointmentComponent: SourceAppointment,\n      resizeComponent: Resize,\n      allowDrag,\n      allowResize,\n      scrollSpeed,\n    } = this.props;\n\n    const draftData = {\n      ...payload, startDate: this.appointmentStartTime, endDate: this.appointmentEndTime,\n    };\n\n    return (\n      <Plugin\n        name=\"DragDropProvider\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"body\">\n          <TemplateConnector>\n            {({\n              viewCellsData, allDayCellsData, startViewDate, endViewDate, excludedDays,\n              timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n              grouping, resources, groups, currentView, groupByDate, groupOrientation,\n            }, {\n              changeAppointment, startEditAppointment, finishCommitAppointment,\n            }) => {\n              const calculateBoundariesByMove = this.calculateNextBoundaries({\n                viewCellsData, allDayCellsData, currentView,\n                startViewDate, endViewDate, excludedDays,\n                timeTableElementsMeta, allDayElementsMeta, scrollingStrategy,\n                resources, grouping, groups, groupByDate, groupOrientation,\n              }, { changeAppointment, startEditAppointment }, scrollSpeed);\n              return (\n                <DragDropProviderCore\n                  onChange={this.onPayloadChange({ finishCommitAppointment })}\n                >\n                  <DropTarget\n                    onOver={calculateBoundariesByMove}\n                    onEnter={calculateBoundariesByMove}\n                    onDrop={this.handleDrop({ finishCommitAppointment })}\n                    onLeave={this.handleLeave}\n                  >\n                    <PlaceholderWithRef />\n                  </DropTarget>\n                </DragDropProviderCore>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n\n        <Template\n          name=\"appointmentContent\"\n          predicate={({ data }: any) => allowDrag!(data)}\n          key={appointmentContentTemplateKey}\n        >\n          {({ styles, ...params }: any) => (\n            <DragSource\n              payload={{ ...params.data, type: params.type }}\n            >\n              {payload && params.data.id === payload.id ? (\n                <SourceAppointment {...params} />\n              ) : (\n                <PlaceholderWithRef params={{ ...params, draggable: true }} />\n              )}\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentTop\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentTopTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_TOP, appointmentType: type }}\n            >\n              <Resize position={POSITION_START} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template\n          name=\"appointmentBottom\"\n          predicate={(params: any) => !params.slice && allowResize!(params.data)}\n          key={appointmentBottomTemplateKey}\n        >\n          {({ data, type }: any) => (\n            <DragSource\n              payload={{ ...data, type: RESIZE_BOTTOM, appointmentType: type }}\n            >\n              <Resize position={POSITION_END} appointmentType={type} />\n            </DragSource>\n          )}\n        </Template>\n\n        <Template name=\"allDayPanel\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {groupOrientation?.(currentView.name) !== VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"timeTable\">\n          <TemplateConnector>\n            {({ currentView, groupOrientation }) => (\n              <>\n                <TemplatePlaceholder />\n                {renderAppointmentItems(this.timeTableDraftAppointments, Container, draftData)}\n                {groupOrientation?.(currentView.name) === VERTICAL_GROUP_ORIENTATION\n                  ? renderAppointmentItems(this.allDayDraftAppointments, Container, draftData)\n                  : null}\n              </>\n            )}\n          </TemplateConnector>\n        </Template>\n\n        <Template name=\"draftAppointment\">\n          {({ data, draftAppointment, ...restParams }: any) => (\n            <TemplateConnector>\n              {({ formatDate, resources, plainResources }) => {\n                const {\n                  dataItem, type, fromPrev, toNext, durationType, ...geometry\n                } = draftAppointment;\n                return (\n                  <DraftAppointment\n                    data={data}\n                    resources={getAppointmentResources(dataItem, resources, plainResources)}\n                    durationType={durationType}\n                    style={getAppointmentStyle(geometry)}\n                    type={type}\n                    fromPrev={fromPrev}\n                    toNext={toNext}\n                    formatDate={formatDate}\n                    {...restParams}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that enables users to edit appointments via drag-and-drop. */\nexport const DragDropProvider: React.ComponentType<DragDropProviderProps> = DragDropProviderBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { TodayButtonProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Toolbar' },\n  { name: 'ViewState' },\n];\n\nconst defaultMessages = {\n  today: 'Today',\n};\n\nclass TodayButtonBase extends React.PureComponent<TodayButtonProps> {\n  static components: PluginComponents = {\n    buttonComponent: 'Button',\n  };\n  render() {\n    const {\n      buttonComponent: Button,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n\n    return (\n      <Plugin\n        name=\"TodayButton\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {(getters, {\n              changeCurrentDate,\n            }) => {\n              const setCurrentDate = nextDate => changeCurrentDate({\n                nextDate,\n              });\n              return (\n                <Button\n                  getMessage={getMessage}\n                  setCurrentDate={setCurrentDate}\n                />\n              );\n            }}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the Scheduler's button which sets the current date to today's date. */\nexport const TodayButton: React.ComponentType<TodayButtonProps> = TodayButtonBase;\n","import * as React from 'react';\nimport { memoize, getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin, Template, TemplatePlaceholder, TemplateConnector, Action, Getters, Actions,\n} from '@devexpress/dx-react-core';\nimport { RECURRENCE_EDIT_SCOPE } from '@devexpress/dx-scheduler-core';\nimport { EditRecurrenceMenuProps, EditRecurrenceMenuState } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nconst defaultAvailableOperations = [\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT },\n  { value: RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING },\n  { value: RECURRENCE_EDIT_SCOPE.ALL },\n];\n\nconst defaultMessages = {\n  [RECURRENCE_EDIT_SCOPE.CURRENT]: 'This appointment',\n  [RECURRENCE_EDIT_SCOPE.CURRENT_AND_FOLLOWING]: 'This and following appointments',\n  [RECURRENCE_EDIT_SCOPE.ALL]: 'All appointments',\n  menuEditingTitle: 'Edit recurring appointment',\n  menuDeletingTitle: 'Delete recurring appointment',\n  cancelButton: 'Cancel',\n  commitButton: 'OK',\n};\n\nclass EditRecurrenceMenuBase extends React.PureComponent<\n  EditRecurrenceMenuProps, EditRecurrenceMenuState\n> {\n  static components = {\n    layoutComponent: 'Layout',\n    overlayComponent: 'Overlay',\n    buttonComponent: 'Button',\n    containerComponent: 'Container',\n  };\n\n  modalContainer = React.createRef();\n\n  state = {\n    isOpen: false,\n    deletedAppointmentData: null,\n  };\n\n  finishCommitAppointment = (\n    payload,\n    { editingAppointment }: Getters,\n    { commitChangedAppointment }: Actions,\n  ) => {\n    if (editingAppointment && !editingAppointment.rRule) {\n      commitChangedAppointment();\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: null,\n      });\n    }\n  }\n\n  finishDeleteAppointment = (\n    payload,\n    getters,\n    { commitDeletedAppointment }: Actions,\n  ) => {\n    if (payload && !payload.rRule) {\n      commitDeletedAppointment({ deletedAppointmentData: payload });\n    } else {\n      this.setState({\n        isOpen: true, deletedAppointmentData: payload,\n      });\n    }\n  }\n\n  commit = memoize((editAction, deleteAction, payload) => (type) => {\n    if (payload) {\n      deleteAction({ deletedAppointmentData: payload, type });\n    } else {\n      editAction(type);\n    }\n    this.closeMenu();\n  });\n\n  closeMenu = () => {\n    this.setState({ isOpen: false, deletedAppointmentData: null });\n  }\n\n  cancelEditing = memoize((cancelAction, stopEditAction) => () => {\n    stopEditAction();\n    cancelAction();\n    this.closeMenu();\n  });\n\n  availableOperations = memoize((getMessage, menuAvailableOperations) =>\n    menuAvailableOperations.map(({ value }) => ({\n      value,\n      title: getMessage([value]),\n    })));\n\n  getMessage = memoize((messages, menuMessages) =>\n    getMessagesFormatter({ ...menuMessages, ...messages }));\n\n  render() {\n    const { isOpen, deletedAppointmentData } = this.state;\n    const {\n      layoutComponent: Layout,\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      buttonComponent,\n      messages,\n    } = this.props;\n\n    const getMessage = this.getMessage(messages, defaultMessages);\n    const availableOperations = this.availableOperations(getMessage, defaultAvailableOperations);\n\n    return (\n      <Plugin\n        name=\"EditRecurrenceMenu\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n\n        <Template name=\"schedulerRoot\">\n          <TemplatePlaceholder />\n          <Container ref={this.modalContainer} />\n          <TemplatePlaceholder name=\"overlay\" />\n        </Template>\n\n        <Template name=\"overlay\">\n          <TemplateConnector>\n            {(getters, {\n              commitChangedAppointment, commitDeletedAppointment,\n              cancelChangedAppointment, stopEditAppointment,\n            }) => {\n              const commit = this.commit(\n                commitChangedAppointment, commitDeletedAppointment, deletedAppointmentData,\n              );\n              const cancelEditing = this.cancelEditing(\n                cancelChangedAppointment, stopEditAppointment,\n              );\n\n              return (\n                <Overlay\n                  target={this.modalContainer}\n                  visible={isOpen}\n                  onHide={this.closeMenu}\n                >\n                  <Layout\n                    isDeleting={!!deletedAppointmentData}\n                    buttonComponent={buttonComponent}\n                    handleClose={cancelEditing}\n                    commit={commit}\n                    availableOperations={availableOperations}\n                    getMessage={getMessage}\n                  />\n                </Overlay>\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/**\n * A plugin that renders the Scheduler's edit menu.\n * Should not be used with the `IntegratedEditing` plugin.\n */\nexport const EditRecurrenceMenu: React.ComponentType<\n  EditRecurrenceMenuProps\n> = EditRecurrenceMenuBase;\n","import * as React from 'react';\nimport { Action, Plugin, Actions } from '@devexpress/dx-react-core';\nimport { IntegratedEditingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n];\n\nclass IntegratedEditingBase extends React.PureComponent<IntegratedEditingProps> {\n  static defaultProps = {\n    totalCount: 0,\n  };\n\n  finishCommitAppointment = (payload, getters, { commitChangedAppointment }: Actions) => {\n    commitChangedAppointment();\n  }\n\n  finishDeleteAppointment = (payload, getters, { commitDeletedAppointment }: Actions) => {\n    commitDeletedAppointment({ deletedAppointmentData: payload });\n  }\n\n  render() {\n    return (\n      <Plugin\n        name=\"IntegratedEditing\"\n        dependencies={pluginDependencies}\n      >\n        <Action name=\"finishCommitAppointment\" action={this.finishCommitAppointment} />\n        <Action name=\"finishDeleteAppointment\" action={this.finishDeleteAppointment} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that allows implementing a editing calculation logic. */\nexport const IntegratedEditing: React.ComponentType<IntegratedEditingProps> = IntegratedEditingBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  convertResourcesToPlain, validateResources, addResourcesToAppointments,\n} from '@devexpress/dx-scheduler-core';\nimport { ResourcesProps } from '../types/resources/resources.types';\n\nconst pluginDependencies = [\n  { name: 'Appointments' },\n];\n\nconst addResourcesToTimeTableAppointments = ({\n  timeTableAppointments, resources, plainResources,\n}: Getters) => timeTableAppointments\n  && addResourcesToAppointments(timeTableAppointments[0], resources, plainResources);\nconst addResourcesToAllDayAppointments = ({\n    allDayAppointments, resources, plainResources,\n  }: Getters) => allDayAppointments\n    && addResourcesToAppointments(allDayAppointments[0], resources, plainResources);\n\nconst ResourcesBase: React.FunctionComponent<ResourcesProps> = React.memo(({\n  data, mainResourceName, palette,\n}) => {\n  const convertResources = ({ resources }: Getters) =>\n    convertResourcesToPlain(resources);\n\n  return (\n  <Plugin\n    name=\"Resources\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"resources\" value={validateResources(data, mainResourceName, palette)} />\n    <Getter name=\"plainResources\" computed={convertResources} />\n    <Getter name=\"timeTableAppointments\" computed={addResourcesToTimeTableAppointments} />\n    <Getter name=\"allDayAppointments\" computed={addResourcesToAllDayAppointments} />\n  </Plugin>\n  );\n});\n\n/** A plugin that manages schedule's resources. */\nexport const Resources: React.ComponentType<ResourcesProps> = ResourcesBase;\n","import * as React from 'react';\nimport { getMessagesFormatter } from '@devexpress/dx-core';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  Action,\n} from '@devexpress/dx-react-core';\nimport { ConfirmationDialogProps } from '../types/editing/confirmation-dialog.types';\nimport { AppointmentModel } from '@devexpress/dx-scheduler-core';\n\nconst defaultMessages = {\n  discardButton: 'Discard',\n  deleteButton: 'Delete',\n  cancelButton: 'Cancel',\n  confirmDeleteMessage: 'Are you sure you want to delete this appointment?',\n  confirmCancelMessage: 'Discard unsaved changes?',\n};\n\nconst pluginDependencies = [\n  { name: 'EditingState' },\n  { name: 'EditRecurrenceMenu', optional: true },\n  { name: 'IntegratedEditing', optional: true },\n];\n\nconst ACTION_TYPES = {\n  CANCEL: 'cancel',\n  DELETE: 'delete',\n};\n\nconst ConfirmationDialogBase: React.FunctionComponent<ConfirmationDialogProps> & {components: {\n  overlayComponent: string, containerComponent: string,\n  layoutComponent: string, buttonComponent: string,\n}} = ({\n  messages, overlayComponent: Overlay, layoutComponent: Layout, containerComponent: Container,\n  buttonComponent, ignoreDelete, ignoreCancel,\n}) => {\n  const getMessage = getMessagesFormatter({ ...defaultMessages, ...messages });\n  const modalContainer = React.useRef();\n\n  const [visible, setVisible] = React.useState(false);\n  const [actionType, setActionType] = React.useState('');\n  const [hideActionName, setHideActionName] = React.useState('');\n  const [appointmentData, setAppointmentData] = React.useState({});\n\n  const toggleVisibility = React.useCallback(() => {\n    setVisible(!visible);\n  }, [visible, setVisible]);\n\n  const confirmCancelChanges = React.useCallback((hideAction) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.CANCEL);\n  }, [toggleVisibility, setHideActionName, setActionType]);\n\n  const confirmDelete = React.useCallback(({\n    hideActionName: hideAction, appointmentData: changedAppointment,\n  }) => {\n    toggleVisibility();\n    setHideActionName(hideAction);\n    setActionType(ACTION_TYPES.DELETE);\n    setAppointmentData(changedAppointment);\n  }, [toggleVisibility, setHideActionName, setActionType, setAppointmentData]);\n\n  const confirmAction = React.useCallback((\n    isNewAppointment, hideEditor, stopEditAppointment, finishDeleteAppointment,\n    cancelAddedAppointment, cancelChangedAppointment,\n  ) => () => {\n    hideEditor();\n    toggleVisibility();\n    if (isNewAppointment) {\n      cancelAddedAppointment();\n    } else {\n      stopEditAppointment();\n      cancelChangedAppointment();\n    }\n    if (actionType === ACTION_TYPES.DELETE) {\n      finishDeleteAppointment(appointmentData);\n    }\n  }, [toggleVisibility, actionType, appointmentData]);\n\n  return (\n    <Plugin\n      name=\"ConfirmationDialog\"\n      dependencies={pluginDependencies}\n    >\n      {!ignoreCancel &&\n        <Action name=\"openCancelConfirmationDialog\" action={confirmCancelChanges} />\n      }\n      {!ignoreDelete &&\n        <Action name=\"openDeleteConfirmationDialog\" action={confirmDelete} />\n      }\n\n      <Template name=\"schedulerRoot\">\n        <TemplatePlaceholder />\n        <Container ref={modalContainer} />\n        <TemplatePlaceholder name=\"confirmationDialogOverlay\" />\n      </Template>\n\n      <Template name=\"confirmationDialogOverlay\">\n        <TemplateConnector>\n          {({\n            editingAppointment,\n          }, actions) => {\n            const handleConfirm = confirmAction(\n              !editingAppointment, actions[hideActionName], actions.stopEditAppointment,\n              actions.finishDeleteAppointment, actions.cancelAddedAppointment,\n              actions.cancelChangedAppointment,\n            );\n\n            return (\n              <Overlay\n                target={modalContainer}\n                visible={visible}\n                onHide={toggleVisibility}\n              >\n                <Layout\n                  buttonComponent={buttonComponent}\n                  handleCancel={toggleVisibility}\n                  handleConfirm={handleConfirm}\n                  getMessage={getMessage}\n                  isDeleting={actionType === ACTION_TYPES.DELETE}\n                  appointmentData={appointmentData as AppointmentModel}\n                />\n              </Overlay>\n            );\n          }}\n        </TemplateConnector>\n      </Template>\n    </Plugin>\n  );\n};\n\nConfirmationDialogBase.components = {\n  overlayComponent: 'Overlay',\n  containerComponent: 'Container',\n  layoutComponent: 'Layout',\n  buttonComponent: 'Button',\n};\n\nConfirmationDialogBase.defaultProps = {\n  ignoreCancel: false,\n  ignoreDelete: false,\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the dialog which allows users to confirm or to discard delete and cancel appointment actions. */\nexport const ConfirmationDialog: React.ComponentType<\n  ConfirmationDialogProps\n> = ConfirmationDialogBase;\n","import * as React from 'react';\nimport {\n  Action, Plugin, Getter, StateHelper, ActionFn, createStateHelper,\n} from '@devexpress/dx-react-core';\nimport {\n  ToggleGroupPayload, toggleExpandedGroups, HORIZONTAL_GROUP_ORIENTATION,\n} from '@devexpress/dx-scheduler-core';\nimport { GroupingStateProps, GroupingStateState } from '../types';\n\nclass GroupingStateBase extends React.PureComponent<GroupingStateProps, GroupingStateState> {\n  static defaultProps = {\n    defaultExpandedGroups: [],\n    groupByDate: () => false,\n    groupOrientation: () => HORIZONTAL_GROUP_ORIENTATION,\n  };\n  stateHelper: StateHelper;\n  toggleGroupExpanded: ActionFn<ToggleGroupPayload>;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.grouping,\n      expandedGroups: props.expandedGroups || props.defaultExpandedGroups,\n    };\n    this.stateHelper = createStateHelper(\n      this,\n      {\n        expandedGroups: () => {\n          const { onExpandedGroupsChange } = this.props;\n          return onExpandedGroupsChange;\n        },\n      },\n    );\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      grouping = prevState.grouping,\n      expandedGroups = prevState.expandedGroups,\n    } = nextProps;\n\n    return { grouping, expandedGroups };\n  }\n\n  render() {\n    const { grouping, expandedGroups } = this.state;\n    const { groupByDate, groupOrientation } = this.props;\n\n    return (\n      <Plugin name=\"GroupingState\">\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"groupByDate\" value={groupByDate} />\n        <Getter name=\"groupOrientation\" value={groupOrientation} />\n\n        <Getter name=\"expandedGroups\" value={expandedGroups} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that manages the grouping state. */\nexport const GroupingState: React.ComponentType<GroupingStateProps> = GroupingStateBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplateConnector,\n  PluginComponents,\n} from '@devexpress/dx-react-core';\nimport { GroupingPanelProps } from '../types';\nimport {\n  VERTICAL_VIEW_LEFT_OFFSET, HORIZONTAL_VIEW_LEFT_OFFSET,\n  HORIZONTAL_GROUP_ORIENTATION, VIEW_TYPES,\n} from '@devexpress/dx-scheduler-core';\n\nconst pluginDependencies = [\n  { name: 'GroupingState' },\n  { name: 'IntegratedGrouping' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'ViewState', optional: true },\n];\n\nclass GroupingPanelBase extends React.PureComponent<GroupingPanelProps> {\n  static components: PluginComponents = {\n    horizontalLayoutComponent: 'HorizontalLayout',\n    verticalLayoutComponent: 'VerticalLayout',\n    rowComponent: 'Row',\n    cellComponent: 'Cell',\n  };\n\n  render() {\n    const {\n      horizontalLayoutComponent: HorizontalLayout,\n      verticalLayoutComponent: VerticalLayout,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Plugin\n        name=\"GroupingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"groupingPanel\">\n          <TemplateConnector>\n            {({\n              viewCellsData, currentView, scrollingStrategy, allDayPanelExists,\n              groupByDate, groupOrientation: getGroupOrientation, groups,\n            }) => {\n              const groupOrientation = getGroupOrientation(currentView?.name);\n              return groupOrientation === HORIZONTAL_GROUP_ORIENTATION ? (\n                <HorizontalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  colSpan={viewCellsData[0].length}\n                  cellStyle={{\n                    left: scrollingStrategy.fixedLeftWidth ? scrollingStrategy.fixedLeftWidth\n                    : currentView?.type === VIEW_TYPES.MONTH\n                      ? HORIZONTAL_VIEW_LEFT_OFFSET\n                      : VERTICAL_VIEW_LEFT_OFFSET,\n                  }}\n                  showHeaderForEveryDate={groupByDate?.(currentView && currentView.name)}\n                />\n              ) : (\n                <VerticalLayout\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                  groups={groups}\n                  rowSpan={viewCellsData.length}\n                  viewType={currentView?.type}\n                  cellTextTopOffset={scrollingStrategy?.fixedTopHeight}\n                  alignWithAllDayRow={allDayPanelExists}\n                />\n              );\n            }}\n          </TemplateConnector>\n        </Template>\n      </Plugin>\n    );\n  }\n}\n\n/** A plugin that renders the grouping panel used to display group names. */\nexport const GroupingPanel: React.ComponentType<GroupingPanelProps> = GroupingPanelBase;\n","import * as React from 'react';\nimport {\n  Plugin,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  isMonthCell, isShadedAppointment,\n  isCellShaded, getCurrentTimeIndicatorTop,\n} from '@devexpress/dx-scheduler-core';\nimport { CurrentTimeIndicatorProps, Appointments } from '../types';\n\nconst pluginDependencies = [\n  { name: 'DayView', optional: true },\n  { name: 'WeekView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'DragDropProvider', optional: true },\n  { name: 'Appointments', optional: true },\n];\n\nconst CurrentTimeIndicatorBase: React.FunctionComponent<CurrentTimeIndicatorProps>  & {components: {\n  indicatorComponent: string,\n}} = ({\n  indicatorComponent, shadePreviousAppointments, shadePreviousCells, updateInterval,\n}) => {\n  const [currentTime, setCurrentTime] = React.useState(Date.now);\n\n  React.useEffect(() => {\n    const tick = () => setCurrentTime(Date.now());\n    const intervalId = (updateInterval\n      ? window.setInterval(tick, updateInterval)\n      : undefined\n    );\n    return () => window.clearInterval(intervalId);\n  }, [updateInterval]);\n\n  return (\n    <Plugin\n      name=\"CurrentTimeIndicator\"\n      dependencies={pluginDependencies}\n    >\n      <Template\n        name=\"cell\"\n        predicate={({ otherMonth }: any) => !isMonthCell(otherMonth)}\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              currentTimeIndicatorPosition: getCurrentTimeIndicatorTop(params, currentTime),\n              currentTimeIndicatorComponent: indicatorComponent,\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"cell\"\n      >\n        {(params: any) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isCellShaded(params, currentTime, shadePreviousCells),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"appointmentContent\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n      <Template\n        name=\"draftAppointment\"\n      >\n        {(params: Appointments.AppointmentProps) => (\n          <TemplatePlaceholder\n            params={{\n              ...params,\n              isShaded: isShadedAppointment(\n                params, currentTime, shadePreviousAppointments,\n              ),\n            }}\n          />\n        )}\n      </Template>\n    </Plugin>\n  );\n};\n\nCurrentTimeIndicatorBase.defaultProps = {\n  updateInterval: 60000,\n  shadePreviousCells: false,\n  shadePreviousAppointments: false,\n};\n\nCurrentTimeIndicatorBase.components = {\n  indicatorComponent: 'Indicator',\n};\n\n// tslint:disable-next-line: max-line-length\n/** A plugin that renders the current time indicator and the shading that covers appointments and timetable cells up to the current time. */\nexport const CurrentTimeIndicator: React.ComponentType<\n  CurrentTimeIndicatorProps\n> = CurrentTimeIndicatorBase;\n","import * as React from 'react';\nimport { Plugin, Getter, Getters } from '@devexpress/dx-react-core';\nimport {\n  getGroupsFromResources, expandViewCellsDataWithGroups,\n  sortFilteredResources, filterResourcesByGrouping, updateGroupingWithMainResource,\n  expandGroups, VERTICAL_GROUP_ORIENTATION, VIEW_TYPES,\n  updateTimeTableCellElementsMeta, updateAllDayCellElementsMeta, updateTimeCellsData,\n} from '@devexpress/dx-scheduler-core';\nimport { IntegratedGroupingProps } from '../types';\n\nconst pluginDependencies = [\n  { name: 'Resources' },\n  { name: 'GroupingState' },\n  { name: 'DayView', optional: true },\n  { name: 'MonthView', optional: true },\n  { name: 'WeekView', optional: true },\n];\n\nconst getViewCellsDataComputed = ({\n  viewCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => expandViewCellsDataWithGroups(\n  viewCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\nconst getAllDayCellsDataComputed = ({\n  allDayCellsData, groups, resourcesToGroupBy, groupByDate, currentView, groupOrientation,\n}: Getters) => allDayCellsData && expandViewCellsDataWithGroups(\n  allDayCellsData, groups, resourcesToGroupBy,\n  groupByDate(currentView.name), groupOrientation(currentView.name),\n);\n\nconst getGroupsComputed = (\n  { resourcesToGroupBy }: Getters,\n) => getGroupsFromResources(resourcesToGroupBy);\n\nconst getResourcesToGroupByComputed = (\n  { resources, grouping }: Getters,\n) => sortFilteredResources(filterResourcesByGrouping(resources, grouping), grouping);\n\nconst getGroupingComputed = (\n  { grouping, resources }: Getters,\n) => updateGroupingWithMainResource(grouping, resources);\n\nconst getTimeTableAppointmentsComputed = ({\n  timeTableAppointments, grouping, resourcesToGroupBy,\n  groups, groupByDate, currentView, excludedDays,\n}: Getters) => timeTableAppointments\n  && expandGroups(\n    timeTableAppointments, grouping, resourcesToGroupBy, groups,\n    excludedDays, groupByDate(currentView?.name) && currentView?.type === VIEW_TYPES.MONTH,\n  );\n\nconst getAllDayAppointmentsComputed = ({\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, groupByDate, currentView, excludedDays,\n  }: Getters) => allDayAppointments &&\n  expandGroups(\n    allDayAppointments, grouping, resourcesToGroupBy,\n    groups, excludedDays, groupByDate(currentView?.name),\n  );\n\nconst getGroupByDateComputed = ({\n  currentView, groupByDate, groupOrientation,\n}: Getters) => groupOrientation(currentView?.name) === VERTICAL_GROUP_ORIENTATION\n  ? () => false : groupByDate;\n\nconst getTimeTableElementsMetaComputed = ({\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateTimeTableCellElementsMeta(\n  timeTableElementsMeta, groupOrientation, groups, allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getAllDayElementsMetaComputed = ({\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n}: Getters) => updateAllDayCellElementsMeta(\n  allDayElementsMeta, timeTableElementsMeta, groupOrientation, groups,\n  allDayPanelExists, viewCellsData, currentView,\n);\n\nconst getTimeCellsDataComputed = ({\n  viewCellsData, timeCellsData,  currentView,\n  groups, resourcesToGroupBy, groupOrientation,\n}: Getters) => timeCellsData\n  && updateTimeCellsData(\n    viewCellsData,\n    timeCellsData,\n    groups,\n    resourcesToGroupBy,\n    groupOrientation(currentView.name),\n  );\n\nconst IntegratedGroupingBase: React.FunctionComponent<IntegratedGroupingProps> = React.memo(() => (\n  <Plugin\n    name=\"IntegratedGrouping\"\n    dependencies={pluginDependencies}\n  >\n    <Getter name=\"groupByDate\" computed={getGroupByDateComputed} />\n    <Getter name=\"grouping\" computed={getGroupingComputed} />\n    <Getter name=\"resourcesToGroupBy\" computed={getResourcesToGroupByComputed} />\n    <Getter name=\"groups\" computed={getGroupsComputed} />\n\n    <Getter name=\"viewCellsData\" computed={getViewCellsDataComputed} />\n    <Getter name=\"allDayCellsData\" computed={getAllDayCellsDataComputed} />\n    <Getter name=\"timeCellsData\" computed={getTimeCellsDataComputed} />\n\n    <Getter name=\"timeTableAppointments\" computed={getTimeTableAppointmentsComputed} />\n    <Getter name=\"allDayAppointments\" computed={getAllDayAppointmentsComputed} />\n\n    <Getter name=\"allDayElementsMeta\" computed={getAllDayElementsMetaComputed} />\n    <Getter name=\"timeTableElementsMeta\" computed={getTimeTableElementsMetaComputed} />\n  </Plugin>\n));\n\n/** A plugin that implements grouping. */\nexport const IntegratedGrouping: React.ComponentType<\n  IntegratedGroupingProps\n> = IntegratedGroupingBase;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}