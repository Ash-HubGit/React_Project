{"ast":null,"code":"import { RRule } from '../rrule';\nimport { empty, repeat, pymod } from '../helpers';\nexport function rebuildMonth(year, month, yearlen, mrange, wdaymask, options) {\n  var result = {\n    lastyear: year,\n    lastmonth: month,\n    nwdaymask: []\n  };\n  var ranges = [];\n  if (options.freq === RRule.YEARLY) {\n    if (empty(options.bymonth)) {\n      ranges = [[0, yearlen]];\n    } else {\n      for (var j = 0; j < options.bymonth.length; j++) {\n        month = options.bymonth[j];\n        ranges.push(mrange.slice(month - 1, month + 1));\n      }\n    }\n  } else if (options.freq === RRule.MONTHLY) {\n    ranges = [mrange.slice(month - 1, month + 1)];\n  }\n  if (empty(ranges)) {\n    return result;\n  }\n  // Weekly frequency won't get here, so we may not\n  // care about cross-year weekly periods.\n  result.nwdaymask = repeat(0, yearlen);\n  for (var j = 0; j < ranges.length; j++) {\n    var rang = ranges[j];\n    var first = rang[0];\n    var last = rang[1] - 1;\n    for (var k = 0; k < options.bynweekday.length; k++) {\n      var i = void 0;\n      var _a = options.bynweekday[k],\n        wday = _a[0],\n        n = _a[1];\n      if (n < 0) {\n        i = last + (n + 1) * 7;\n        i -= pymod(wdaymask[i] - wday, 7);\n      } else {\n        i = first + (n - 1) * 7;\n        i += pymod(7 - wdaymask[i] + wday, 7);\n      }\n      if (first <= i && i <= last) result.nwdaymask[i] = 1;\n    }\n  }\n  return result;\n}","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAAQ,UAAU;AAChC,SAASC,KAAK,EAAEC,MAAM,EAAEC,KAAK,QAAQ,YAAY;AAQjD,OAAM,SAAUC,YAAY,CAC1BC,IAAY,EACZC,KAAa,EACbC,OAAe,EACfC,MAAgB,EAChBC,QAAkB,EAClBC,OAAsB;EAEtB,IAAMC,MAAM,GAAc;IACxBC,QAAQ,EAAEP,IAAI;IACdQ,SAAS,EAAEP,KAAK;IAChBQ,SAAS,EAAE;GACZ;EAED,IAAIC,MAAM,GAAe,EAAE;EAC3B,IAAIL,OAAO,CAACM,IAAI,KAAKhB,KAAK,CAACiB,MAAM,EAAE;IACjC,IAAIhB,KAAK,CAACS,OAAO,CAACQ,OAAO,CAAC,EAAE;MAC1BH,MAAM,GAAG,CAAC,CAAC,CAAC,EAAER,OAAO,CAAC,CAAC;KACxB,MAAM;MACL,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,OAAO,CAACQ,OAAO,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QAC/Cb,KAAK,GAAGI,OAAO,CAACQ,OAAO,CAACC,CAAC,CAAC;QAC1BJ,MAAM,CAACM,IAAI,CAACb,MAAM,CAACc,KAAK,CAAChB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,CAAC,CAAC;;;GAGpD,MAAM,IAAII,OAAO,CAACM,IAAI,KAAKhB,KAAK,CAACuB,OAAO,EAAE;IACzCR,MAAM,GAAG,CAACP,MAAM,CAACc,KAAK,CAAChB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG,CAAC,CAAC,CAAC;;EAG/C,IAAIL,KAAK,CAACc,MAAM,CAAC,EAAE;IACjB,OAAOJ,MAAM;;EAGf;EACA;EACAA,MAAM,CAACG,SAAS,GAAGZ,MAAM,CAAC,CAAC,EAAEK,OAAO,CAAa;EAEjD,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAMK,IAAI,GAAGT,MAAM,CAACI,CAAC,CAAC;IACtB,IAAMM,KAAK,GAAGD,IAAI,CAAC,CAAC,CAAC;IACrB,IAAME,IAAI,GAAGF,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IAExB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGjB,OAAO,CAACkB,UAAU,CAACR,MAAM,EAAEO,CAAC,EAAE,EAAE;MAClD,IAAIE,CAAC;MACC,SAAYnB,OAAO,CAACkB,UAAU,CAACD,CAAC,CAAC;QAAhCG,IAAI;QAAEC,CAAC,QAAyB;MACvC,IAAIA,CAAC,GAAG,CAAC,EAAE;QACTF,CAAC,GAAGH,IAAI,GAAG,CAACK,CAAC,GAAG,CAAC,IAAI,CAAC;QACtBF,CAAC,IAAI1B,KAAK,CAACM,QAAQ,CAACoB,CAAC,CAAC,GAAGC,IAAI,EAAE,CAAC,CAAC;OAClC,MAAM;QACLD,CAAC,GAAGJ,KAAK,GAAG,CAACM,CAAC,GAAG,CAAC,IAAI,CAAC;QACvBF,CAAC,IAAI1B,KAAK,CAAC,CAAC,GAAGM,QAAQ,CAACoB,CAAC,CAAC,GAAGC,IAAI,EAAE,CAAC,CAAC;;MAEvC,IAAIL,KAAK,IAAII,CAAC,IAAIA,CAAC,IAAIH,IAAI,EAAEf,MAAM,CAACG,SAAS,CAACe,CAAC,CAAC,GAAG,CAAC;;;EAIxD,OAAOlB,MAAM;AACf","names":["RRule","empty","repeat","pymod","rebuildMonth","year","month","yearlen","mrange","wdaymask","options","result","lastyear","lastmonth","nwdaymask","ranges","freq","YEARLY","bymonth","j","length","push","slice","MONTHLY","rang","first","last","k","bynweekday","i","wday","n"],"sources":["../../../src/iterinfo/monthinfo.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module","externalDependencies":[]}